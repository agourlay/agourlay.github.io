<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="869.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="445142"><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (203 samples, 0.05%)</title><rect x="0.0009%" y="789" width="0.0456%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="203"/><text x="0.2509%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (116 samples, 0.03%)</title><rect x="0.0465%" y="789" width="0.0261%" height="15" fill="rgb(217,0,24)" fg:x="207" fg:w="116"/><text x="0.2965%" y="799.50"></text></g><g><title>__GI___libc_malloc (419 samples, 0.09%)</title><rect x="0.0739%" y="789" width="0.0941%" height="15" fill="rgb(221,193,54)" fg:x="329" fg:w="419"/><text x="0.3239%" y="799.50"></text></g><g><title>__GI___lll_lock_wake_private (120 samples, 0.03%)</title><rect x="0.1716%" y="789" width="0.0270%" height="15" fill="rgb(248,212,6)" fg:x="764" fg:w="120"/><text x="0.4216%" y="799.50"></text></g><g><title>_int_malloc (596 samples, 0.13%)</title><rect x="0.1990%" y="789" width="0.1339%" height="15" fill="rgb(208,68,35)" fg:x="886" fg:w="596"/><text x="0.4490%" y="799.50"></text></g><g><title>[anon] (1,569 samples, 0.35%)</title><rect x="0.0007%" y="805" width="0.3525%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1569"/><text x="0.2507%" y="815.50"></text></g><g><title>unlink_chunk (90 samples, 0.02%)</title><rect x="0.3329%" y="789" width="0.0202%" height="15" fill="rgb(207,160,47)" fg:x="1482" fg:w="90"/><text x="0.5829%" y="799.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (315 samples, 0.07%)</title><rect x="0.3534%" y="789" width="0.0708%" height="15" fill="rgb(228,23,34)" fg:x="1573" fg:w="315"/><text x="0.6034%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (112 samples, 0.03%)</title><rect x="0.5533%" y="757" width="0.0252%" height="15" fill="rgb(218,30,26)" fg:x="2463" fg:w="112"/><text x="0.8033%" y="767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (112 samples, 0.03%)</title><rect x="0.5533%" y="741" width="0.0252%" height="15" fill="rgb(220,122,19)" fg:x="2463" fg:w="112"/><text x="0.8033%" y="751.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (71 samples, 0.02%)</title><rect x="0.5625%" y="725" width="0.0159%" height="15" fill="rgb(250,228,42)" fg:x="2504" fg:w="71"/><text x="0.8125%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (747 samples, 0.17%)</title><rect x="0.4241%" y="789" width="0.1678%" height="15" fill="rgb(240,193,28)" fg:x="1888" fg:w="747"/><text x="0.6741%" y="799.50"></text></g><g><title>nom::multi::count::{{closure}} (172 samples, 0.04%)</title><rect x="0.5533%" y="773" width="0.0386%" height="15" fill="rgb(216,20,37)" fg:x="2463" fg:w="172"/><text x="0.8033%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (60 samples, 0.01%)</title><rect x="0.5785%" y="757" width="0.0135%" height="15" fill="rgb(206,188,39)" fg:x="2575" fg:w="60"/><text x="0.8285%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 0.01%)</title><rect x="0.5785%" y="741" width="0.0135%" height="15" fill="rgb(217,207,13)" fg:x="2575" fg:w="60"/><text x="0.8285%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 0.01%)</title><rect x="0.5785%" y="725" width="0.0135%" height="15" fill="rgb(231,73,38)" fg:x="2575" fg:w="60"/><text x="0.8285%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (60 samples, 0.01%)</title><rect x="0.5785%" y="709" width="0.0135%" height="15" fill="rgb(225,20,46)" fg:x="2575" fg:w="60"/><text x="0.8285%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60 samples, 0.01%)</title><rect x="0.5785%" y="693" width="0.0135%" height="15" fill="rgb(210,31,41)" fg:x="2575" fg:w="60"/><text x="0.8285%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60 samples, 0.01%)</title><rect x="0.5785%" y="677" width="0.0135%" height="15" fill="rgb(221,200,47)" fg:x="2575" fg:w="60"/><text x="0.8285%" y="687.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.01%)</title><rect x="0.5785%" y="661" width="0.0135%" height="15" fill="rgb(226,26,5)" fg:x="2575" fg:w="60"/><text x="0.8285%" y="671.50"></text></g><g><title>__GI___libc_malloc (455 samples, 0.10%)</title><rect x="0.5919%" y="789" width="0.1022%" height="15" fill="rgb(249,33,26)" fg:x="2635" fg:w="455"/><text x="0.8419%" y="799.50"></text></g><g><title>__GI___lll_lock_wait_private (76 samples, 0.02%)</title><rect x="0.6942%" y="789" width="0.0171%" height="15" fill="rgb(235,183,28)" fg:x="3090" fg:w="76"/><text x="0.9442%" y="799.50"></text></g><g><title>futex_wait (76 samples, 0.02%)</title><rect x="0.6942%" y="773" width="0.0171%" height="15" fill="rgb(221,5,38)" fg:x="3090" fg:w="76"/><text x="0.9442%" y="783.50"></text></g><g><title>futex_fatal_error (76 samples, 0.02%)</title><rect x="0.6942%" y="757" width="0.0171%" height="15" fill="rgb(247,18,42)" fg:x="3090" fg:w="76"/><text x="0.9442%" y="767.50"></text></g><g><title>__entry_text_start (160 samples, 0.04%)</title><rect x="0.8366%" y="773" width="0.0359%" height="15" fill="rgb(241,131,45)" fg:x="3724" fg:w="160"/><text x="1.0866%" y="783.50"></text></g><g><title>__GI___lll_lock_wake_private (719 samples, 0.16%)</title><rect x="0.7112%" y="789" width="0.1615%" height="15" fill="rgb(249,31,29)" fg:x="3166" fg:w="719"/><text x="0.9612%" y="799.50"></text></g><g><title>_int_malloc (558 samples, 0.13%)</title><rect x="0.8831%" y="789" width="0.1254%" height="15" fill="rgb(225,111,53)" fg:x="3931" fg:w="558"/><text x="1.1331%" y="799.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u16 (65 samples, 0.01%)</title><rect x="1.0120%" y="789" width="0.0146%" height="15" fill="rgb(238,160,17)" fg:x="4505" fg:w="65"/><text x="1.2620%" y="799.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (183 samples, 0.04%)</title><rect x="1.0266%" y="789" width="0.0411%" height="15" fill="rgb(214,148,48)" fg:x="4570" fg:w="183"/><text x="1.2766%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (254 samples, 0.06%)</title><rect x="1.2870%" y="773" width="0.0571%" height="15" fill="rgb(232,36,49)" fg:x="5729" fg:w="254"/><text x="1.5370%" y="783.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (254 samples, 0.06%)</title><rect x="1.2870%" y="757" width="0.0571%" height="15" fill="rgb(209,103,24)" fg:x="5729" fg:w="254"/><text x="1.5370%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (254 samples, 0.06%)</title><rect x="1.2870%" y="741" width="0.0571%" height="15" fill="rgb(229,88,8)" fg:x="5729" fg:w="254"/><text x="1.5370%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (254 samples, 0.06%)</title><rect x="1.2870%" y="725" width="0.0571%" height="15" fill="rgb(213,181,19)" fg:x="5729" fg:w="254"/><text x="1.5370%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (254 samples, 0.06%)</title><rect x="1.2870%" y="709" width="0.0571%" height="15" fill="rgb(254,191,54)" fg:x="5729" fg:w="254"/><text x="1.5370%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (254 samples, 0.06%)</title><rect x="1.2870%" y="693" width="0.0571%" height="15" fill="rgb(241,83,37)" fg:x="5729" fg:w="254"/><text x="1.5370%" y="703.50"></text></g><g><title>alloc::alloc::alloc (254 samples, 0.06%)</title><rect x="1.2870%" y="677" width="0.0571%" height="15" fill="rgb(233,36,39)" fg:x="5729" fg:w="254"/><text x="1.5370%" y="687.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (173 samples, 0.04%)</title><rect x="1.3441%" y="725" width="0.0389%" height="15" fill="rgb(226,3,54)" fg:x="5983" fg:w="173"/><text x="1.5941%" y="735.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (173 samples, 0.04%)</title><rect x="1.3441%" y="709" width="0.0389%" height="15" fill="rgb(245,192,40)" fg:x="5983" fg:w="173"/><text x="1.5941%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (173 samples, 0.04%)</title><rect x="1.3441%" y="693" width="0.0389%" height="15" fill="rgb(238,167,29)" fg:x="5983" fg:w="173"/><text x="1.5941%" y="703.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (173 samples, 0.04%)</title><rect x="1.3441%" y="677" width="0.0389%" height="15" fill="rgb(232,182,51)" fg:x="5983" fg:w="173"/><text x="1.5941%" y="687.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (95 samples, 0.02%)</title><rect x="1.3829%" y="725" width="0.0213%" height="15" fill="rgb(231,60,39)" fg:x="6156" fg:w="95"/><text x="1.6329%" y="735.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (95 samples, 0.02%)</title><rect x="1.3829%" y="709" width="0.0213%" height="15" fill="rgb(208,69,12)" fg:x="6156" fg:w="95"/><text x="1.6329%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (66 samples, 0.01%)</title><rect x="1.3894%" y="693" width="0.0148%" height="15" fill="rgb(235,93,37)" fg:x="6185" fg:w="66"/><text x="1.6394%" y="703.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (66 samples, 0.01%)</title><rect x="1.3894%" y="677" width="0.0148%" height="15" fill="rgb(213,116,39)" fg:x="6185" fg:w="66"/><text x="1.6394%" y="687.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (73 samples, 0.02%)</title><rect x="1.4238%" y="645" width="0.0164%" height="15" fill="rgb(222,207,29)" fg:x="6338" fg:w="73"/><text x="1.6738%" y="655.50"></text></g><g><title>nom::combinator::map::{{closure}} (73 samples, 0.02%)</title><rect x="1.4238%" y="629" width="0.0164%" height="15" fill="rgb(206,96,30)" fg:x="6338" fg:w="73"/><text x="1.6738%" y="639.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (1,730 samples, 0.39%)</title><rect x="1.0677%" y="789" width="0.3886%" height="15" fill="rgb(218,138,4)" fg:x="4753" fg:w="1730"/><text x="1.3177%" y="799.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (500 samples, 0.11%)</title><rect x="1.3441%" y="773" width="0.1123%" height="15" fill="rgb(250,191,14)" fg:x="5983" fg:w="500"/><text x="1.5941%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (500 samples, 0.11%)</title><rect x="1.3441%" y="757" width="0.1123%" height="15" fill="rgb(239,60,40)" fg:x="5983" fg:w="500"/><text x="1.5941%" y="767.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (500 samples, 0.11%)</title><rect x="1.3441%" y="741" width="0.1123%" height="15" fill="rgb(206,27,48)" fg:x="5983" fg:w="500"/><text x="1.5941%" y="751.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (232 samples, 0.05%)</title><rect x="1.4043%" y="725" width="0.0521%" height="15" fill="rgb(225,35,8)" fg:x="6251" fg:w="232"/><text x="1.6543%" y="735.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (211 samples, 0.05%)</title><rect x="1.4090%" y="709" width="0.0474%" height="15" fill="rgb(250,213,24)" fg:x="6272" fg:w="211"/><text x="1.6590%" y="719.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (211 samples, 0.05%)</title><rect x="1.4090%" y="693" width="0.0474%" height="15" fill="rgb(247,123,22)" fg:x="6272" fg:w="211"/><text x="1.6590%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (145 samples, 0.03%)</title><rect x="1.4238%" y="677" width="0.0326%" height="15" fill="rgb(231,138,38)" fg:x="6338" fg:w="145"/><text x="1.6738%" y="687.50"></text></g><g><title>core::ops::function::FnMut::call_mut (145 samples, 0.03%)</title><rect x="1.4238%" y="661" width="0.0326%" height="15" fill="rgb(231,145,46)" fg:x="6338" fg:w="145"/><text x="1.6738%" y="671.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (72 samples, 0.02%)</title><rect x="1.4402%" y="645" width="0.0162%" height="15" fill="rgb(251,118,11)" fg:x="6411" fg:w="72"/><text x="1.6902%" y="655.50"></text></g><g><title>[unknown] (4,987 samples, 1.12%)</title><rect x="0.3531%" y="805" width="1.1203%" height="15" fill="rgb(217,147,25)" fg:x="1572" fg:w="4987"/><text x="0.6031%" y="815.50"></text></g><g><title>unlink_chunk (53 samples, 0.01%)</title><rect x="1.4616%" y="789" width="0.0119%" height="15" fill="rgb(247,81,37)" fg:x="6506" fg:w="53"/><text x="1.7116%" y="799.50"></text></g><g><title>__GI___libc_malloc (171 samples, 0.04%)</title><rect x="1.4735%" y="805" width="0.0384%" height="15" fill="rgb(209,12,38)" fg:x="6559" fg:w="171"/><text x="1.7235%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3,372 samples, 0.76%)</title><rect x="1.5177%" y="581" width="0.7575%" height="15" fill="rgb(227,1,9)" fg:x="6756" fg:w="3372"/><text x="1.7677%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,372 samples, 0.76%)</title><rect x="1.5177%" y="565" width="0.7575%" height="15" fill="rgb(248,47,43)" fg:x="6756" fg:w="3372"/><text x="1.7677%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,372 samples, 0.76%)</title><rect x="1.5177%" y="549" width="0.7575%" height="15" fill="rgb(221,10,30)" fg:x="6756" fg:w="3372"/><text x="1.7677%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,372 samples, 0.76%)</title><rect x="1.5177%" y="533" width="0.7575%" height="15" fill="rgb(210,229,1)" fg:x="6756" fg:w="3372"/><text x="1.7677%" y="543.50"></text></g><g><title>__free_one_page (149 samples, 0.03%)</title><rect x="2.3482%" y="277" width="0.0335%" height="15" fill="rgb(222,148,37)" fg:x="10453" fg:w="149"/><text x="2.5982%" y="287.50"></text></g><g><title>free_unref_page_list (299 samples, 0.07%)</title><rect x="2.3154%" y="325" width="0.0672%" height="15" fill="rgb(234,67,33)" fg:x="10307" fg:w="299"/><text x="2.5654%" y="335.50"></text></g><g><title>free_unref_page_commit.constprop.0 (255 samples, 0.06%)</title><rect x="2.3253%" y="309" width="0.0573%" height="15" fill="rgb(247,98,35)" fg:x="10351" fg:w="255"/><text x="2.5753%" y="319.50"></text></g><g><title>free_pcppages_bulk (225 samples, 0.05%)</title><rect x="2.3321%" y="293" width="0.0505%" height="15" fill="rgb(247,138,52)" fg:x="10381" fg:w="225"/><text x="2.5821%" y="303.50"></text></g><g><title>free_pages_and_swap_cache (487 samples, 0.11%)</title><rect x="2.2773%" y="357" width="0.1094%" height="15" fill="rgb(213,79,30)" fg:x="10137" fg:w="487"/><text x="2.5273%" y="367.50"></text></g><g><title>release_pages (483 samples, 0.11%)</title><rect x="2.2781%" y="341" width="0.1085%" height="15" fill="rgb(246,177,23)" fg:x="10141" fg:w="483"/><text x="2.5281%" y="351.50"></text></g><g><title>tlb_finish_mmu (527 samples, 0.12%)</title><rect x="2.2764%" y="373" width="0.1184%" height="15" fill="rgb(230,62,27)" fg:x="10133" fg:w="527"/><text x="2.5264%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (74 samples, 0.02%)</title><rect x="2.5250%" y="245" width="0.0166%" height="15" fill="rgb(216,154,8)" fg:x="11240" fg:w="74"/><text x="2.7750%" y="255.50"></text></g><g><title>__mod_lruvec_state (106 samples, 0.02%)</title><rect x="2.5223%" y="261" width="0.0238%" height="15" fill="rgb(244,35,45)" fg:x="11228" fg:w="106"/><text x="2.7723%" y="271.50"></text></g><g><title>__mod_lruvec_page_state (137 samples, 0.03%)</title><rect x="2.5176%" y="277" width="0.0308%" height="15" fill="rgb(251,115,12)" fg:x="11207" fg:w="137"/><text x="2.7676%" y="287.50"></text></g><g><title>page_remove_rmap (297 samples, 0.07%)</title><rect x="2.4927%" y="293" width="0.0667%" height="15" fill="rgb(240,54,50)" fg:x="11096" fg:w="297"/><text x="2.7427%" y="303.50"></text></g><g><title>__mod_lruvec_state (58 samples, 0.01%)</title><rect x="2.5965%" y="245" width="0.0130%" height="15" fill="rgb(233,84,52)" fg:x="11558" fg:w="58"/><text x="2.8465%" y="255.50"></text></g><g><title>__free_one_page (230 samples, 0.05%)</title><rect x="2.6722%" y="197" width="0.0517%" height="15" fill="rgb(207,117,47)" fg:x="11895" fg:w="230"/><text x="2.9222%" y="207.50"></text></g><g><title>free_unref_page_list (493 samples, 0.11%)</title><rect x="2.6135%" y="245" width="0.1108%" height="15" fill="rgb(249,43,39)" fg:x="11634" fg:w="493"/><text x="2.8635%" y="255.50"></text></g><g><title>free_unref_page_commit.constprop.0 (429 samples, 0.10%)</title><rect x="2.6279%" y="229" width="0.0964%" height="15" fill="rgb(209,38,44)" fg:x="11698" fg:w="429"/><text x="2.8779%" y="239.50"></text></g><g><title>free_pcppages_bulk (388 samples, 0.09%)</title><rect x="2.6371%" y="213" width="0.0872%" height="15" fill="rgb(236,212,23)" fg:x="11739" fg:w="388"/><text x="2.8871%" y="223.50"></text></g><g><title>free_pages_and_swap_cache (759 samples, 0.17%)</title><rect x="2.5594%" y="277" width="0.1705%" height="15" fill="rgb(242,79,21)" fg:x="11393" fg:w="759"/><text x="2.8094%" y="287.50"></text></g><g><title>release_pages (740 samples, 0.17%)</title><rect x="2.5637%" y="261" width="0.1662%" height="15" fill="rgb(211,96,35)" fg:x="11412" fg:w="740"/><text x="2.8137%" y="271.50"></text></g><g><title>tlb_flush_mmu (814 samples, 0.18%)</title><rect x="2.5594%" y="293" width="0.1829%" height="15" fill="rgb(253,215,40)" fg:x="11393" fg:w="814"/><text x="2.8094%" y="303.50"></text></g><g><title>free_swap_cache (55 samples, 0.01%)</title><rect x="2.7299%" y="277" width="0.0124%" height="15" fill="rgb(211,81,21)" fg:x="12152" fg:w="55"/><text x="2.9799%" y="287.50"></text></g><g><title>unmap_region (2,094 samples, 0.47%)</title><rect x="2.2761%" y="389" width="0.4704%" height="15" fill="rgb(208,190,38)" fg:x="10132" fg:w="2094"/><text x="2.5261%" y="399.50"></text></g><g><title>unmap_vmas (1,566 samples, 0.35%)</title><rect x="2.3947%" y="373" width="0.3518%" height="15" fill="rgb(235,213,38)" fg:x="10660" fg:w="1566"/><text x="2.6447%" y="383.50"></text></g><g><title>unmap_single_vma (1,566 samples, 0.35%)</title><rect x="2.3947%" y="357" width="0.3518%" height="15" fill="rgb(237,122,38)" fg:x="10660" fg:w="1566"/><text x="2.6447%" y="367.50"></text></g><g><title>unmap_page_range (1,565 samples, 0.35%)</title><rect x="2.3950%" y="341" width="0.3516%" height="15" fill="rgb(244,218,35)" fg:x="10661" fg:w="1565"/><text x="2.6450%" y="351.50"></text></g><g><title>zap_pmd_range.isra.0 (1,565 samples, 0.35%)</title><rect x="2.3950%" y="325" width="0.3516%" height="15" fill="rgb(240,68,47)" fg:x="10661" fg:w="1565"/><text x="2.6450%" y="335.50"></text></g><g><title>zap_pte_range (1,549 samples, 0.35%)</title><rect x="2.3986%" y="309" width="0.3480%" height="15" fill="rgb(210,16,53)" fg:x="10677" fg:w="1549"/><text x="2.6486%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,099 samples, 0.47%)</title><rect x="2.2752%" y="581" width="0.4715%" height="15" fill="rgb(235,124,12)" fg:x="10128" fg:w="2099"/><text x="2.5252%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,099 samples, 0.47%)</title><rect x="2.2752%" y="565" width="0.4715%" height="15" fill="rgb(224,169,11)" fg:x="10128" fg:w="2099"/><text x="2.5252%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,099 samples, 0.47%)</title><rect x="2.2752%" y="549" width="0.4715%" height="15" fill="rgb(250,166,2)" fg:x="10128" fg:w="2099"/><text x="2.5252%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,099 samples, 0.47%)</title><rect x="2.2752%" y="533" width="0.4715%" height="15" fill="rgb(242,216,29)" fg:x="10128" fg:w="2099"/><text x="2.5252%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (2,099 samples, 0.47%)</title><rect x="2.2752%" y="517" width="0.4715%" height="15" fill="rgb(230,116,27)" fg:x="10128" fg:w="2099"/><text x="2.5252%" y="527.50"></text></g><g><title>__GI___libc_free (2,099 samples, 0.47%)</title><rect x="2.2752%" y="501" width="0.4715%" height="15" fill="rgb(228,99,48)" fg:x="10128" fg:w="2099"/><text x="2.5252%" y="511.50"></text></g><g><title>__GI___munmap (2,098 samples, 0.47%)</title><rect x="2.2755%" y="485" width="0.4713%" height="15" fill="rgb(253,11,6)" fg:x="10129" fg:w="2098"/><text x="2.5255%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,098 samples, 0.47%)</title><rect x="2.2755%" y="469" width="0.4713%" height="15" fill="rgb(247,143,39)" fg:x="10129" fg:w="2098"/><text x="2.5255%" y="479.50"></text></g><g><title>do_syscall_64 (2,098 samples, 0.47%)</title><rect x="2.2755%" y="453" width="0.4713%" height="15" fill="rgb(236,97,10)" fg:x="10129" fg:w="2098"/><text x="2.5255%" y="463.50"></text></g><g><title>__x64_sys_munmap (2,098 samples, 0.47%)</title><rect x="2.2755%" y="437" width="0.4713%" height="15" fill="rgb(233,208,19)" fg:x="10129" fg:w="2098"/><text x="2.5255%" y="447.50"></text></g><g><title>__vm_munmap (2,098 samples, 0.47%)</title><rect x="2.2755%" y="421" width="0.4713%" height="15" fill="rgb(216,164,2)" fg:x="10129" fg:w="2098"/><text x="2.5255%" y="431.50"></text></g><g><title>__do_munmap (2,098 samples, 0.47%)</title><rect x="2.2755%" y="405" width="0.4713%" height="15" fill="rgb(220,129,5)" fg:x="10129" fg:w="2098"/><text x="2.5255%" y="415.50"></text></g><g><title>__entry_text_start (1,430 samples, 0.32%)</title><rect x="14.4228%" y="357" width="0.3212%" height="15" fill="rgb(242,17,10)" fg:x="64202" fg:w="1430"/><text x="14.6728%" y="367.50"></text></g><g><title>do_syscall_64 (50 samples, 0.01%)</title><rect x="14.7447%" y="357" width="0.0112%" height="15" fill="rgb(242,107,0)" fg:x="65635" fg:w="50"/><text x="14.9947%" y="367.50"></text></g><g><title>__get_user_nocheck_4 (2,981 samples, 0.67%)</title><rect x="15.1821%" y="277" width="0.6697%" height="15" fill="rgb(251,28,31)" fg:x="67582" fg:w="2981"/><text x="15.4321%" y="287.50"></text></g><g><title>_raw_spin_lock (826 samples, 0.19%)</title><rect x="15.8518%" y="277" width="0.1856%" height="15" fill="rgb(233,223,10)" fg:x="70563" fg:w="826"/><text x="16.1018%" y="287.50"></text></g><g><title>update_cfs_group (122 samples, 0.03%)</title><rect x="16.2142%" y="181" width="0.0274%" height="15" fill="rgb(215,21,27)" fg:x="72176" fg:w="122"/><text x="16.4642%" y="191.50"></text></g><g><title>reweight_entity (56 samples, 0.01%)</title><rect x="16.2290%" y="165" width="0.0126%" height="15" fill="rgb(232,23,21)" fg:x="72242" fg:w="56"/><text x="16.4790%" y="175.50"></text></g><g><title>__calc_delta (72 samples, 0.02%)</title><rect x="16.2685%" y="165" width="0.0162%" height="15" fill="rgb(244,5,23)" fg:x="72418" fg:w="72"/><text x="16.5185%" y="175.50"></text></g><g><title>cpuacct_charge (71 samples, 0.02%)</title><rect x="16.2944%" y="165" width="0.0159%" height="15" fill="rgb(226,81,46)" fg:x="72533" fg:w="71"/><text x="16.5444%" y="175.50"></text></g><g><title>update_curr (318 samples, 0.07%)</title><rect x="16.2416%" y="181" width="0.0714%" height="15" fill="rgb(247,70,30)" fg:x="72298" fg:w="318"/><text x="16.4916%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (47 samples, 0.01%)</title><rect x="16.3233%" y="165" width="0.0106%" height="15" fill="rgb(212,68,19)" fg:x="72662" fg:w="47"/><text x="16.5733%" y="175.50"></text></g><g><title>update_load_avg (156 samples, 0.04%)</title><rect x="16.3130%" y="181" width="0.0350%" height="15" fill="rgb(240,187,13)" fg:x="72616" fg:w="156"/><text x="16.5630%" y="191.50"></text></g><g><title>__update_load_avg_se (63 samples, 0.01%)</title><rect x="16.3339%" y="165" width="0.0142%" height="15" fill="rgb(223,113,26)" fg:x="72709" fg:w="63"/><text x="16.5839%" y="175.50"></text></g><g><title>dequeue_entity (719 samples, 0.16%)</title><rect x="16.1885%" y="197" width="0.1615%" height="15" fill="rgb(206,192,2)" fg:x="72062" fg:w="719"/><text x="16.4385%" y="207.50"></text></g><g><title>dequeue_task_fair (818 samples, 0.18%)</title><rect x="16.1712%" y="213" width="0.1838%" height="15" fill="rgb(241,108,4)" fg:x="71985" fg:w="818"/><text x="16.4212%" y="223.50"></text></g><g><title>dequeue_task (849 samples, 0.19%)</title><rect x="16.1645%" y="229" width="0.1907%" height="15" fill="rgb(247,173,49)" fg:x="71955" fg:w="849"/><text x="16.4145%" y="239.50"></text></g><g><title>__perf_event_task_sched_in (242 samples, 0.05%)</title><rect x="16.3671%" y="213" width="0.0544%" height="15" fill="rgb(224,114,35)" fg:x="72857" fg:w="242"/><text x="16.6171%" y="223.50"></text></g><g><title>x86_pmu_enable (227 samples, 0.05%)</title><rect x="16.3705%" y="197" width="0.0510%" height="15" fill="rgb(245,159,27)" fg:x="72872" fg:w="227"/><text x="16.6205%" y="207.50"></text></g><g><title>intel_pmu_enable_all (216 samples, 0.05%)</title><rect x="16.3730%" y="181" width="0.0485%" height="15" fill="rgb(245,172,44)" fg:x="72883" fg:w="216"/><text x="16.6230%" y="191.50"></text></g><g><title>native_write_msr (193 samples, 0.04%)</title><rect x="16.3781%" y="165" width="0.0434%" height="15" fill="rgb(236,23,11)" fg:x="72906" fg:w="193"/><text x="16.6281%" y="175.50"></text></g><g><title>finish_task_switch.isra.0 (292 samples, 0.07%)</title><rect x="16.3577%" y="229" width="0.0656%" height="15" fill="rgb(205,117,38)" fg:x="72815" fg:w="292"/><text x="16.6077%" y="239.50"></text></g><g><title>newidle_balance (81 samples, 0.02%)</title><rect x="16.4413%" y="197" width="0.0182%" height="15" fill="rgb(237,72,25)" fg:x="73187" fg:w="81"/><text x="16.6913%" y="207.50"></text></g><g><title>pick_next_task_fair (111 samples, 0.02%)</title><rect x="16.4348%" y="213" width="0.0249%" height="15" fill="rgb(244,70,9)" fg:x="73158" fg:w="111"/><text x="16.6848%" y="223.50"></text></g><g><title>__update_idle_core (56 samples, 0.01%)</title><rect x="16.4615%" y="181" width="0.0126%" height="15" fill="rgb(217,125,39)" fg:x="73277" fg:w="56"/><text x="16.7115%" y="191.50"></text></g><g><title>pick_next_task_idle (67 samples, 0.02%)</title><rect x="16.4597%" y="213" width="0.0151%" height="15" fill="rgb(235,36,10)" fg:x="73269" fg:w="67"/><text x="16.7097%" y="223.50"></text></g><g><title>set_next_task_idle (59 samples, 0.01%)</title><rect x="16.4615%" y="197" width="0.0133%" height="15" fill="rgb(251,123,47)" fg:x="73277" fg:w="59"/><text x="16.7115%" y="207.50"></text></g><g><title>put_prev_task_fair (93 samples, 0.02%)</title><rect x="16.4772%" y="213" width="0.0209%" height="15" fill="rgb(221,13,13)" fg:x="73347" fg:w="93"/><text x="16.7272%" y="223.50"></text></g><g><title>put_prev_entity (81 samples, 0.02%)</title><rect x="16.4799%" y="197" width="0.0182%" height="15" fill="rgb(238,131,9)" fg:x="73359" fg:w="81"/><text x="16.7299%" y="207.50"></text></g><g><title>pick_next_task (328 samples, 0.07%)</title><rect x="16.4255%" y="229" width="0.0737%" height="15" fill="rgb(211,50,8)" fg:x="73117" fg:w="328"/><text x="16.6755%" y="239.50"></text></g><g><title>__perf_event_task_sched_out (92 samples, 0.02%)</title><rect x="16.5271%" y="213" width="0.0207%" height="15" fill="rgb(245,182,24)" fg:x="73569" fg:w="92"/><text x="16.7771%" y="223.50"></text></g><g><title>prepare_task_switch (210 samples, 0.05%)</title><rect x="16.5010%" y="229" width="0.0472%" height="15" fill="rgb(242,14,37)" fg:x="73453" fg:w="210"/><text x="16.7510%" y="239.50"></text></g><g><title>iterate_groups (46 samples, 0.01%)</title><rect x="16.5702%" y="213" width="0.0103%" height="15" fill="rgb(246,228,12)" fg:x="73761" fg:w="46"/><text x="16.8202%" y="223.50"></text></g><g><title>psi_group_change (413 samples, 0.09%)</title><rect x="16.5864%" y="213" width="0.0928%" height="15" fill="rgb(213,55,15)" fg:x="73833" fg:w="413"/><text x="16.8364%" y="223.50"></text></g><g><title>psi_task_switch (623 samples, 0.14%)</title><rect x="16.5507%" y="229" width="0.1400%" height="15" fill="rgb(209,9,3)" fg:x="73674" fg:w="623"/><text x="16.8007%" y="239.50"></text></g><g><title>sched_clock_cpu (47 samples, 0.01%)</title><rect x="16.6801%" y="213" width="0.0106%" height="15" fill="rgb(230,59,30)" fg:x="74250" fg:w="47"/><text x="16.9301%" y="223.50"></text></g><g><title>__schedule (2,743 samples, 0.62%)</title><rect x="16.1012%" y="245" width="0.6162%" height="15" fill="rgb(209,121,21)" fg:x="71673" fg:w="2743"/><text x="16.3512%" y="255.50"></text></g><g><title>update_rq_clock (87 samples, 0.02%)</title><rect x="16.6978%" y="229" width="0.0195%" height="15" fill="rgb(220,109,13)" fg:x="74329" fg:w="87"/><text x="16.9478%" y="239.50"></text></g><g><title>sched_clock_cpu (52 samples, 0.01%)</title><rect x="16.7057%" y="213" width="0.0117%" height="15" fill="rgb(232,18,1)" fg:x="74364" fg:w="52"/><text x="16.9557%" y="223.50"></text></g><g><title>sched_clock (49 samples, 0.01%)</title><rect x="16.7064%" y="197" width="0.0110%" height="15" fill="rgb(215,41,42)" fg:x="74367" fg:w="49"/><text x="16.9564%" y="207.50"></text></g><g><title>native_sched_clock (49 samples, 0.01%)</title><rect x="16.7064%" y="181" width="0.0110%" height="15" fill="rgb(224,123,36)" fg:x="74367" fg:w="49"/><text x="16.9564%" y="191.50"></text></g><g><title>futex_wait_queue_me (3,041 samples, 0.68%)</title><rect x="16.0378%" y="277" width="0.6832%" height="15" fill="rgb(240,125,3)" fg:x="71391" fg:w="3041"/><text x="16.2878%" y="287.50"></text></g><g><title>schedule (2,873 samples, 0.65%)</title><rect x="16.0755%" y="261" width="0.6454%" height="15" fill="rgb(205,98,50)" fg:x="71559" fg:w="2873"/><text x="16.3255%" y="271.50"></text></g><g><title>get_futex_key (214 samples, 0.05%)</title><rect x="17.7674%" y="261" width="0.0481%" height="15" fill="rgb(205,185,37)" fg:x="79090" fg:w="214"/><text x="18.0174%" y="271.50"></text></g><g><title>futex_wait_setup (4,888 samples, 1.10%)</title><rect x="16.7210%" y="277" width="1.0981%" height="15" fill="rgb(238,207,15)" fg:x="74432" fg:w="4888"/><text x="16.9710%" y="287.50"></text></g><g><title>get_futex_key (46 samples, 0.01%)</title><rect x="17.8190%" y="277" width="0.0103%" height="15" fill="rgb(213,199,42)" fg:x="79320" fg:w="46"/><text x="18.0690%" y="287.50"></text></g><g><title>hash_futex (618 samples, 0.14%)</title><rect x="17.8294%" y="277" width="0.1388%" height="15" fill="rgb(235,201,11)" fg:x="79366" fg:w="618"/><text x="18.0794%" y="287.50"></text></g><g><title>futex_wait (13,347 samples, 3.00%)</title><rect x="14.9725%" y="293" width="2.9984%" height="15" fill="rgb(207,46,11)" fg:x="66649" fg:w="13347"/><text x="15.2225%" y="303.50">fut..</text></g><g><title>do_futex (13,524 samples, 3.04%)</title><rect x="14.9489%" y="309" width="3.0381%" height="15" fill="rgb(241,35,35)" fg:x="66544" fg:w="13524"/><text x="15.1989%" y="319.50">do_..</text></g><g><title>futex_wait_setup (69 samples, 0.02%)</title><rect x="17.9716%" y="293" width="0.0155%" height="15" fill="rgb(243,32,47)" fg:x="79999" fg:w="69"/><text x="18.2216%" y="303.50"></text></g><g><title>__x64_sys_futex (13,839 samples, 3.11%)</title><rect x="14.8860%" y="325" width="3.1089%" height="15" fill="rgb(247,202,23)" fg:x="66264" fg:w="13839"/><text x="15.1360%" y="335.50">__x..</text></g><g><title>do_futex (77 samples, 0.02%)</title><rect x="17.9952%" y="325" width="0.0173%" height="15" fill="rgb(219,102,11)" fg:x="80104" fg:w="77"/><text x="18.2452%" y="335.50"></text></g><g><title>exit_to_user_mode_prepare (51 samples, 0.01%)</title><rect x="18.0125%" y="325" width="0.0115%" height="15" fill="rgb(243,110,44)" fg:x="80181" fg:w="51"/><text x="18.2625%" y="335.50"></text></g><g><title>syscall_enter_from_user_mode (106 samples, 0.02%)</title><rect x="18.0239%" y="325" width="0.0238%" height="15" fill="rgb(222,74,54)" fg:x="80232" fg:w="106"/><text x="18.2739%" y="335.50"></text></g><g><title>__get_user_8 (61 samples, 0.01%)</title><rect x="18.2686%" y="245" width="0.0137%" height="15" fill="rgb(216,99,12)" fg:x="81321" fg:w="61"/><text x="18.5186%" y="255.50"></text></g><g><title>__rseq_handle_notify_resume (209 samples, 0.05%)</title><rect x="18.2398%" y="277" width="0.0470%" height="15" fill="rgb(226,22,26)" fg:x="81193" fg:w="209"/><text x="18.4898%" y="287.50"></text></g><g><title>rseq_ip_fixup (101 samples, 0.02%)</title><rect x="18.2641%" y="261" width="0.0227%" height="15" fill="rgb(217,163,10)" fg:x="81301" fg:w="101"/><text x="18.5141%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (378 samples, 0.08%)</title><rect x="18.2077%" y="293" width="0.0849%" height="15" fill="rgb(213,25,53)" fg:x="81050" fg:w="378"/><text x="18.4577%" y="303.50"></text></g><g><title>fpregs_assert_state_consistent (56 samples, 0.01%)</title><rect x="18.2926%" y="293" width="0.0126%" height="15" fill="rgb(252,105,26)" fg:x="81428" fg:w="56"/><text x="18.5426%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (1,117 samples, 0.25%)</title><rect x="18.0675%" y="309" width="0.2509%" height="15" fill="rgb(220,39,43)" fg:x="80426" fg:w="1117"/><text x="18.3175%" y="319.50"></text></g><g><title>switch_fpu_return (59 samples, 0.01%)</title><rect x="18.3052%" y="293" width="0.0133%" height="15" fill="rgb(229,68,48)" fg:x="81484" fg:w="59"/><text x="18.5552%" y="303.50"></text></g><g><title>do_syscall_64 (15,543 samples, 3.49%)</title><rect x="14.8339%" y="341" width="3.4917%" height="15" fill="rgb(252,8,32)" fg:x="66032" fg:w="15543"/><text x="15.0839%" y="351.50">do_..</text></g><g><title>syscall_exit_to_user_mode (1,237 samples, 0.28%)</title><rect x="18.0477%" y="325" width="0.2779%" height="15" fill="rgb(223,20,43)" fg:x="80338" fg:w="1237"/><text x="18.2977%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15,953 samples, 3.58%)</title><rect x="14.7560%" y="357" width="3.5838%" height="15" fill="rgb(229,81,49)" fg:x="65685" fg:w="15953"/><text x="15.0060%" y="367.50">entr..</text></g><g><title>__GI___lll_lock_wait_private (24,608 samples, 5.53%)</title><rect x="12.8817%" y="389" width="5.5281%" height="15" fill="rgb(236,28,36)" fg:x="57342" fg:w="24608"/><text x="13.1317%" y="399.50">__GI___..</text></g><g><title>futex_wait (19,042 samples, 4.28%)</title><rect x="14.1321%" y="373" width="4.2777%" height="15" fill="rgb(249,185,26)" fg:x="62908" fg:w="19042"/><text x="14.3821%" y="383.50">futex..</text></g><g><title>syscall_return_via_sysret (312 samples, 0.07%)</title><rect x="18.3398%" y="357" width="0.0701%" height="15" fill="rgb(249,174,33)" fg:x="81638" fg:w="312"/><text x="18.5898%" y="367.50"></text></g><g><title>__entry_text_start (2,329 samples, 0.52%)</title><rect x="18.7626%" y="373" width="0.5232%" height="15" fill="rgb(233,201,37)" fg:x="83520" fg:w="2329"/><text x="19.0126%" y="383.50"></text></g><g><title>do_syscall_64 (69 samples, 0.02%)</title><rect x="19.2873%" y="373" width="0.0155%" height="15" fill="rgb(221,78,26)" fg:x="85856" fg:w="69"/><text x="19.5373%" y="383.50"></text></g><g><title>__x64_sys_futex (58 samples, 0.01%)</title><rect x="19.4127%" y="357" width="0.0130%" height="15" fill="rgb(250,127,30)" fg:x="86414" fg:w="58"/><text x="19.6627%" y="367.50"></text></g><g><title>_raw_spin_lock (3,011 samples, 0.68%)</title><rect x="19.6728%" y="309" width="0.6764%" height="15" fill="rgb(230,49,44)" fg:x="87572" fg:w="3011"/><text x="19.9228%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (66 samples, 0.01%)</title><rect x="21.7176%" y="277" width="0.0148%" height="15" fill="rgb(229,67,23)" fg:x="96674" fg:w="66"/><text x="21.9676%" y="287.50"></text></g><g><title>_raw_spin_lock (2,378 samples, 0.53%)</title><rect x="21.7153%" y="293" width="0.5342%" height="15" fill="rgb(249,83,47)" fg:x="96664" fg:w="2378"/><text x="21.9653%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,302 samples, 0.52%)</title><rect x="21.7324%" y="277" width="0.5171%" height="15" fill="rgb(215,43,3)" fg:x="96740" fg:w="2302"/><text x="21.9824%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (2,301 samples, 0.52%)</title><rect x="21.7326%" y="261" width="0.5169%" height="15" fill="rgb(238,154,13)" fg:x="96741" fg:w="2301"/><text x="21.9826%" y="271.50"></text></g><g><title>get_futex_key (422 samples, 0.09%)</title><rect x="22.2516%" y="293" width="0.0948%" height="15" fill="rgb(219,56,2)" fg:x="99051" fg:w="422"/><text x="22.5016%" y="303.50"></text></g><g><title>__unqueue_futex (465 samples, 0.10%)</title><rect x="22.5261%" y="277" width="0.1045%" height="15" fill="rgb(233,0,4)" fg:x="100273" fg:w="465"/><text x="22.7761%" y="287.50"></text></g><g><title>mark_wake_futex (1,240 samples, 0.28%)</title><rect x="22.3556%" y="293" width="0.2786%" height="15" fill="rgb(235,30,7)" fg:x="99514" fg:w="1240"/><text x="22.6056%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (68 samples, 0.02%)</title><rect x="22.6341%" y="293" width="0.0153%" height="15" fill="rgb(250,79,13)" fg:x="100754" fg:w="68"/><text x="22.8841%" y="303.50"></text></g><g><title>wake_q_add_safe (200 samples, 0.04%)</title><rect x="22.6505%" y="293" width="0.0449%" height="15" fill="rgb(211,146,34)" fg:x="100827" fg:w="200"/><text x="22.9005%" y="303.50"></text></g><g><title>_raw_spin_lock_irqsave (157 samples, 0.04%)</title><rect x="22.8981%" y="261" width="0.0353%" height="15" fill="rgb(228,22,38)" fg:x="101929" fg:w="157"/><text x="23.1481%" y="271.50"></text></g><g><title>select_task_rq_fair (94 samples, 0.02%)</title><rect x="22.9363%" y="261" width="0.0211%" height="15" fill="rgb(235,168,5)" fg:x="102099" fg:w="94"/><text x="23.1863%" y="271.50"></text></g><g><title>wake_affine (55 samples, 0.01%)</title><rect x="22.9450%" y="245" width="0.0124%" height="15" fill="rgb(221,155,16)" fg:x="102138" fg:w="55"/><text x="23.1950%" y="255.50"></text></g><g><title>available_idle_cpu (49 samples, 0.01%)</title><rect x="22.9464%" y="229" width="0.0110%" height="15" fill="rgb(215,215,53)" fg:x="102144" fg:w="49"/><text x="23.1964%" y="239.50"></text></g><g><title>enqueue_entity (187 samples, 0.04%)</title><rect x="22.9852%" y="213" width="0.0420%" height="15" fill="rgb(223,4,10)" fg:x="102317" fg:w="187"/><text x="23.2352%" y="223.50"></text></g><g><title>update_load_avg (58 samples, 0.01%)</title><rect x="23.0142%" y="197" width="0.0130%" height="15" fill="rgb(234,103,6)" fg:x="102446" fg:w="58"/><text x="23.2642%" y="207.50"></text></g><g><title>enqueue_task_fair (298 samples, 0.07%)</title><rect x="22.9626%" y="229" width="0.0669%" height="15" fill="rgb(227,97,0)" fg:x="102216" fg:w="298"/><text x="23.2126%" y="239.50"></text></g><g><title>psi_group_change (249 samples, 0.06%)</title><rect x="23.0383%" y="213" width="0.0559%" height="15" fill="rgb(234,150,53)" fg:x="102553" fg:w="249"/><text x="23.2883%" y="223.50"></text></g><g><title>psi_task_change (294 samples, 0.07%)</title><rect x="23.0300%" y="229" width="0.0660%" height="15" fill="rgb(228,201,54)" fg:x="102516" fg:w="294"/><text x="23.2800%" y="239.50"></text></g><g><title>enqueue_task (605 samples, 0.14%)</title><rect x="22.9603%" y="245" width="0.1359%" height="15" fill="rgb(222,22,37)" fg:x="102206" fg:w="605"/><text x="23.2103%" y="255.50"></text></g><g><title>check_preempt_curr (52 samples, 0.01%)</title><rect x="23.0978%" y="229" width="0.0117%" height="15" fill="rgb(237,53,32)" fg:x="102818" fg:w="52"/><text x="23.3478%" y="239.50"></text></g><g><title>ttwu_do_activate (687 samples, 0.15%)</title><rect x="22.9574%" y="261" width="0.1543%" height="15" fill="rgb(233,25,53)" fg:x="102193" fg:w="687"/><text x="23.2074%" y="271.50"></text></g><g><title>ttwu_do_wakeup (67 samples, 0.02%)</title><rect x="23.0967%" y="245" width="0.0151%" height="15" fill="rgb(210,40,34)" fg:x="102813" fg:w="67"/><text x="23.3467%" y="255.50"></text></g><g><title>__x2apic_send_IPI_dest (61 samples, 0.01%)</title><rect x="23.4487%" y="181" width="0.0137%" height="15" fill="rgb(241,220,44)" fg:x="104380" fg:w="61"/><text x="23.6987%" y="191.50"></text></g><g><title>native_send_call_func_single_ipi (925 samples, 0.21%)</title><rect x="23.3921%" y="213" width="0.2078%" height="15" fill="rgb(235,28,35)" fg:x="104128" fg:w="925"/><text x="23.6421%" y="223.50"></text></g><g><title>x2apic_send_IPI (889 samples, 0.20%)</title><rect x="23.4002%" y="197" width="0.1997%" height="15" fill="rgb(210,56,17)" fg:x="104164" fg:w="889"/><text x="23.6502%" y="207.50"></text></g><g><title>native_write_msr (612 samples, 0.14%)</title><rect x="23.4624%" y="181" width="0.1375%" height="15" fill="rgb(224,130,29)" fg:x="104441" fg:w="612"/><text x="23.7124%" y="191.50"></text></g><g><title>__smp_call_single_queue (1,361 samples, 0.31%)</title><rect x="23.2953%" y="245" width="0.3057%" height="15" fill="rgb(235,212,8)" fg:x="103697" fg:w="1361"/><text x="23.5453%" y="255.50"></text></g><g><title>send_call_function_single_ipi (1,302 samples, 0.29%)</title><rect x="23.3085%" y="229" width="0.2925%" height="15" fill="rgb(223,33,50)" fg:x="103756" fg:w="1302"/><text x="23.5585%" y="239.50"></text></g><g><title>llist_add_batch (839 samples, 0.19%)</title><rect x="23.6010%" y="245" width="0.1885%" height="15" fill="rgb(219,149,13)" fg:x="105058" fg:w="839"/><text x="23.8510%" y="255.50"></text></g><g><title>sched_clock_cpu (104 samples, 0.02%)</title><rect x="23.7920%" y="245" width="0.0234%" height="15" fill="rgb(250,156,29)" fg:x="105908" fg:w="104"/><text x="24.0420%" y="255.50"></text></g><g><title>sched_clock (92 samples, 0.02%)</title><rect x="23.7947%" y="229" width="0.0207%" height="15" fill="rgb(216,193,19)" fg:x="105920" fg:w="92"/><text x="24.0447%" y="239.50"></text></g><g><title>native_sched_clock (87 samples, 0.02%)</title><rect x="23.7958%" y="213" width="0.0195%" height="15" fill="rgb(216,135,14)" fg:x="105925" fg:w="87"/><text x="24.0458%" y="223.50"></text></g><g><title>ttwu_queue_wakelist (3,135 samples, 0.70%)</title><rect x="23.1120%" y="261" width="0.7043%" height="15" fill="rgb(241,47,5)" fg:x="102881" fg:w="3135"/><text x="23.3620%" y="271.50"></text></g><g><title>update_rq_clock (71 samples, 0.02%)</title><rect x="23.8162%" y="261" width="0.0159%" height="15" fill="rgb(233,42,35)" fg:x="106016" fg:w="71"/><text x="24.0662%" y="271.50"></text></g><g><title>try_to_wake_up (4,638 samples, 1.04%)</title><rect x="22.7905%" y="277" width="1.0419%" height="15" fill="rgb(231,13,6)" fg:x="101450" fg:w="4638"/><text x="23.0405%" y="287.50"></text></g><g><title>futex_wake (15,507 samples, 3.48%)</title><rect x="20.3495%" y="309" width="3.4836%" height="15" fill="rgb(207,181,40)" fg:x="90584" fg:w="15507"/><text x="20.5995%" y="319.50">fut..</text></g><g><title>wake_up_q (5,064 samples, 1.14%)</title><rect x="22.6955%" y="293" width="1.1376%" height="15" fill="rgb(254,173,49)" fg:x="101027" fg:w="5064"/><text x="22.9455%" y="303.50"></text></g><g><title>hash_futex (994 samples, 0.22%)</title><rect x="23.8423%" y="309" width="0.2233%" height="15" fill="rgb(221,1,38)" fg:x="106132" fg:w="994"/><text x="24.0923%" y="319.50"></text></g><g><title>do_futex (19,824 samples, 4.45%)</title><rect x="19.6205%" y="325" width="4.4534%" height="15" fill="rgb(206,124,46)" fg:x="87339" fg:w="19824"/><text x="19.8705%" y="335.50">do_fu..</text></g><g><title>__x64_sys_futex (20,364 samples, 4.57%)</title><rect x="19.5100%" y="341" width="4.5747%" height="15" fill="rgb(249,21,11)" fg:x="86847" fg:w="20364"/><text x="19.7600%" y="351.50">__x64..</text></g><g><title>futex_wake (48 samples, 0.01%)</title><rect x="24.0739%" y="325" width="0.0108%" height="15" fill="rgb(222,201,40)" fg:x="107163" fg:w="48"/><text x="24.3239%" y="335.50"></text></g><g><title>do_futex (160 samples, 0.04%)</title><rect x="24.0847%" y="341" width="0.0359%" height="15" fill="rgb(235,61,29)" fg:x="107211" fg:w="160"/><text x="24.3347%" y="351.50"></text></g><g><title>exit_to_user_mode_prepare (66 samples, 0.01%)</title><rect x="24.1206%" y="341" width="0.0148%" height="15" fill="rgb(219,207,3)" fg:x="107371" fg:w="66"/><text x="24.3706%" y="351.50"></text></g><g><title>syscall_enter_from_user_mode (212 samples, 0.05%)</title><rect x="24.1354%" y="341" width="0.0476%" height="15" fill="rgb(222,56,46)" fg:x="107437" fg:w="212"/><text x="24.3854%" y="351.50"></text></g><g><title>exit_to_user_mode_prepare (1,184 samples, 0.27%)</title><rect x="24.2177%" y="325" width="0.2660%" height="15" fill="rgb(239,76,54)" fg:x="107803" fg:w="1184"/><text x="24.4677%" y="335.50"></text></g><g><title>fpregs_assert_state_consistent (88 samples, 0.02%)</title><rect x="24.4639%" y="309" width="0.0198%" height="15" fill="rgb(231,124,27)" fg:x="108899" fg:w="88"/><text x="24.7139%" y="319.50"></text></g><g><title>do_syscall_64 (22,577 samples, 5.07%)</title><rect x="19.4257%" y="357" width="5.0719%" height="15" fill="rgb(249,195,6)" fg:x="86472" fg:w="22577"/><text x="19.6757%" y="367.50">do_sys..</text></g><g><title>syscall_exit_to_user_mode (1,400 samples, 0.31%)</title><rect x="24.1831%" y="341" width="0.3145%" height="15" fill="rgb(237,174,47)" fg:x="107649" fg:w="1400"/><text x="24.4331%" y="351.50"></text></g><g><title>fpregs_assert_state_consistent (62 samples, 0.01%)</title><rect x="24.4836%" y="325" width="0.0139%" height="15" fill="rgb(206,201,31)" fg:x="108987" fg:w="62"/><text x="24.7336%" y="335.50"></text></g><g><title>syscall_enter_from_user_mode (47 samples, 0.01%)</title><rect x="24.4976%" y="357" width="0.0106%" height="15" fill="rgb(231,57,52)" fg:x="109049" fg:w="47"/><text x="24.7476%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23,216 samples, 5.22%)</title><rect x="19.3028%" y="373" width="5.2154%" height="15" fill="rgb(248,177,22)" fg:x="85925" fg:w="23216"/><text x="19.5528%" y="383.50">entry_..</text></g><g><title>syscall_exit_to_user_mode (45 samples, 0.01%)</title><rect x="24.5081%" y="357" width="0.0101%" height="15" fill="rgb(215,211,37)" fg:x="109096" fg:w="45"/><text x="24.7581%" y="367.50"></text></g><g><title>__GI___lll_lock_wake_private (27,769 samples, 6.24%)</title><rect x="18.4099%" y="389" width="6.2382%" height="15" fill="rgb(241,128,51)" fg:x="81950" fg:w="27769"/><text x="18.6599%" y="399.50">__GI___l..</text></g><g><title>syscall_return_via_sysret (577 samples, 0.13%)</title><rect x="24.5185%" y="373" width="0.1296%" height="15" fill="rgb(227,165,31)" fg:x="109142" fg:w="577"/><text x="24.7685%" y="383.50"></text></g><g><title>alloc_perturb (79 samples, 0.02%)</title><rect x="31.2860%" y="373" width="0.0177%" height="15" fill="rgb(228,167,24)" fg:x="139267" fg:w="79"/><text x="31.5360%" y="383.50"></text></g><g><title>checked_request2size (342 samples, 0.08%)</title><rect x="31.3129%" y="373" width="0.0768%" height="15" fill="rgb(228,143,12)" fg:x="139387" fg:w="342"/><text x="31.5629%" y="383.50"></text></g><g><title>__handle_mm_fault (69 samples, 0.02%)</title><rect x="31.4021%" y="293" width="0.0155%" height="15" fill="rgb(249,149,8)" fg:x="139784" fg:w="69"/><text x="31.6521%" y="303.50"></text></g><g><title>handle_pte_fault (67 samples, 0.02%)</title><rect x="31.4026%" y="277" width="0.0151%" height="15" fill="rgb(243,35,44)" fg:x="139786" fg:w="67"/><text x="31.6526%" y="287.50"></text></g><g><title>do_anonymous_page (63 samples, 0.01%)</title><rect x="31.4035%" y="261" width="0.0142%" height="15" fill="rgb(246,89,9)" fg:x="139790" fg:w="63"/><text x="31.6535%" y="271.50"></text></g><g><title>do_user_addr_fault (81 samples, 0.02%)</title><rect x="31.3996%" y="325" width="0.0182%" height="15" fill="rgb(233,213,13)" fg:x="139773" fg:w="81"/><text x="31.6496%" y="335.50"></text></g><g><title>handle_mm_fault (76 samples, 0.02%)</title><rect x="31.4008%" y="309" width="0.0171%" height="15" fill="rgb(233,141,41)" fg:x="139778" fg:w="76"/><text x="31.6508%" y="319.50"></text></g><g><title>asm_exc_page_fault (84 samples, 0.02%)</title><rect x="31.3994%" y="357" width="0.0189%" height="15" fill="rgb(239,167,4)" fg:x="139772" fg:w="84"/><text x="31.6494%" y="367.50"></text></g><g><title>exc_page_fault (84 samples, 0.02%)</title><rect x="31.3994%" y="341" width="0.0189%" height="15" fill="rgb(209,217,16)" fg:x="139772" fg:w="84"/><text x="31.6494%" y="351.50"></text></g><g><title>sysmalloc (155 samples, 0.03%)</title><rect x="31.3960%" y="373" width="0.0348%" height="15" fill="rgb(219,88,35)" fg:x="139757" fg:w="155"/><text x="31.6460%" y="383.50"></text></g><g><title>tcache_get (172 samples, 0.04%)</title><rect x="31.4309%" y="373" width="0.0386%" height="15" fill="rgb(220,193,23)" fg:x="139912" fg:w="172"/><text x="31.6809%" y="383.50"></text></g><g><title>tcache_put (389 samples, 0.09%)</title><rect x="31.4695%" y="373" width="0.0874%" height="15" fill="rgb(230,90,52)" fg:x="140084" fg:w="389"/><text x="31.7195%" y="383.50"></text></g><g><title>_int_malloc (33,947 samples, 7.63%)</title><rect x="24.6481%" y="389" width="7.6261%" height="15" fill="rgb(252,106,19)" fg:x="109719" fg:w="33947"/><text x="24.8981%" y="399.50">_int_malloc</text></g><g><title>unlink_chunk (3,193 samples, 0.72%)</title><rect x="31.5569%" y="373" width="0.7173%" height="15" fill="rgb(206,74,20)" fg:x="140473" fg:w="3193"/><text x="31.8069%" y="383.50"></text></g><g><title>arena_for_chunk (1,648 samples, 0.37%)</title><rect x="32.2742%" y="389" width="0.3702%" height="15" fill="rgb(230,138,44)" fg:x="143666" fg:w="1648"/><text x="32.5242%" y="399.50"></text></g><g><title>arena_for_chunk (1,406 samples, 0.32%)</title><rect x="32.3286%" y="373" width="0.3159%" height="15" fill="rgb(235,182,43)" fg:x="143908" fg:w="1406"/><text x="32.5786%" y="383.50"></text></g><g><title>heap_for_ptr (236 samples, 0.05%)</title><rect x="32.5914%" y="357" width="0.0530%" height="15" fill="rgb(242,16,51)" fg:x="145078" fg:w="236"/><text x="32.8414%" y="367.50"></text></g><g><title>checked_request2size (202 samples, 0.05%)</title><rect x="32.6505%" y="389" width="0.0454%" height="15" fill="rgb(248,9,4)" fg:x="145341" fg:w="202"/><text x="32.9005%" y="399.50"></text></g><g><title>__GI___libc_malloc (117,716 samples, 26.44%)</title><rect x="6.2782%" y="405" width="26.4446%" height="15" fill="rgb(210,31,22)" fg:x="27947" fg:w="117716"/><text x="6.5282%" y="415.50">__GI___libc_malloc</text></g><g><title>tcache_get (118 samples, 0.03%)</title><rect x="32.6963%" y="389" width="0.0265%" height="15" fill="rgb(239,54,39)" fg:x="145545" fg:w="118"/><text x="32.9463%" y="399.50"></text></g><g><title>__rdl_alloc (482 samples, 0.11%)</title><rect x="32.7228%" y="405" width="0.1083%" height="15" fill="rgb(230,99,41)" fg:x="145663" fg:w="482"/><text x="32.9728%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (482 samples, 0.11%)</title><rect x="32.7228%" y="389" width="0.1083%" height="15" fill="rgb(253,106,12)" fg:x="145663" fg:w="482"/><text x="32.9728%" y="399.50"></text></g><g><title>__rust_alloc (224 samples, 0.05%)</title><rect x="32.8311%" y="405" width="0.0503%" height="15" fill="rgb(213,46,41)" fg:x="146145" fg:w="224"/><text x="33.0811%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (118,497 samples, 26.62%)</title><rect x="6.2616%" y="469" width="26.6200%" height="15" fill="rgb(215,133,35)" fg:x="27873" fg:w="118497"/><text x="6.5116%" y="479.50">alloc::alloc::exchange_malloc</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (118,497 samples, 26.62%)</title><rect x="6.2616%" y="453" width="26.6200%" height="15" fill="rgb(213,28,5)" fg:x="27873" fg:w="118497"/><text x="6.5116%" y="463.50">&lt;alloc::alloc::Global as core::alloc::Alloc..</text></g><g><title>alloc::alloc::Global::alloc_impl (118,497 samples, 26.62%)</title><rect x="6.2616%" y="437" width="26.6200%" height="15" fill="rgb(215,77,49)" fg:x="27873" fg:w="118497"/><text x="6.5116%" y="447.50">alloc::alloc::Global::alloc_impl</text></g><g><title>alloc::alloc::alloc (118,472 samples, 26.61%)</title><rect x="6.2672%" y="421" width="26.6144%" height="15" fill="rgb(248,100,22)" fg:x="27898" fg:w="118472"/><text x="6.5172%" y="431.50">alloc::alloc::alloc</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (119,691 samples, 26.89%)</title><rect x="5.9938%" y="485" width="26.8883%" height="15" fill="rgb(208,67,9)" fg:x="26681" fg:w="119691"/><text x="6.2438%" y="495.50">alloc::boxed::Box&lt;T&gt;::new</text></g><g><title>core::result::Result&lt;T,E&gt;::map (124,735 samples, 28.02%)</title><rect x="4.8627%" y="517" width="28.0214%" height="15" fill="rgb(219,133,21)" fg:x="21646" fg:w="124735"/><text x="5.1127%" y="527.50">core::result::Result&lt;T,E&gt;::map</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (123,909 samples, 27.84%)</title><rect x="5.0483%" y="501" width="27.8358%" height="15" fill="rgb(246,46,29)" fg:x="22472" fg:w="123909"/><text x="5.2983%" y="511.50">hprof_slurp::parser::record_parser::HprofReco..</text></g><g><title>nom::combinator::map::{{closure}} (429 samples, 0.10%)</title><rect x="33.6111%" y="421" width="0.0964%" height="15" fill="rgb(246,185,52)" fg:x="149617" fg:w="429"/><text x="33.8611%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (144 samples, 0.03%)</title><rect x="33.6751%" y="405" width="0.0323%" height="15" fill="rgb(252,136,11)" fg:x="149902" fg:w="144"/><text x="33.9251%" y="415.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (144 samples, 0.03%)</title><rect x="33.6751%" y="389" width="0.0323%" height="15" fill="rgb(219,138,53)" fg:x="149902" fg:w="144"/><text x="33.9251%" y="399.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (144 samples, 0.03%)</title><rect x="33.6751%" y="373" width="0.0323%" height="15" fill="rgb(211,51,23)" fg:x="149902" fg:w="144"/><text x="33.9251%" y="383.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (477 samples, 0.11%)</title><rect x="33.8737%" y="357" width="0.1072%" height="15" fill="rgb(247,221,28)" fg:x="150786" fg:w="477"/><text x="34.1237%" y="367.50"></text></g><g><title>nom::number::streaming::be_u32 (477 samples, 0.11%)</title><rect x="33.8737%" y="341" width="0.1072%" height="15" fill="rgb(251,222,45)" fg:x="150786" fg:w="477"/><text x="34.1237%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,506 samples, 0.34%)</title><rect x="33.8737%" y="389" width="0.3383%" height="15" fill="rgb(217,162,53)" fg:x="150786" fg:w="1506"/><text x="34.1237%" y="399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,506 samples, 0.34%)</title><rect x="33.8737%" y="373" width="0.3383%" height="15" fill="rgb(229,93,14)" fg:x="150786" fg:w="1506"/><text x="34.1237%" y="383.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (1,029 samples, 0.23%)</title><rect x="33.9808%" y="357" width="0.2312%" height="15" fill="rgb(209,67,49)" fg:x="151263" fg:w="1029"/><text x="34.2308%" y="367.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (1,029 samples, 0.23%)</title><rect x="33.9808%" y="341" width="0.2312%" height="15" fill="rgb(213,87,29)" fg:x="151263" fg:w="1029"/><text x="34.2308%" y="351.50"></text></g><g><title>nom::number::streaming::be_u64 (1,029 samples, 0.23%)</title><rect x="33.9808%" y="325" width="0.2312%" height="15" fill="rgb(205,151,52)" fg:x="151263" fg:w="1029"/><text x="34.2308%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,676 samples, 0.60%)</title><rect x="33.6111%" y="437" width="0.6012%" height="15" fill="rgb(253,215,39)" fg:x="149617" fg:w="2676"/><text x="33.8611%" y="447.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (2,247 samples, 0.50%)</title><rect x="33.7074%" y="421" width="0.5048%" height="15" fill="rgb(221,220,41)" fg:x="150046" fg:w="2247"/><text x="33.9574%" y="431.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2,246 samples, 0.50%)</title><rect x="33.7077%" y="405" width="0.5046%" height="15" fill="rgb(218,133,21)" fg:x="150047" fg:w="2246"/><text x="33.9577%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (181 samples, 0.04%)</title><rect x="34.2122%" y="437" width="0.0407%" height="15" fill="rgb(221,193,43)" fg:x="152293" fg:w="181"/><text x="34.4622%" y="447.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (5,061 samples, 1.14%)</title><rect x="33.1164%" y="469" width="1.1369%" height="15" fill="rgb(240,128,52)" fg:x="147415" fg:w="5061"/><text x="33.3664%" y="479.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (5,061 samples, 1.14%)</title><rect x="33.1164%" y="453" width="1.1369%" height="15" fill="rgb(253,114,12)" fg:x="147415" fg:w="5061"/><text x="33.3664%" y="463.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (67 samples, 0.02%)</title><rect x="34.6013%" y="293" width="0.0151%" height="15" fill="rgb(215,223,47)" fg:x="154025" fg:w="67"/><text x="34.8513%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (67 samples, 0.02%)</title><rect x="34.6013%" y="277" width="0.0151%" height="15" fill="rgb(248,225,23)" fg:x="154025" fg:w="67"/><text x="34.8513%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (67 samples, 0.02%)</title><rect x="34.6013%" y="261" width="0.0151%" height="15" fill="rgb(250,108,0)" fg:x="154025" fg:w="67"/><text x="34.8513%" y="271.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (67 samples, 0.02%)</title><rect x="34.6013%" y="245" width="0.0151%" height="15" fill="rgb(228,208,7)" fg:x="154025" fg:w="67"/><text x="34.8513%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (67 samples, 0.02%)</title><rect x="34.6013%" y="229" width="0.0151%" height="15" fill="rgb(244,45,10)" fg:x="154025" fg:w="67"/><text x="34.8513%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (345 samples, 0.08%)</title><rect x="34.6164%" y="293" width="0.0775%" height="15" fill="rgb(207,125,25)" fg:x="154092" fg:w="345"/><text x="34.8664%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (345 samples, 0.08%)</title><rect x="34.6164%" y="277" width="0.0775%" height="15" fill="rgb(210,195,18)" fg:x="154092" fg:w="345"/><text x="34.8664%" y="287.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (345 samples, 0.08%)</title><rect x="34.6164%" y="261" width="0.0775%" height="15" fill="rgb(249,80,12)" fg:x="154092" fg:w="345"/><text x="34.8664%" y="271.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,320 samples, 0.30%)</title><rect x="34.3976%" y="373" width="0.2965%" height="15" fill="rgb(221,65,9)" fg:x="153118" fg:w="1320"/><text x="34.6476%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,320 samples, 0.30%)</title><rect x="34.3976%" y="357" width="0.2965%" height="15" fill="rgb(235,49,36)" fg:x="153118" fg:w="1320"/><text x="34.6476%" y="367.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (1,320 samples, 0.30%)</title><rect x="34.3976%" y="341" width="0.2965%" height="15" fill="rgb(225,32,20)" fg:x="153118" fg:w="1320"/><text x="34.6476%" y="351.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (1,216 samples, 0.27%)</title><rect x="34.4209%" y="325" width="0.2732%" height="15" fill="rgb(215,141,46)" fg:x="153222" fg:w="1216"/><text x="34.6709%" y="335.50"></text></g><g><title>nom::number::streaming::be_u64 (1,140 samples, 0.26%)</title><rect x="34.4380%" y="309" width="0.2561%" height="15" fill="rgb(250,160,47)" fg:x="153298" fg:w="1140"/><text x="34.6880%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (299 samples, 0.07%)</title><rect x="34.6941%" y="373" width="0.0672%" height="15" fill="rgb(216,222,40)" fg:x="154438" fg:w="299"/><text x="34.9441%" y="383.50"></text></g><g><title>core::ptr::write (108 samples, 0.02%)</title><rect x="34.7370%" y="357" width="0.0243%" height="15" fill="rgb(234,217,39)" fg:x="154629" fg:w="108"/><text x="34.9870%" y="367.50"></text></g><g><title>__entry_text_start (59 samples, 0.01%)</title><rect x="35.2434%" y="213" width="0.0133%" height="15" fill="rgb(207,178,40)" fg:x="156883" fg:w="59"/><text x="35.4934%" y="223.50"></text></g><g><title>__get_user_nocheck_4 (130 samples, 0.03%)</title><rect x="35.2728%" y="133" width="0.0292%" height="15" fill="rgb(221,136,13)" fg:x="157014" fg:w="130"/><text x="35.5228%" y="143.50"></text></g><g><title>__schedule (106 samples, 0.02%)</title><rect x="35.3130%" y="101" width="0.0238%" height="15" fill="rgb(249,199,10)" fg:x="157193" fg:w="106"/><text x="35.5630%" y="111.50"></text></g><g><title>futex_wait_queue_me (121 samples, 0.03%)</title><rect x="35.3101%" y="133" width="0.0272%" height="15" fill="rgb(249,222,13)" fg:x="157180" fg:w="121"/><text x="35.5601%" y="143.50"></text></g><g><title>schedule (111 samples, 0.02%)</title><rect x="35.3123%" y="117" width="0.0249%" height="15" fill="rgb(244,185,38)" fg:x="157190" fg:w="111"/><text x="35.5623%" y="127.50"></text></g><g><title>futex_wait_setup (220 samples, 0.05%)</title><rect x="35.3373%" y="133" width="0.0494%" height="15" fill="rgb(236,202,9)" fg:x="157301" fg:w="220"/><text x="35.5873%" y="143.50"></text></g><g><title>futex_wait (573 samples, 0.13%)</title><rect x="35.2652%" y="149" width="0.1287%" height="15" fill="rgb(250,229,37)" fg:x="156980" fg:w="573"/><text x="35.5152%" y="159.50"></text></g><g><title>do_futex (579 samples, 0.13%)</title><rect x="35.2643%" y="165" width="0.1301%" height="15" fill="rgb(206,174,23)" fg:x="156976" fg:w="579"/><text x="35.5143%" y="175.50"></text></g><g><title>__x64_sys_futex (582 samples, 0.13%)</title><rect x="35.2638%" y="181" width="0.1307%" height="15" fill="rgb(211,33,43)" fg:x="156974" fg:w="582"/><text x="35.5138%" y="191.50"></text></g><g><title>exit_to_user_mode_prepare (49 samples, 0.01%)</title><rect x="35.3963%" y="165" width="0.0110%" height="15" fill="rgb(245,58,50)" fg:x="157564" fg:w="49"/><text x="35.6463%" y="175.50"></text></g><g><title>do_syscall_64 (652 samples, 0.15%)</title><rect x="35.2616%" y="197" width="0.1465%" height="15" fill="rgb(244,68,36)" fg:x="156964" fg:w="652"/><text x="35.5116%" y="207.50"></text></g><g><title>syscall_exit_to_user_mode (54 samples, 0.01%)</title><rect x="35.3959%" y="181" width="0.0121%" height="15" fill="rgb(232,229,15)" fg:x="157562" fg:w="54"/><text x="35.6459%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (675 samples, 0.15%)</title><rect x="35.2573%" y="213" width="0.1516%" height="15" fill="rgb(254,30,23)" fg:x="156945" fg:w="675"/><text x="35.5073%" y="223.50"></text></g><g><title>__GI___lll_lock_wait_private (1,042 samples, 0.23%)</title><rect x="35.1780%" y="245" width="0.2341%" height="15" fill="rgb(235,160,14)" fg:x="156592" fg:w="1042"/><text x="35.4280%" y="255.50"></text></g><g><title>futex_wait (791 samples, 0.18%)</title><rect x="35.2344%" y="229" width="0.1777%" height="15" fill="rgb(212,155,44)" fg:x="156843" fg:w="791"/><text x="35.4844%" y="239.50"></text></g><g><title>__entry_text_start (98 samples, 0.02%)</title><rect x="35.4298%" y="229" width="0.0220%" height="15" fill="rgb(226,2,50)" fg:x="157713" fg:w="98"/><text x="35.6798%" y="239.50"></text></g><g><title>_raw_spin_lock (202 samples, 0.05%)</title><rect x="35.4765%" y="165" width="0.0454%" height="15" fill="rgb(234,177,6)" fg:x="157921" fg:w="202"/><text x="35.7265%" y="175.50"></text></g><g><title>_raw_spin_lock (101 samples, 0.02%)</title><rect x="35.6140%" y="149" width="0.0227%" height="15" fill="rgb(217,24,9)" fg:x="158533" fg:w="101"/><text x="35.8640%" y="159.50"></text></g><g><title>native_queued_spin_lock_slowpath (97 samples, 0.02%)</title><rect x="35.6149%" y="133" width="0.0218%" height="15" fill="rgb(220,13,46)" fg:x="158537" fg:w="97"/><text x="35.8649%" y="143.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (97 samples, 0.02%)</title><rect x="35.6149%" y="117" width="0.0218%" height="15" fill="rgb(239,221,27)" fg:x="158537" fg:w="97"/><text x="35.8649%" y="127.50"></text></g><g><title>__unqueue_futex (85 samples, 0.02%)</title><rect x="35.6760%" y="133" width="0.0191%" height="15" fill="rgb(222,198,25)" fg:x="158809" fg:w="85"/><text x="35.9260%" y="143.50"></text></g><g><title>mark_wake_futex (232 samples, 0.05%)</title><rect x="35.6432%" y="149" width="0.0521%" height="15" fill="rgb(211,99,13)" fg:x="158663" fg:w="232"/><text x="35.8932%" y="159.50"></text></g><g><title>enqueue_entity (46 samples, 0.01%)</title><rect x="35.7607%" y="69" width="0.0103%" height="15" fill="rgb(232,111,31)" fg:x="159186" fg:w="46"/><text x="36.0107%" y="79.50"></text></g><g><title>enqueue_task_fair (69 samples, 0.02%)</title><rect x="35.7560%" y="85" width="0.0155%" height="15" fill="rgb(245,82,37)" fg:x="159165" fg:w="69"/><text x="36.0060%" y="95.50"></text></g><g><title>psi_group_change (67 samples, 0.02%)</title><rect x="35.7756%" y="69" width="0.0151%" height="15" fill="rgb(227,149,46)" fg:x="159252" fg:w="67"/><text x="36.0256%" y="79.50"></text></g><g><title>enqueue_task (160 samples, 0.04%)</title><rect x="35.7553%" y="101" width="0.0359%" height="15" fill="rgb(218,36,50)" fg:x="159162" fg:w="160"/><text x="36.0053%" y="111.50"></text></g><g><title>psi_task_change (85 samples, 0.02%)</title><rect x="35.7722%" y="85" width="0.0191%" height="15" fill="rgb(226,80,48)" fg:x="159237" fg:w="85"/><text x="36.0222%" y="95.50"></text></g><g><title>ttwu_do_activate (175 samples, 0.04%)</title><rect x="35.7551%" y="117" width="0.0393%" height="15" fill="rgb(238,224,15)" fg:x="159161" fg:w="175"/><text x="36.0051%" y="127.50"></text></g><g><title>native_send_call_func_single_ipi (165 samples, 0.04%)</title><rect x="35.8358%" y="69" width="0.0371%" height="15" fill="rgb(241,136,10)" fg:x="159520" fg:w="165"/><text x="36.0858%" y="79.50"></text></g><g><title>x2apic_send_IPI (159 samples, 0.04%)</title><rect x="35.8371%" y="53" width="0.0357%" height="15" fill="rgb(208,32,45)" fg:x="159526" fg:w="159"/><text x="36.0871%" y="63.50"></text></g><g><title>native_write_msr (108 samples, 0.02%)</title><rect x="35.8486%" y="37" width="0.0243%" height="15" fill="rgb(207,135,9)" fg:x="159577" fg:w="108"/><text x="36.0986%" y="47.50"></text></g><g><title>__smp_call_single_queue (207 samples, 0.05%)</title><rect x="35.8265%" y="101" width="0.0465%" height="15" fill="rgb(206,86,44)" fg:x="159479" fg:w="207"/><text x="36.0765%" y="111.50"></text></g><g><title>send_call_function_single_ipi (203 samples, 0.05%)</title><rect x="35.8274%" y="85" width="0.0456%" height="15" fill="rgb(245,177,15)" fg:x="159483" fg:w="203"/><text x="36.0774%" y="95.50"></text></g><g><title>llist_add_batch (129 samples, 0.03%)</title><rect x="35.8730%" y="101" width="0.0290%" height="15" fill="rgb(206,64,50)" fg:x="159686" fg:w="129"/><text x="36.1230%" y="111.50"></text></g><g><title>ttwu_queue_wakelist (508 samples, 0.11%)</title><rect x="35.7944%" y="117" width="0.1141%" height="15" fill="rgb(234,36,40)" fg:x="159336" fg:w="508"/><text x="36.0444%" y="127.50"></text></g><g><title>try_to_wake_up (848 samples, 0.19%)</title><rect x="35.7212%" y="133" width="0.1905%" height="15" fill="rgb(213,64,8)" fg:x="159010" fg:w="848"/><text x="35.9712%" y="143.50"></text></g><g><title>futex_wake (1,736 samples, 0.39%)</title><rect x="35.5219%" y="165" width="0.3900%" height="15" fill="rgb(210,75,36)" fg:x="158123" fg:w="1736"/><text x="35.7719%" y="175.50"></text></g><g><title>wake_up_q (926 samples, 0.21%)</title><rect x="35.7039%" y="149" width="0.2080%" height="15" fill="rgb(229,88,21)" fg:x="158933" fg:w="926"/><text x="35.9539%" y="159.50"></text></g><g><title>hash_futex (67 samples, 0.02%)</title><rect x="35.9130%" y="165" width="0.0151%" height="15" fill="rgb(252,204,47)" fg:x="159864" fg:w="67"/><text x="36.1630%" y="175.50"></text></g><g><title>do_futex (2,027 samples, 0.46%)</title><rect x="35.4732%" y="181" width="0.4554%" height="15" fill="rgb(208,77,27)" fg:x="157906" fg:w="2027"/><text x="35.7232%" y="191.50"></text></g><g><title>__x64_sys_futex (2,064 samples, 0.46%)</title><rect x="35.4651%" y="197" width="0.4637%" height="15" fill="rgb(221,76,26)" fg:x="157870" fg:w="2064"/><text x="35.7151%" y="207.50"></text></g><g><title>exit_to_user_mode_prepare (68 samples, 0.02%)</title><rect x="35.9364%" y="181" width="0.0153%" height="15" fill="rgb(225,139,18)" fg:x="159968" fg:w="68"/><text x="36.1864%" y="191.50"></text></g><g><title>do_syscall_64 (2,192 samples, 0.49%)</title><rect x="35.4601%" y="213" width="0.4924%" height="15" fill="rgb(230,137,11)" fg:x="157848" fg:w="2192"/><text x="35.7101%" y="223.50"></text></g><g><title>syscall_exit_to_user_mode (88 samples, 0.02%)</title><rect x="35.9328%" y="197" width="0.0198%" height="15" fill="rgb(212,28,1)" fg:x="159952" fg:w="88"/><text x="36.1828%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,227 samples, 0.50%)</title><rect x="35.4530%" y="229" width="0.5003%" height="15" fill="rgb(248,164,17)" fg:x="157816" fg:w="2227"/><text x="35.7030%" y="239.50"></text></g><g><title>__GI___lll_lock_wake_private (2,447 samples, 0.55%)</title><rect x="35.4121%" y="245" width="0.5497%" height="15" fill="rgb(222,171,42)" fg:x="157634" fg:w="2447"/><text x="35.6621%" y="255.50"></text></g><g><title>malloc_consolidate (6,440 samples, 1.45%)</title><rect x="37.2488%" y="229" width="1.4467%" height="15" fill="rgb(243,84,45)" fg:x="165810" fg:w="6440"/><text x="37.4988%" y="239.50"></text></g><g><title>unlink_chunk (2,941 samples, 0.66%)</title><rect x="38.0348%" y="213" width="0.6607%" height="15" fill="rgb(252,49,23)" fg:x="169309" fg:w="2941"/><text x="38.2848%" y="223.50"></text></g><g><title>tcache_put (74 samples, 0.02%)</title><rect x="38.6971%" y="229" width="0.0166%" height="15" fill="rgb(215,19,7)" fg:x="172257" fg:w="74"/><text x="38.9471%" y="239.50"></text></g><g><title>_int_malloc (12,572 samples, 2.82%)</title><rect x="35.9618%" y="245" width="2.8243%" height="15" fill="rgb(238,81,41)" fg:x="160081" fg:w="12572"/><text x="36.2118%" y="255.50">_i..</text></g><g><title>unlink_chunk (322 samples, 0.07%)</title><rect x="38.7137%" y="229" width="0.0723%" height="15" fill="rgb(210,199,37)" fg:x="172331" fg:w="322"/><text x="38.9637%" y="239.50"></text></g><g><title>arena_for_chunk (75 samples, 0.02%)</title><rect x="38.7861%" y="245" width="0.0168%" height="15" fill="rgb(244,192,49)" fg:x="172653" fg:w="75"/><text x="39.0361%" y="255.50"></text></g><g><title>arena_for_chunk (68 samples, 0.02%)</title><rect x="38.7876%" y="229" width="0.0153%" height="15" fill="rgb(226,211,11)" fg:x="172660" fg:w="68"/><text x="39.0376%" y="239.50"></text></g><g><title>__GI___libc_malloc (18,205 samples, 4.09%)</title><rect x="34.7938%" y="261" width="4.0897%" height="15" fill="rgb(236,162,54)" fg:x="154882" fg:w="18205"/><text x="35.0438%" y="271.50">__GI..</text></g><g><title>tcache_get (316 samples, 0.07%)</title><rect x="38.8126%" y="245" width="0.0710%" height="15" fill="rgb(220,229,9)" fg:x="172771" fg:w="316"/><text x="39.0626%" y="255.50"></text></g><g><title>__rdl_alloc (47 samples, 0.01%)</title><rect x="38.8835%" y="261" width="0.0106%" height="15" fill="rgb(250,87,22)" fg:x="173087" fg:w="47"/><text x="39.1335%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (47 samples, 0.01%)</title><rect x="38.8835%" y="245" width="0.0106%" height="15" fill="rgb(239,43,17)" fg:x="173087" fg:w="47"/><text x="39.1335%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18,294 samples, 4.11%)</title><rect x="34.7889%" y="309" width="4.1097%" height="15" fill="rgb(231,177,25)" fg:x="154860" fg:w="18294"/><text x="35.0389%" y="319.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (18,294 samples, 4.11%)</title><rect x="34.7889%" y="293" width="4.1097%" height="15" fill="rgb(219,179,1)" fg:x="154860" fg:w="18294"/><text x="35.0389%" y="303.50">allo..</text></g><g><title>alloc::alloc::alloc (18,286 samples, 4.11%)</title><rect x="34.7907%" y="277" width="4.1079%" height="15" fill="rgb(238,219,53)" fg:x="154868" fg:w="18286"/><text x="35.0407%" y="287.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18,445 samples, 4.14%)</title><rect x="34.7613%" y="373" width="4.1436%" height="15" fill="rgb(232,167,36)" fg:x="154737" fg:w="18445"/><text x="35.0113%" y="383.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18,445 samples, 4.14%)</title><rect x="34.7613%" y="357" width="4.1436%" height="15" fill="rgb(244,19,51)" fg:x="154737" fg:w="18445"/><text x="35.0113%" y="367.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18,356 samples, 4.12%)</title><rect x="34.7813%" y="341" width="4.1236%" height="15" fill="rgb(224,6,22)" fg:x="154826" fg:w="18356"/><text x="35.0313%" y="351.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18,356 samples, 4.12%)</title><rect x="34.7813%" y="325" width="4.1236%" height="15" fill="rgb(224,145,5)" fg:x="154826" fg:w="18356"/><text x="35.0313%" y="335.50">allo..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20,574 samples, 4.62%)</title><rect x="34.2848%" y="405" width="4.6219%" height="15" fill="rgb(234,130,49)" fg:x="152616" fg:w="20574"/><text x="34.5348%" y="415.50">&lt;F as..</text></g><g><title>nom::multi::count::{{closure}} (20,565 samples, 4.62%)</title><rect x="34.2868%" y="389" width="4.6199%" height="15" fill="rgb(254,6,2)" fg:x="152625" fg:w="20565"/><text x="34.5368%" y="399.50">nom::..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (813 samples, 0.18%)</title><rect x="38.9067%" y="405" width="0.1826%" height="15" fill="rgb(208,96,46)" fg:x="173190" fg:w="813"/><text x="39.1567%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (21,465 samples, 4.82%)</title><rect x="34.2695%" y="421" width="4.8221%" height="15" fill="rgb(239,3,39)" fg:x="152548" fg:w="21465"/><text x="34.5195%" y="431.50">nom::c..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (146 samples, 0.03%)</title><rect x="39.1241%" y="357" width="0.0328%" height="15" fill="rgb(233,210,1)" fg:x="174158" fg:w="146"/><text x="39.3741%" y="367.50"></text></g><g><title>nom::number::streaming::be_u32 (146 samples, 0.03%)</title><rect x="39.1241%" y="341" width="0.0328%" height="15" fill="rgb(244,137,37)" fg:x="174158" fg:w="146"/><text x="39.3741%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (21,936 samples, 4.93%)</title><rect x="34.2601%" y="437" width="4.9279%" height="15" fill="rgb(240,136,2)" fg:x="152506" fg:w="21936"/><text x="34.5101%" y="447.50">&lt;F as ..</text></g><g><title>nom::sequence::tuple::{{closure}} (429 samples, 0.10%)</title><rect x="39.0916%" y="421" width="0.0964%" height="15" fill="rgb(239,18,37)" fg:x="174013" fg:w="429"/><text x="39.3416%" y="431.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (428 samples, 0.10%)</title><rect x="39.0918%" y="405" width="0.0961%" height="15" fill="rgb(218,185,22)" fg:x="174014" fg:w="428"/><text x="39.3418%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (284 samples, 0.06%)</title><rect x="39.1241%" y="389" width="0.0638%" height="15" fill="rgb(225,218,4)" fg:x="174158" fg:w="284"/><text x="39.3741%" y="399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (284 samples, 0.06%)</title><rect x="39.1241%" y="373" width="0.0638%" height="15" fill="rgb(230,182,32)" fg:x="174158" fg:w="284"/><text x="39.3741%" y="383.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (138 samples, 0.03%)</title><rect x="39.1569%" y="357" width="0.0310%" height="15" fill="rgb(242,56,43)" fg:x="174304" fg:w="138"/><text x="39.4069%" y="367.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (138 samples, 0.03%)</title><rect x="39.1569%" y="341" width="0.0310%" height="15" fill="rgb(233,99,24)" fg:x="174304" fg:w="138"/><text x="39.4069%" y="351.50"></text></g><g><title>nom::number::streaming::be_u64 (138 samples, 0.03%)</title><rect x="39.1569%" y="325" width="0.0310%" height="15" fill="rgb(234,209,42)" fg:x="174304" fg:w="138"/><text x="39.4069%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (95 samples, 0.02%)</title><rect x="39.1879%" y="437" width="0.0213%" height="15" fill="rgb(227,7,12)" fg:x="174442" fg:w="95"/><text x="39.4379%" y="447.50"></text></g><g><title>__entry_text_start (56 samples, 0.01%)</title><rect x="39.2093%" y="405" width="0.0126%" height="15" fill="rgb(245,203,43)" fg:x="174537" fg:w="56"/><text x="39.4593%" y="415.50"></text></g><g><title>__GI___libc_malloc (57 samples, 0.01%)</title><rect x="39.2093%" y="437" width="0.0128%" height="15" fill="rgb(238,205,33)" fg:x="174537" fg:w="57"/><text x="39.4593%" y="447.50"></text></g><g><title>__GI___lll_lock_wake_private (57 samples, 0.01%)</title><rect x="39.2093%" y="421" width="0.0128%" height="15" fill="rgb(231,56,7)" fg:x="174537" fg:w="57"/><text x="39.4593%" y="431.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (22,181 samples, 4.98%)</title><rect x="34.2533%" y="469" width="4.9829%" height="15" fill="rgb(244,186,29)" fg:x="152476" fg:w="22181"/><text x="34.5033%" y="479.50">hprof_..</text></g><g><title>nom::combinator::flat_map::{{closure}} (22,181 samples, 4.98%)</title><rect x="34.2533%" y="453" width="4.9829%" height="15" fill="rgb(234,111,31)" fg:x="152476" fg:w="22181"/><text x="34.5033%" y="463.50">nom::c..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump::{{closure}} (63 samples, 0.01%)</title><rect x="39.2221%" y="437" width="0.0142%" height="15" fill="rgb(241,149,10)" fg:x="174594" fg:w="63"/><text x="39.4721%" y="447.50"></text></g><g><title>nom::combinator::map (63 samples, 0.01%)</title><rect x="39.2221%" y="421" width="0.0142%" height="15" fill="rgb(249,206,44)" fg:x="174594" fg:w="63"/><text x="39.4721%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (235 samples, 0.05%)</title><rect x="39.3250%" y="421" width="0.0528%" height="15" fill="rgb(251,153,30)" fg:x="175052" fg:w="235"/><text x="39.5750%" y="431.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i32 (126 samples, 0.03%)</title><rect x="39.4989%" y="341" width="0.0283%" height="15" fill="rgb(239,152,38)" fg:x="175826" fg:w="126"/><text x="39.7489%" y="351.50"></text></g><g><title>nom::number::streaming::be_i32 (126 samples, 0.03%)</title><rect x="39.4989%" y="325" width="0.0283%" height="15" fill="rgb(249,139,47)" fg:x="175826" fg:w="126"/><text x="39.7489%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.03%)</title><rect x="39.4989%" y="309" width="0.0283%" height="15" fill="rgb(244,64,35)" fg:x="175826" fg:w="126"/><text x="39.7489%" y="319.50"></text></g><g><title>nom::combinator::map::{{closure}} (126 samples, 0.03%)</title><rect x="39.4989%" y="293" width="0.0283%" height="15" fill="rgb(216,46,15)" fg:x="175826" fg:w="126"/><text x="39.7489%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.03%)</title><rect x="39.4989%" y="277" width="0.0283%" height="15" fill="rgb(250,74,19)" fg:x="175826" fg:w="126"/><text x="39.7489%" y="287.50"></text></g><g><title>nom::number::streaming::be_i32::{{closure}} (126 samples, 0.03%)</title><rect x="39.4989%" y="261" width="0.0283%" height="15" fill="rgb(249,42,33)" fg:x="175826" fg:w="126"/><text x="39.7489%" y="271.50"></text></g><g><title>nom::number::streaming::be_u32 (126 samples, 0.03%)</title><rect x="39.4989%" y="245" width="0.0283%" height="15" fill="rgb(242,149,17)" fg:x="175826" fg:w="126"/><text x="39.7489%" y="255.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (444 samples, 0.10%)</title><rect x="39.5274%" y="341" width="0.0997%" height="15" fill="rgb(244,29,21)" fg:x="175953" fg:w="444"/><text x="39.7774%" y="351.50"></text></g><g><title>nom::number::streaming::be_i8 (444 samples, 0.10%)</title><rect x="39.5274%" y="325" width="0.0997%" height="15" fill="rgb(220,130,37)" fg:x="175953" fg:w="444"/><text x="39.7774%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (444 samples, 0.10%)</title><rect x="39.5274%" y="309" width="0.0997%" height="15" fill="rgb(211,67,2)" fg:x="175953" fg:w="444"/><text x="39.7774%" y="319.50"></text></g><g><title>nom::combinator::map::{{closure}} (444 samples, 0.10%)</title><rect x="39.5274%" y="293" width="0.0997%" height="15" fill="rgb(235,68,52)" fg:x="175953" fg:w="444"/><text x="39.7774%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (444 samples, 0.10%)</title><rect x="39.5274%" y="277" width="0.0997%" height="15" fill="rgb(246,142,3)" fg:x="175953" fg:w="444"/><text x="39.7774%" y="287.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (444 samples, 0.10%)</title><rect x="39.5274%" y="261" width="0.0997%" height="15" fill="rgb(241,25,7)" fg:x="175953" fg:w="444"/><text x="39.7774%" y="271.50"></text></g><g><title>nom::number::streaming::be_u8 (444 samples, 0.10%)</title><rect x="39.5274%" y="245" width="0.0997%" height="15" fill="rgb(242,119,39)" fg:x="175953" fg:w="444"/><text x="39.7774%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.03%)</title><rect x="39.5934%" y="229" width="0.0337%" height="15" fill="rgb(241,98,45)" fg:x="176247" fg:w="150"/><text x="39.8434%" y="239.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (150 samples, 0.03%)</title><rect x="39.5934%" y="213" width="0.0337%" height="15" fill="rgb(254,28,30)" fg:x="176247" fg:w="150"/><text x="39.8434%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (799 samples, 0.18%)</title><rect x="39.4872%" y="373" width="0.1795%" height="15" fill="rgb(241,142,54)" fg:x="175774" fg:w="799"/><text x="39.7372%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (799 samples, 0.18%)</title><rect x="39.4872%" y="357" width="0.1795%" height="15" fill="rgb(222,85,15)" fg:x="175774" fg:w="799"/><text x="39.7372%" y="367.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u16 (176 samples, 0.04%)</title><rect x="39.6271%" y="341" width="0.0395%" height="15" fill="rgb(210,85,47)" fg:x="176397" fg:w="176"/><text x="39.8771%" y="351.50"></text></g><g><title>nom::number::streaming::be_u16 (170 samples, 0.04%)</title><rect x="39.6285%" y="325" width="0.0382%" height="15" fill="rgb(224,206,25)" fg:x="176403" fg:w="170"/><text x="39.8785%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (271 samples, 0.06%)</title><rect x="40.2245%" y="357" width="0.0609%" height="15" fill="rgb(243,201,19)" fg:x="179056" fg:w="271"/><text x="40.4745%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,495 samples, 1.01%)</title><rect x="39.6667%" y="373" width="1.0098%" height="15" fill="rgb(236,59,4)" fg:x="176573" fg:w="4495"/><text x="39.9167%" y="383.50"></text></g><g><title>core::ptr::write (1,738 samples, 0.39%)</title><rect x="40.2860%" y="357" width="0.3904%" height="15" fill="rgb(254,179,45)" fg:x="179330" fg:w="1738"/><text x="40.5360%" y="367.50"></text></g><g><title>__entry_text_start (120 samples, 0.03%)</title><rect x="41.4879%" y="213" width="0.0270%" height="15" fill="rgb(226,14,10)" fg:x="184680" fg:w="120"/><text x="41.7379%" y="223.50"></text></g><g><title>__get_user_nocheck_4 (228 samples, 0.05%)</title><rect x="41.5564%" y="133" width="0.0512%" height="15" fill="rgb(244,27,41)" fg:x="184985" fg:w="228"/><text x="41.8064%" y="143.50"></text></g><g><title>_raw_spin_lock (67 samples, 0.02%)</title><rect x="41.6076%" y="133" width="0.0151%" height="15" fill="rgb(235,35,32)" fg:x="185213" fg:w="67"/><text x="41.8576%" y="143.50"></text></g><g><title>dequeue_entity (72 samples, 0.02%)</title><rect x="41.6384%" y="53" width="0.0162%" height="15" fill="rgb(218,68,31)" fg:x="185350" fg:w="72"/><text x="41.8884%" y="63.50"></text></g><g><title>dequeue_task (84 samples, 0.02%)</title><rect x="41.6362%" y="85" width="0.0189%" height="15" fill="rgb(207,120,37)" fg:x="185340" fg:w="84"/><text x="41.8862%" y="95.50"></text></g><g><title>dequeue_task_fair (80 samples, 0.02%)</title><rect x="41.6371%" y="69" width="0.0180%" height="15" fill="rgb(227,98,0)" fg:x="185344" fg:w="80"/><text x="41.8871%" y="79.50"></text></g><g><title>psi_task_switch (57 samples, 0.01%)</title><rect x="41.6739%" y="85" width="0.0128%" height="15" fill="rgb(207,7,3)" fg:x="185508" fg:w="57"/><text x="41.9239%" y="95.50"></text></g><g><title>__schedule (272 samples, 0.06%)</title><rect x="41.6292%" y="101" width="0.0611%" height="15" fill="rgb(206,98,19)" fg:x="185309" fg:w="272"/><text x="41.8792%" y="111.50"></text></g><g><title>futex_wait_queue_me (303 samples, 0.07%)</title><rect x="41.6227%" y="133" width="0.0681%" height="15" fill="rgb(217,5,26)" fg:x="185280" fg:w="303"/><text x="41.8727%" y="143.50"></text></g><g><title>schedule (287 samples, 0.06%)</title><rect x="41.6263%" y="117" width="0.0645%" height="15" fill="rgb(235,190,38)" fg:x="185296" fg:w="287"/><text x="41.8763%" y="127.50"></text></g><g><title>futex_wait_setup (407 samples, 0.09%)</title><rect x="41.6907%" y="133" width="0.0914%" height="15" fill="rgb(247,86,24)" fg:x="185583" fg:w="407"/><text x="41.9407%" y="143.50"></text></g><g><title>hash_futex (72 samples, 0.02%)</title><rect x="41.7824%" y="133" width="0.0162%" height="15" fill="rgb(205,101,16)" fg:x="185991" fg:w="72"/><text x="42.0324%" y="143.50"></text></g><g><title>futex_wait (1,171 samples, 0.26%)</title><rect x="41.5360%" y="149" width="0.2631%" height="15" fill="rgb(246,168,33)" fg:x="184894" fg:w="1171"/><text x="41.7860%" y="159.50"></text></g><g><title>do_futex (1,182 samples, 0.27%)</title><rect x="41.5337%" y="165" width="0.2655%" height="15" fill="rgb(231,114,1)" fg:x="184884" fg:w="1182"/><text x="41.7837%" y="175.50"></text></g><g><title>__x64_sys_futex (1,213 samples, 0.27%)</title><rect x="41.5276%" y="181" width="0.2725%" height="15" fill="rgb(207,184,53)" fg:x="184857" fg:w="1213"/><text x="41.7776%" y="191.50"></text></g><g><title>exit_to_user_mode_prepare (103 samples, 0.02%)</title><rect x="41.8069%" y="165" width="0.0231%" height="15" fill="rgb(224,95,51)" fg:x="186100" fg:w="103"/><text x="42.0569%" y="175.50"></text></g><g><title>do_syscall_64 (1,374 samples, 0.31%)</title><rect x="41.5223%" y="197" width="0.3087%" height="15" fill="rgb(212,188,45)" fg:x="184833" fg:w="1374"/><text x="41.7723%" y="207.50"></text></g><g><title>syscall_exit_to_user_mode (117 samples, 0.03%)</title><rect x="41.8046%" y="181" width="0.0263%" height="15" fill="rgb(223,154,38)" fg:x="186090" fg:w="117"/><text x="42.0546%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,405 samples, 0.32%)</title><rect x="41.5160%" y="213" width="0.3156%" height="15" fill="rgb(251,22,52)" fg:x="184805" fg:w="1405"/><text x="41.7660%" y="223.50"></text></g><g><title>__GI___lll_lock_wait_private (2,140 samples, 0.48%)</title><rect x="41.3553%" y="245" width="0.4807%" height="15" fill="rgb(229,209,22)" fg:x="184090" fg:w="2140"/><text x="41.6053%" y="255.50"></text></g><g><title>futex_wait (1,649 samples, 0.37%)</title><rect x="41.4656%" y="229" width="0.3704%" height="15" fill="rgb(234,138,34)" fg:x="184581" fg:w="1649"/><text x="41.7156%" y="239.50"></text></g><g><title>__entry_text_start (168 samples, 0.04%)</title><rect x="41.8725%" y="229" width="0.0377%" height="15" fill="rgb(212,95,11)" fg:x="186392" fg:w="168"/><text x="42.1225%" y="239.50"></text></g><g><title>_raw_spin_lock (329 samples, 0.07%)</title><rect x="41.9430%" y="165" width="0.0739%" height="15" fill="rgb(240,179,47)" fg:x="186706" fg:w="329"/><text x="42.1930%" y="175.50"></text></g><g><title>_raw_spin_lock (181 samples, 0.04%)</title><rect x="42.1713%" y="149" width="0.0407%" height="15" fill="rgb(240,163,11)" fg:x="187722" fg:w="181"/><text x="42.4213%" y="159.50"></text></g><g><title>native_queued_spin_lock_slowpath (172 samples, 0.04%)</title><rect x="42.1733%" y="133" width="0.0386%" height="15" fill="rgb(236,37,12)" fg:x="187731" fg:w="172"/><text x="42.4233%" y="143.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (172 samples, 0.04%)</title><rect x="42.1733%" y="117" width="0.0386%" height="15" fill="rgb(232,164,16)" fg:x="187731" fg:w="172"/><text x="42.4233%" y="127.50"></text></g><g><title>__unqueue_futex (101 samples, 0.02%)</title><rect x="42.2663%" y="133" width="0.0227%" height="15" fill="rgb(244,205,15)" fg:x="188145" fg:w="101"/><text x="42.5163%" y="143.50"></text></g><g><title>mark_wake_futex (302 samples, 0.07%)</title><rect x="42.2225%" y="149" width="0.0678%" height="15" fill="rgb(223,117,47)" fg:x="187950" fg:w="302"/><text x="42.4725%" y="159.50"></text></g><g><title>wake_q_add_safe (51 samples, 0.01%)</title><rect x="42.2917%" y="149" width="0.0115%" height="15" fill="rgb(244,107,35)" fg:x="188258" fg:w="51"/><text x="42.5417%" y="159.50"></text></g><g><title>enqueue_task (59 samples, 0.01%)</title><rect x="42.3584%" y="101" width="0.0133%" height="15" fill="rgb(205,140,8)" fg:x="188555" fg:w="59"/><text x="42.6084%" y="111.50"></text></g><g><title>ttwu_do_activate (69 samples, 0.02%)</title><rect x="42.3579%" y="117" width="0.0155%" height="15" fill="rgb(228,84,46)" fg:x="188553" fg:w="69"/><text x="42.6079%" y="127.50"></text></g><g><title>native_send_call_func_single_ipi (250 samples, 0.06%)</title><rect x="42.4465%" y="69" width="0.0562%" height="15" fill="rgb(254,188,9)" fg:x="188947" fg:w="250"/><text x="42.6965%" y="79.50"></text></g><g><title>x2apic_send_IPI (238 samples, 0.05%)</title><rect x="42.4492%" y="53" width="0.0535%" height="15" fill="rgb(206,112,54)" fg:x="188959" fg:w="238"/><text x="42.6992%" y="63.50"></text></g><g><title>native_write_msr (161 samples, 0.04%)</title><rect x="42.4664%" y="37" width="0.0362%" height="15" fill="rgb(216,84,49)" fg:x="189036" fg:w="161"/><text x="42.7164%" y="47.50"></text></g><g><title>__smp_call_single_queue (340 samples, 0.08%)</title><rect x="42.4265%" y="101" width="0.0764%" height="15" fill="rgb(214,194,35)" fg:x="188858" fg:w="340"/><text x="42.6765%" y="111.50"></text></g><g><title>send_call_function_single_ipi (324 samples, 0.07%)</title><rect x="42.4301%" y="85" width="0.0728%" height="15" fill="rgb(249,28,3)" fg:x="188874" fg:w="324"/><text x="42.6801%" y="95.50"></text></g><g><title>llist_add_batch (192 samples, 0.04%)</title><rect x="42.5028%" y="101" width="0.0431%" height="15" fill="rgb(222,56,52)" fg:x="189198" fg:w="192"/><text x="42.7528%" y="111.50"></text></g><g><title>ttwu_queue_wakelist (796 samples, 0.18%)</title><rect x="42.3734%" y="117" width="0.1788%" height="15" fill="rgb(245,217,50)" fg:x="188622" fg:w="796"/><text x="42.6234%" y="127.50"></text></g><g><title>try_to_wake_up (1,046 samples, 0.23%)</title><rect x="42.3191%" y="133" width="0.2350%" height="15" fill="rgb(213,201,24)" fg:x="188380" fg:w="1046"/><text x="42.5691%" y="143.50"></text></g><g><title>futex_wake (2,393 samples, 0.54%)</title><rect x="42.0169%" y="165" width="0.5376%" height="15" fill="rgb(248,116,28)" fg:x="187035" fg:w="2393"/><text x="42.2669%" y="175.50"></text></g><g><title>wake_up_q (1,119 samples, 0.25%)</title><rect x="42.3031%" y="149" width="0.2514%" height="15" fill="rgb(219,72,43)" fg:x="188309" fg:w="1119"/><text x="42.5531%" y="159.50"></text></g><g><title>hash_futex (107 samples, 0.02%)</title><rect x="42.5556%" y="165" width="0.0240%" height="15" fill="rgb(209,138,14)" fg:x="189433" fg:w="107"/><text x="42.8056%" y="175.50"></text></g><g><title>do_futex (2,866 samples, 0.64%)</title><rect x="41.9365%" y="181" width="0.6438%" height="15" fill="rgb(222,18,33)" fg:x="186677" fg:w="2866"/><text x="42.1865%" y="191.50"></text></g><g><title>__x64_sys_futex (2,912 samples, 0.65%)</title><rect x="41.9275%" y="197" width="0.6542%" height="15" fill="rgb(213,199,7)" fg:x="186637" fg:w="2912"/><text x="42.1775%" y="207.50"></text></g><g><title>exit_to_user_mode_prepare (125 samples, 0.03%)</title><rect x="42.5911%" y="181" width="0.0281%" height="15" fill="rgb(250,110,10)" fg:x="189591" fg:w="125"/><text x="42.8411%" y="191.50"></text></g><g><title>do_syscall_64 (3,109 samples, 0.70%)</title><rect x="41.9221%" y="213" width="0.6984%" height="15" fill="rgb(248,123,6)" fg:x="186613" fg:w="3109"/><text x="42.1721%" y="223.50"></text></g><g><title>syscall_exit_to_user_mode (138 samples, 0.03%)</title><rect x="42.5896%" y="197" width="0.0310%" height="15" fill="rgb(206,91,31)" fg:x="189584" fg:w="138"/><text x="42.8396%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,161 samples, 0.71%)</title><rect x="41.9122%" y="229" width="0.7101%" height="15" fill="rgb(211,154,13)" fg:x="186569" fg:w="3161"/><text x="42.1622%" y="239.50"></text></g><g><title>__GI___lll_lock_wake_private (3,565 samples, 0.80%)</title><rect x="41.8361%" y="245" width="0.8009%" height="15" fill="rgb(225,148,7)" fg:x="186230" fg:w="3565"/><text x="42.0861%" y="255.50"></text></g><g><title>syscall_return_via_sysret (65 samples, 0.01%)</title><rect x="42.6224%" y="229" width="0.0146%" height="15" fill="rgb(220,160,43)" fg:x="189730" fg:w="65"/><text x="42.8724%" y="239.50"></text></g><g><title>tcache_put (95 samples, 0.02%)</title><rect x="44.2697%" y="229" width="0.0213%" height="15" fill="rgb(213,52,39)" fg:x="197063" fg:w="95"/><text x="44.5197%" y="239.50"></text></g><g><title>_int_malloc (8,005 samples, 1.80%)</title><rect x="42.6370%" y="245" width="1.7983%" height="15" fill="rgb(243,137,7)" fg:x="189795" fg:w="8005"/><text x="42.8870%" y="255.50">_..</text></g><g><title>unlink_chunk (642 samples, 0.14%)</title><rect x="44.2910%" y="229" width="0.1442%" height="15" fill="rgb(230,79,13)" fg:x="197158" fg:w="642"/><text x="44.5410%" y="239.50"></text></g><g><title>arena_for_chunk (138 samples, 0.03%)</title><rect x="44.4353%" y="245" width="0.0310%" height="15" fill="rgb(247,105,23)" fg:x="197800" fg:w="138"/><text x="44.6853%" y="255.50"></text></g><g><title>arena_for_chunk (119 samples, 0.03%)</title><rect x="44.4395%" y="229" width="0.0267%" height="15" fill="rgb(223,179,41)" fg:x="197819" fg:w="119"/><text x="44.6895%" y="239.50"></text></g><g><title>__GI___libc_malloc (17,340 samples, 3.90%)</title><rect x="40.7012%" y="261" width="3.8954%" height="15" fill="rgb(218,9,34)" fg:x="181178" fg:w="17340"/><text x="40.9512%" y="271.50">__GI..</text></g><g><title>tcache_get (536 samples, 0.12%)</title><rect x="44.4761%" y="245" width="0.1204%" height="15" fill="rgb(222,106,8)" fg:x="197982" fg:w="536"/><text x="44.7261%" y="255.50"></text></g><g><title>__rdl_alloc (80 samples, 0.02%)</title><rect x="44.5966%" y="261" width="0.0180%" height="15" fill="rgb(211,220,0)" fg:x="198518" fg:w="80"/><text x="44.8466%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (80 samples, 0.02%)</title><rect x="44.5966%" y="245" width="0.0180%" height="15" fill="rgb(229,52,16)" fg:x="198518" fg:w="80"/><text x="44.8466%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17,473 samples, 3.93%)</title><rect x="40.6978%" y="309" width="3.9253%" height="15" fill="rgb(212,155,18)" fg:x="181163" fg:w="17473"/><text x="40.9478%" y="319.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (17,473 samples, 3.93%)</title><rect x="40.6978%" y="293" width="3.9253%" height="15" fill="rgb(242,21,14)" fg:x="181163" fg:w="17473"/><text x="40.9478%" y="303.50">allo..</text></g><g><title>alloc::alloc::alloc (17,465 samples, 3.92%)</title><rect x="40.6996%" y="277" width="3.9235%" height="15" fill="rgb(222,19,48)" fg:x="181171" fg:w="17465"/><text x="40.9496%" y="287.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (17,574 samples, 3.95%)</title><rect x="40.6765%" y="373" width="3.9480%" height="15" fill="rgb(232,45,27)" fg:x="181068" fg:w="17574"/><text x="40.9265%" y="383.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17,574 samples, 3.95%)</title><rect x="40.6765%" y="357" width="3.9480%" height="15" fill="rgb(249,103,42)" fg:x="181068" fg:w="17574"/><text x="40.9265%" y="367.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17,505 samples, 3.93%)</title><rect x="40.6920%" y="341" width="3.9325%" height="15" fill="rgb(246,81,33)" fg:x="181137" fg:w="17505"/><text x="40.9420%" y="351.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17,505 samples, 3.93%)</title><rect x="40.6920%" y="325" width="3.9325%" height="15" fill="rgb(252,33,42)" fg:x="181137" fg:w="17505"/><text x="40.9420%" y="335.50">allo..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (106 samples, 0.02%)</title><rect x="44.6280%" y="341" width="0.0238%" height="15" fill="rgb(209,212,41)" fg:x="198658" fg:w="106"/><text x="44.8780%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (106 samples, 0.02%)</title><rect x="44.6280%" y="325" width="0.0238%" height="15" fill="rgb(207,154,6)" fg:x="198658" fg:w="106"/><text x="44.8780%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (407 samples, 0.09%)</title><rect x="44.6244%" y="373" width="0.0914%" height="15" fill="rgb(223,64,47)" fg:x="198642" fg:w="407"/><text x="44.8744%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (407 samples, 0.09%)</title><rect x="44.6244%" y="357" width="0.0914%" height="15" fill="rgb(211,161,38)" fg:x="198642" fg:w="407"/><text x="44.8744%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (285 samples, 0.06%)</title><rect x="44.6518%" y="341" width="0.0640%" height="15" fill="rgb(219,138,40)" fg:x="198764" fg:w="285"/><text x="44.9018%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (23,731 samples, 5.33%)</title><rect x="39.3850%" y="405" width="5.3311%" height="15" fill="rgb(241,228,46)" fg:x="175319" fg:w="23731"/><text x="39.6350%" y="415.50">&lt;F as n..</text></g><g><title>nom::multi::count::{{closure}} (23,690 samples, 5.32%)</title><rect x="39.3942%" y="389" width="5.3219%" height="15" fill="rgb(223,209,38)" fg:x="175360" fg:w="23690"/><text x="39.6442%" y="399.50">nom::mu..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (127 samples, 0.03%)</title><rect x="44.7161%" y="405" width="0.0285%" height="15" fill="rgb(236,164,45)" fg:x="199050" fg:w="127"/><text x="44.9661%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (98 samples, 0.02%)</title><rect x="44.7446%" y="389" width="0.0220%" height="15" fill="rgb(231,15,5)" fg:x="199177" fg:w="98"/><text x="44.9946%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (98 samples, 0.02%)</title><rect x="44.7446%" y="373" width="0.0220%" height="15" fill="rgb(252,35,15)" fg:x="199177" fg:w="98"/><text x="44.9946%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (98 samples, 0.02%)</title><rect x="44.7446%" y="357" width="0.0220%" height="15" fill="rgb(248,181,18)" fg:x="199177" fg:w="98"/><text x="44.9946%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (98 samples, 0.02%)</title><rect x="44.7446%" y="341" width="0.0220%" height="15" fill="rgb(233,39,42)" fg:x="199177" fg:w="98"/><text x="44.9946%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (90 samples, 0.02%)</title><rect x="44.7464%" y="325" width="0.0202%" height="15" fill="rgb(238,110,33)" fg:x="199185" fg:w="90"/><text x="44.9964%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (90 samples, 0.02%)</title><rect x="44.7464%" y="309" width="0.0202%" height="15" fill="rgb(233,195,10)" fg:x="199185" fg:w="90"/><text x="44.9964%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (90 samples, 0.02%)</title><rect x="44.7464%" y="293" width="0.0202%" height="15" fill="rgb(254,105,3)" fg:x="199185" fg:w="90"/><text x="44.9964%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (90 samples, 0.02%)</title><rect x="44.7464%" y="277" width="0.0202%" height="15" fill="rgb(221,225,9)" fg:x="199185" fg:w="90"/><text x="44.9964%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (90 samples, 0.02%)</title><rect x="44.7464%" y="261" width="0.0202%" height="15" fill="rgb(224,227,45)" fg:x="199185" fg:w="90"/><text x="44.9964%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (90 samples, 0.02%)</title><rect x="44.7464%" y="245" width="0.0202%" height="15" fill="rgb(229,198,43)" fg:x="199185" fg:w="90"/><text x="44.9964%" y="255.50"></text></g><g><title>alloc::alloc::alloc (90 samples, 0.02%)</title><rect x="44.7464%" y="229" width="0.0202%" height="15" fill="rgb(206,209,35)" fg:x="199185" fg:w="90"/><text x="44.9964%" y="239.50"></text></g><g><title>__GI___libc_malloc (90 samples, 0.02%)</title><rect x="44.7464%" y="213" width="0.0202%" height="15" fill="rgb(245,195,53)" fg:x="199185" fg:w="90"/><text x="44.9964%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (24,641 samples, 5.54%)</title><rect x="39.2362%" y="453" width="5.5355%" height="15" fill="rgb(240,92,26)" fg:x="174657" fg:w="24641"/><text x="39.4862%" y="463.50">core::r..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump::{{closure}} (24,608 samples, 5.53%)</title><rect x="39.2437%" y="437" width="5.5281%" height="15" fill="rgb(207,40,23)" fg:x="174690" fg:w="24608"/><text x="39.4937%" y="447.50">hprof_s..</text></g><g><title>nom::combinator::map::{{closure}} (24,011 samples, 5.39%)</title><rect x="39.3778%" y="421" width="5.3940%" height="15" fill="rgb(223,111,35)" fg:x="175287" fg:w="24011"/><text x="39.6278%" y="431.50">nom::co..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump::{{closure}}::{{closure}} (121 samples, 0.03%)</title><rect x="44.7446%" y="405" width="0.0272%" height="15" fill="rgb(229,147,28)" fg:x="199177" fg:w="121"/><text x="44.9946%" y="415.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (269 samples, 0.06%)</title><rect x="44.7938%" y="389" width="0.0604%" height="15" fill="rgb(211,29,28)" fg:x="199396" fg:w="269"/><text x="45.0438%" y="399.50"></text></g><g><title>nom::number::streaming::be_u32 (269 samples, 0.06%)</title><rect x="44.7938%" y="373" width="0.0604%" height="15" fill="rgb(228,72,33)" fg:x="199396" fg:w="269"/><text x="45.0438%" y="383.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (60 samples, 0.01%)</title><rect x="44.8407%" y="357" width="0.0135%" height="15" fill="rgb(205,214,31)" fg:x="199605" fg:w="60"/><text x="45.0907%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (60 samples, 0.01%)</title><rect x="44.8407%" y="341" width="0.0135%" height="15" fill="rgb(224,111,15)" fg:x="199605" fg:w="60"/><text x="45.0907%" y="351.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (60 samples, 0.01%)</title><rect x="44.8407%" y="325" width="0.0135%" height="15" fill="rgb(253,21,26)" fg:x="199605" fg:w="60"/><text x="45.0907%" y="335.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (60 samples, 0.01%)</title><rect x="44.8407%" y="309" width="0.0135%" height="15" fill="rgb(245,139,43)" fg:x="199605" fg:w="60"/><text x="45.0907%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (60 samples, 0.01%)</title><rect x="44.8407%" y="293" width="0.0135%" height="15" fill="rgb(252,170,7)" fg:x="199605" fg:w="60"/><text x="45.0907%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (51 samples, 0.01%)</title><rect x="44.8780%" y="261" width="0.0115%" height="15" fill="rgb(231,118,14)" fg:x="199771" fg:w="51"/><text x="45.1280%" y="271.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (51 samples, 0.01%)</title><rect x="44.8780%" y="245" width="0.0115%" height="15" fill="rgb(238,83,0)" fg:x="199771" fg:w="51"/><text x="45.1280%" y="255.50"></text></g><g><title>nom::number::streaming::be_u8 (51 samples, 0.01%)</title><rect x="44.8780%" y="229" width="0.0115%" height="15" fill="rgb(221,39,39)" fg:x="199771" fg:w="51"/><text x="45.1280%" y="239.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (161 samples, 0.04%)</title><rect x="44.8562%" y="357" width="0.0362%" height="15" fill="rgb(222,119,46)" fg:x="199674" fg:w="161"/><text x="45.1062%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (125 samples, 0.03%)</title><rect x="44.8643%" y="341" width="0.0281%" height="15" fill="rgb(222,165,49)" fg:x="199710" fg:w="125"/><text x="45.1143%" y="351.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (125 samples, 0.03%)</title><rect x="44.8643%" y="325" width="0.0281%" height="15" fill="rgb(219,113,52)" fg:x="199710" fg:w="125"/><text x="45.1143%" y="335.50"></text></g><g><title>nom::number::streaming::be_i8 (125 samples, 0.03%)</title><rect x="44.8643%" y="309" width="0.0281%" height="15" fill="rgb(214,7,15)" fg:x="199710" fg:w="125"/><text x="45.1143%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (125 samples, 0.03%)</title><rect x="44.8643%" y="293" width="0.0281%" height="15" fill="rgb(235,32,4)" fg:x="199710" fg:w="125"/><text x="45.1143%" y="303.50"></text></g><g><title>nom::combinator::map::{{closure}} (125 samples, 0.03%)</title><rect x="44.8643%" y="277" width="0.0281%" height="15" fill="rgb(238,90,54)" fg:x="199710" fg:w="125"/><text x="45.1143%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (54 samples, 0.01%)</title><rect x="44.8924%" y="357" width="0.0121%" height="15" fill="rgb(213,208,19)" fg:x="199835" fg:w="54"/><text x="45.1424%" y="367.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (446 samples, 0.10%)</title><rect x="44.8542%" y="389" width="0.1002%" height="15" fill="rgb(233,156,4)" fg:x="199665" fg:w="446"/><text x="45.1042%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (446 samples, 0.10%)</title><rect x="44.8542%" y="373" width="0.1002%" height="15" fill="rgb(207,194,5)" fg:x="199665" fg:w="446"/><text x="45.1042%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (222 samples, 0.05%)</title><rect x="44.9045%" y="357" width="0.0499%" height="15" fill="rgb(206,111,30)" fg:x="199889" fg:w="222"/><text x="45.1545%" y="367.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (178 samples, 0.04%)</title><rect x="44.9144%" y="341" width="0.0400%" height="15" fill="rgb(243,70,54)" fg:x="199933" fg:w="178"/><text x="45.1644%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.02%)</title><rect x="45.0277%" y="341" width="0.0247%" height="15" fill="rgb(242,28,8)" fg:x="200437" fg:w="110"/><text x="45.2777%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.02%)</title><rect x="45.0277%" y="325" width="0.0247%" height="15" fill="rgb(219,106,18)" fg:x="200437" fg:w="110"/><text x="45.2777%" y="335.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (110 samples, 0.02%)</title><rect x="45.0277%" y="309" width="0.0247%" height="15" fill="rgb(244,222,10)" fg:x="200437" fg:w="110"/><text x="45.2777%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,183 samples, 0.27%)</title><rect x="44.7871%" y="421" width="0.2658%" height="15" fill="rgb(236,179,52)" fg:x="199366" fg:w="1183"/><text x="45.0371%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,153 samples, 0.26%)</title><rect x="44.7938%" y="405" width="0.2590%" height="15" fill="rgb(213,23,39)" fg:x="199396" fg:w="1153"/><text x="45.0438%" y="415.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (438 samples, 0.10%)</title><rect x="44.9544%" y="389" width="0.0984%" height="15" fill="rgb(238,48,10)" fg:x="200111" fg:w="438"/><text x="45.2044%" y="399.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (437 samples, 0.10%)</title><rect x="44.9546%" y="373" width="0.0982%" height="15" fill="rgb(251,196,23)" fg:x="200112" fg:w="437"/><text x="45.2046%" y="383.50"></text></g><g><title>nom::number::streaming::be_u64 (437 samples, 0.10%)</title><rect x="44.9546%" y="357" width="0.0982%" height="15" fill="rgb(250,152,24)" fg:x="200112" fg:w="437"/><text x="45.2046%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (54,374 samples, 12.21%)</title><rect x="32.8846%" y="501" width="12.2150%" height="15" fill="rgb(209,150,17)" fg:x="146383" fg:w="54374"/><text x="33.1346%" y="511.50">core::result::Resu..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (54,374 samples, 12.21%)</title><rect x="32.8846%" y="485" width="12.2150%" height="15" fill="rgb(234,202,34)" fg:x="146383" fg:w="54374"/><text x="33.1346%" y="495.50">hprof_slurp::parse..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (26,100 samples, 5.86%)</title><rect x="39.2362%" y="469" width="5.8633%" height="15" fill="rgb(253,148,53)" fg:x="174657" fg:w="26100"/><text x="39.4862%" y="479.50">hprof_s..</text></g><g><title>nom::sequence::tuple::{{closure}} (1,459 samples, 0.33%)</title><rect x="44.7718%" y="453" width="0.3278%" height="15" fill="rgb(218,129,16)" fg:x="199298" fg:w="1459"/><text x="45.0218%" y="463.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,459 samples, 0.33%)</title><rect x="44.7718%" y="437" width="0.3278%" height="15" fill="rgb(216,85,19)" fg:x="199298" fg:w="1459"/><text x="45.0218%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (208 samples, 0.05%)</title><rect x="45.0528%" y="421" width="0.0467%" height="15" fill="rgb(235,228,7)" fg:x="200549" fg:w="208"/><text x="45.3028%" y="431.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (54,782 samples, 12.31%)</title><rect x="32.8846%" y="517" width="12.3066%" height="15" fill="rgb(245,175,0)" fg:x="146383" fg:w="54782"/><text x="33.1346%" y="527.50">hprof_slurp::parse..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (408 samples, 0.09%)</title><rect x="45.0995%" y="501" width="0.0917%" height="15" fill="rgb(208,168,36)" fg:x="200757" fg:w="408"/><text x="45.3495%" y="511.50"></text></g><g><title>nom::number::streaming::be_u8 (408 samples, 0.09%)</title><rect x="45.0995%" y="485" width="0.0917%" height="15" fill="rgb(246,171,24)" fg:x="200757" fg:w="408"/><text x="45.3495%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (401 samples, 0.09%)</title><rect x="45.1011%" y="469" width="0.0901%" height="15" fill="rgb(215,142,24)" fg:x="200764" fg:w="401"/><text x="45.3511%" y="479.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (401 samples, 0.09%)</title><rect x="45.1011%" y="453" width="0.0901%" height="15" fill="rgb(250,187,7)" fg:x="200764" fg:w="401"/><text x="45.3511%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (180,655 samples, 40.58%)</title><rect x="4.6077%" y="549" width="40.5837%" height="15" fill="rgb(228,66,33)" fg:x="20511" fg:w="180655"/><text x="4.8577%" y="559.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (180,220 samples, 40.49%)</title><rect x="4.7055%" y="533" width="40.4860%" height="15" fill="rgb(234,215,21)" fg:x="20946" fg:w="180220"/><text x="4.9555%" y="543.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (251 samples, 0.06%)</title><rect x="45.1979%" y="533" width="0.0564%" height="15" fill="rgb(222,191,20)" fg:x="201195" fg:w="251"/><text x="45.4479%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (916 samples, 0.21%)</title><rect x="45.1914%" y="549" width="0.2058%" height="15" fill="rgb(245,79,54)" fg:x="201166" fg:w="916"/><text x="45.4414%" y="559.50"></text></g><g><title>core::ptr::write (625 samples, 0.14%)</title><rect x="45.2568%" y="533" width="0.1404%" height="15" fill="rgb(240,10,37)" fg:x="201457" fg:w="625"/><text x="45.5068%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (189,856 samples, 42.65%)</title><rect x="2.7488%" y="581" width="42.6507%" height="15" fill="rgb(214,192,32)" fg:x="12236" fg:w="189856"/><text x="2.9988%" y="591.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (189,856 samples, 42.65%)</title><rect x="2.7488%" y="565" width="42.6507%" height="15" fill="rgb(209,36,54)" fg:x="12236" fg:w="189856"/><text x="2.9988%" y="575.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>__clone3 (195,342 samples, 43.88%)</title><rect x="1.5177%" y="805" width="43.8831%" height="15" fill="rgb(220,10,11)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="815.50">__clone3</text></g><g><title>start_thread (195,342 samples, 43.88%)</title><rect x="1.5177%" y="789" width="43.8831%" height="15" fill="rgb(221,106,17)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="799.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (195,342 samples, 43.88%)</title><rect x="1.5177%" y="773" width="43.8831%" height="15" fill="rgb(251,142,44)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="783.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (195,342 samples, 43.88%)</title><rect x="1.5177%" y="757" width="43.8831%" height="15" fill="rgb(238,13,15)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="767.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (195,342 samples, 43.88%)</title><rect x="1.5177%" y="741" width="43.8831%" height="15" fill="rgb(208,107,27)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="751.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (195,342 samples, 43.88%)</title><rect x="1.5177%" y="725" width="43.8831%" height="15" fill="rgb(205,136,37)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="735.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (195,342 samples, 43.88%)</title><rect x="1.5177%" y="709" width="43.8831%" height="15" fill="rgb(250,205,27)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="719.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (195,342 samples, 43.88%)</title><rect x="1.5177%" y="693" width="43.8831%" height="15" fill="rgb(210,80,43)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (195,342 samples, 43.88%)</title><rect x="1.5177%" y="677" width="43.8831%" height="15" fill="rgb(247,160,36)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (195,342 samples, 43.88%)</title><rect x="1.5177%" y="661" width="43.8831%" height="15" fill="rgb(234,13,49)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="671.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (195,342 samples, 43.88%)</title><rect x="1.5177%" y="645" width="43.8831%" height="15" fill="rgb(234,122,0)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="655.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (195,342 samples, 43.88%)</title><rect x="1.5177%" y="629" width="43.8831%" height="15" fill="rgb(207,146,38)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="639.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (195,342 samples, 43.88%)</title><rect x="1.5177%" y="613" width="43.8831%" height="15" fill="rgb(207,177,25)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="623.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (195,342 samples, 43.88%)</title><rect x="1.5177%" y="597" width="43.8831%" height="15" fill="rgb(211,178,42)" fg:x="6756" fg:w="195342"/><text x="1.7677%" y="607.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::star..</text></g><g><title>entry_SYSCALL_64_after_hwframe (491 samples, 0.11%)</title><rect x="45.4172%" y="805" width="0.1103%" height="15" fill="rgb(230,69,54)" fg:x="202171" fg:w="491"/><text x="45.6672%" y="815.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (701 samples, 0.16%)</title><rect x="45.5275%" y="805" width="0.1575%" height="15" fill="rgb(214,135,41)" fg:x="202662" fg:w="701"/><text x="45.7775%" y="815.50"></text></g><g><title>syscall_return_via_sysret (221 samples, 0.05%)</title><rect x="45.6872%" y="805" width="0.0496%" height="15" fill="rgb(237,67,25)" fg:x="203373" fg:w="221"/><text x="45.9372%" y="815.50"></text></g><g><title>hprof-parser (203,602 samples, 45.74%)</title><rect x="0.0000%" y="821" width="45.7387%" height="15" fill="rgb(222,189,50)" fg:x="0" fg:w="203602"/><text x="0.2500%" y="831.50">hprof-parser</text></g><g><title>asm_exc_page_fault (3,310 samples, 0.74%)</title><rect x="45.7829%" y="309" width="0.7436%" height="15" fill="rgb(245,148,34)" fg:x="203799" fg:w="3310"/><text x="46.0329%" y="319.50"></text></g><g><title>copy_page_to_iter (176 samples, 0.04%)</title><rect x="46.5265%" y="309" width="0.0395%" height="15" fill="rgb(222,29,6)" fg:x="207109" fg:w="176"/><text x="46.7765%" y="319.50"></text></g><g><title>__read_end_io (54 samples, 0.01%)</title><rect x="47.4734%" y="69" width="0.0121%" height="15" fill="rgb(221,189,43)" fg:x="211324" fg:w="54"/><text x="47.7234%" y="79.50"></text></g><g><title>blk_update_request (95 samples, 0.02%)</title><rect x="47.4718%" y="117" width="0.0213%" height="15" fill="rgb(207,36,27)" fg:x="211317" fg:w="95"/><text x="47.7218%" y="127.50"></text></g><g><title>bio_endio (93 samples, 0.02%)</title><rect x="47.4723%" y="101" width="0.0209%" height="15" fill="rgb(217,90,24)" fg:x="211319" fg:w="93"/><text x="47.7223%" y="111.50"></text></g><g><title>mpage_end_io (88 samples, 0.02%)</title><rect x="47.4734%" y="85" width="0.0198%" height="15" fill="rgb(224,66,35)" fg:x="211324" fg:w="88"/><text x="47.7234%" y="95.50"></text></g><g><title>blk_mq_end_request (98 samples, 0.02%)</title><rect x="47.4714%" y="133" width="0.0220%" height="15" fill="rgb(221,13,50)" fg:x="211315" fg:w="98"/><text x="47.7214%" y="143.50"></text></g><g><title>nvme_complete_rq (100 samples, 0.02%)</title><rect x="47.4711%" y="149" width="0.0225%" height="15" fill="rgb(236,68,49)" fg:x="211314" fg:w="100"/><text x="47.7211%" y="159.50"></text></g><g><title>__handle_irq_event_percpu (113 samples, 0.03%)</title><rect x="47.4698%" y="213" width="0.0254%" height="15" fill="rgb(229,146,28)" fg:x="211308" fg:w="113"/><text x="47.7198%" y="223.50"></text></g><g><title>nvme_irq (113 samples, 0.03%)</title><rect x="47.4698%" y="197" width="0.0254%" height="15" fill="rgb(225,31,38)" fg:x="211308" fg:w="113"/><text x="47.7198%" y="207.50"></text></g><g><title>nvme_process_cq (113 samples, 0.03%)</title><rect x="47.4698%" y="181" width="0.0254%" height="15" fill="rgb(250,208,3)" fg:x="211308" fg:w="113"/><text x="47.7198%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (108 samples, 0.02%)</title><rect x="47.4709%" y="165" width="0.0243%" height="15" fill="rgb(246,54,23)" fg:x="211313" fg:w="108"/><text x="47.7209%" y="175.50"></text></g><g><title>handle_irq_event (114 samples, 0.03%)</title><rect x="47.4698%" y="229" width="0.0256%" height="15" fill="rgb(243,76,11)" fg:x="211308" fg:w="114"/><text x="47.7198%" y="239.50"></text></g><g><title>__common_interrupt (116 samples, 0.03%)</title><rect x="47.4696%" y="261" width="0.0261%" height="15" fill="rgb(245,21,50)" fg:x="211307" fg:w="116"/><text x="47.7196%" y="271.50"></text></g><g><title>handle_edge_irq (115 samples, 0.03%)</title><rect x="47.4698%" y="245" width="0.0258%" height="15" fill="rgb(228,9,43)" fg:x="211308" fg:w="115"/><text x="47.7198%" y="255.50"></text></g><g><title>asm_common_interrupt (117 samples, 0.03%)</title><rect x="47.4696%" y="293" width="0.0263%" height="15" fill="rgb(208,100,47)" fg:x="211307" fg:w="117"/><text x="47.7196%" y="303.50"></text></g><g><title>common_interrupt (117 samples, 0.03%)</title><rect x="47.4696%" y="277" width="0.0263%" height="15" fill="rgb(232,26,8)" fg:x="211307" fg:w="117"/><text x="47.7196%" y="287.50"></text></g><g><title>nvme_complete_rq (50 samples, 0.01%)</title><rect x="47.5455%" y="101" width="0.0112%" height="15" fill="rgb(216,166,38)" fg:x="211645" fg:w="50"/><text x="47.7955%" y="111.50"></text></g><g><title>blk_mq_end_request (50 samples, 0.01%)</title><rect x="47.5455%" y="85" width="0.0112%" height="15" fill="rgb(251,202,51)" fg:x="211645" fg:w="50"/><text x="47.7955%" y="95.50"></text></g><g><title>blk_update_request (49 samples, 0.01%)</title><rect x="47.5457%" y="69" width="0.0110%" height="15" fill="rgb(254,216,34)" fg:x="211646" fg:w="49"/><text x="47.7957%" y="79.50"></text></g><g><title>bio_endio (48 samples, 0.01%)</title><rect x="47.5460%" y="53" width="0.0108%" height="15" fill="rgb(251,32,27)" fg:x="211647" fg:w="48"/><text x="47.7960%" y="63.50"></text></g><g><title>mpage_end_io (46 samples, 0.01%)</title><rect x="47.5464%" y="37" width="0.0103%" height="15" fill="rgb(208,127,28)" fg:x="211649" fg:w="46"/><text x="47.7964%" y="47.50"></text></g><g><title>__handle_irq_event_percpu (54 samples, 0.01%)</title><rect x="47.5453%" y="165" width="0.0121%" height="15" fill="rgb(224,137,22)" fg:x="211644" fg:w="54"/><text x="47.7953%" y="175.50"></text></g><g><title>nvme_irq (54 samples, 0.01%)</title><rect x="47.5453%" y="149" width="0.0121%" height="15" fill="rgb(254,70,32)" fg:x="211644" fg:w="54"/><text x="47.7953%" y="159.50"></text></g><g><title>nvme_process_cq (54 samples, 0.01%)</title><rect x="47.5453%" y="133" width="0.0121%" height="15" fill="rgb(229,75,37)" fg:x="211644" fg:w="54"/><text x="47.7953%" y="143.50"></text></g><g><title>nvme_pci_complete_rq (53 samples, 0.01%)</title><rect x="47.5455%" y="117" width="0.0119%" height="15" fill="rgb(252,64,23)" fg:x="211645" fg:w="53"/><text x="47.7955%" y="127.50"></text></g><g><title>handle_irq_event (55 samples, 0.01%)</title><rect x="47.5453%" y="181" width="0.0124%" height="15" fill="rgb(232,162,48)" fg:x="211644" fg:w="55"/><text x="47.7953%" y="191.50"></text></g><g><title>__common_interrupt (58 samples, 0.01%)</title><rect x="47.5451%" y="213" width="0.0130%" height="15" fill="rgb(246,160,12)" fg:x="211643" fg:w="58"/><text x="47.7951%" y="223.50"></text></g><g><title>handle_edge_irq (57 samples, 0.01%)</title><rect x="47.5453%" y="197" width="0.0128%" height="15" fill="rgb(247,166,0)" fg:x="211644" fg:w="57"/><text x="47.7953%" y="207.50"></text></g><g><title>asm_common_interrupt (59 samples, 0.01%)</title><rect x="47.5451%" y="245" width="0.0133%" height="15" fill="rgb(249,219,21)" fg:x="211643" fg:w="59"/><text x="47.7951%" y="255.50"></text></g><g><title>common_interrupt (59 samples, 0.01%)</title><rect x="47.5451%" y="229" width="0.0133%" height="15" fill="rgb(205,209,3)" fg:x="211643" fg:w="59"/><text x="47.7951%" y="239.50"></text></g><g><title>down_read_trylock (73 samples, 0.02%)</title><rect x="47.5599%" y="245" width="0.0164%" height="15" fill="rgb(243,44,1)" fg:x="211709" fg:w="73"/><text x="47.8099%" y="255.50"></text></g><g><title>find_vma (64 samples, 0.01%)</title><rect x="47.5763%" y="245" width="0.0144%" height="15" fill="rgb(206,159,16)" fg:x="211782" fg:w="64"/><text x="47.8263%" y="255.50"></text></g><g><title>vmacache_find (52 samples, 0.01%)</title><rect x="47.5790%" y="229" width="0.0117%" height="15" fill="rgb(244,77,30)" fg:x="211794" fg:w="52"/><text x="47.8290%" y="239.50"></text></g><g><title>__count_memcg_events (59 samples, 0.01%)</title><rect x="47.6239%" y="229" width="0.0133%" height="15" fill="rgb(218,69,12)" fg:x="211994" fg:w="59"/><text x="47.8739%" y="239.50"></text></g><g><title>_raw_spin_lock (84 samples, 0.02%)</title><rect x="47.7219%" y="197" width="0.0189%" height="15" fill="rgb(212,87,7)" fg:x="212430" fg:w="84"/><text x="47.9719%" y="207.50"></text></g><g><title>__cgroup_throttle_swaprate (139 samples, 0.03%)</title><rect x="47.7686%" y="181" width="0.0312%" height="15" fill="rgb(245,114,25)" fg:x="212638" fg:w="139"/><text x="48.0186%" y="191.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (452 samples, 0.10%)</title><rect x="47.8306%" y="149" width="0.1015%" height="15" fill="rgb(210,61,42)" fg:x="212914" fg:w="452"/><text x="48.0806%" y="159.50"></text></g><g><title>cgroup_rstat_updated (57 samples, 0.01%)</title><rect x="47.9193%" y="133" width="0.0128%" height="15" fill="rgb(211,52,33)" fg:x="213309" fg:w="57"/><text x="48.1693%" y="143.50"></text></g><g><title>charge_memcg (897 samples, 0.20%)</title><rect x="47.8097%" y="165" width="0.2015%" height="15" fill="rgb(234,58,33)" fg:x="212821" fg:w="897"/><text x="48.0597%" y="175.50"></text></g><g><title>try_charge_memcg (343 samples, 0.08%)</title><rect x="47.9341%" y="149" width="0.0771%" height="15" fill="rgb(220,115,36)" fg:x="213375" fg:w="343"/><text x="48.1841%" y="159.50"></text></g><g><title>get_mem_cgroup_from_mm (169 samples, 0.04%)</title><rect x="48.0114%" y="165" width="0.0380%" height="15" fill="rgb(243,153,54)" fg:x="213719" fg:w="169"/><text x="48.2614%" y="175.50"></text></g><g><title>__mem_cgroup_charge (1,138 samples, 0.26%)</title><rect x="47.8023%" y="181" width="0.2556%" height="15" fill="rgb(251,47,18)" fg:x="212788" fg:w="1138"/><text x="48.0523%" y="191.50"></text></g><g><title>__next_zones_zonelist (69 samples, 0.02%)</title><rect x="48.1271%" y="149" width="0.0155%" height="15" fill="rgb(242,102,42)" fg:x="214234" fg:w="69"/><text x="48.3771%" y="159.50"></text></g><g><title>clear_page_erms (1,442 samples, 0.32%)</title><rect x="48.1783%" y="133" width="0.3239%" height="15" fill="rgb(234,31,38)" fg:x="214462" fg:w="1442"/><text x="48.4283%" y="143.50"></text></g><g><title>get_page_from_freelist (2,184 samples, 0.49%)</title><rect x="48.1435%" y="149" width="0.4906%" height="15" fill="rgb(221,117,51)" fg:x="214307" fg:w="2184"/><text x="48.3935%" y="159.50"></text></g><g><title>rmqueue (552 samples, 0.12%)</title><rect x="48.5101%" y="133" width="0.1240%" height="15" fill="rgb(212,20,18)" fg:x="215939" fg:w="552"/><text x="48.7601%" y="143.50"></text></g><g><title>rmqueue_bulk (356 samples, 0.08%)</title><rect x="48.5542%" y="117" width="0.0800%" height="15" fill="rgb(245,133,36)" fg:x="216135" fg:w="356"/><text x="48.8042%" y="127.50"></text></g><g><title>__alloc_pages (2,448 samples, 0.55%)</title><rect x="48.0898%" y="165" width="0.5499%" height="15" fill="rgb(212,6,19)" fg:x="214068" fg:w="2448"/><text x="48.3398%" y="175.50"></text></g><g><title>alloc_pages_vma (2,577 samples, 0.58%)</title><rect x="48.0710%" y="181" width="0.5789%" height="15" fill="rgb(218,1,36)" fg:x="213984" fg:w="2577"/><text x="48.3210%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (66 samples, 0.01%)</title><rect x="48.7808%" y="101" width="0.0148%" height="15" fill="rgb(246,84,54)" fg:x="217144" fg:w="66"/><text x="49.0308%" y="111.50"></text></g><g><title>__mod_lruvec_state (109 samples, 0.02%)</title><rect x="48.7772%" y="117" width="0.0245%" height="15" fill="rgb(242,110,6)" fg:x="217128" fg:w="109"/><text x="49.0272%" y="127.50"></text></g><g><title>__pagevec_lru_add_fn (567 samples, 0.13%)</title><rect x="48.7024%" y="133" width="0.1274%" height="15" fill="rgb(214,47,5)" fg:x="216795" fg:w="567"/><text x="48.9524%" y="143.50"></text></g><g><title>page_mapping (50 samples, 0.01%)</title><rect x="48.8186%" y="117" width="0.0112%" height="15" fill="rgb(218,159,25)" fg:x="217312" fg:w="50"/><text x="49.0686%" y="127.50"></text></g><g><title>__pagevec_lru_add (740 samples, 0.17%)</title><rect x="48.6905%" y="149" width="0.1662%" height="15" fill="rgb(215,211,28)" fg:x="216742" fg:w="740"/><text x="48.9405%" y="159.50"></text></g><g><title>release_pages (80 samples, 0.02%)</title><rect x="48.8388%" y="133" width="0.0180%" height="15" fill="rgb(238,59,32)" fg:x="217402" fg:w="80"/><text x="49.0888%" y="143.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (875 samples, 0.20%)</title><rect x="48.6618%" y="181" width="0.1966%" height="15" fill="rgb(226,82,3)" fg:x="216614" fg:w="875"/><text x="48.9118%" y="191.50"></text></g><g><title>lru_cache_add (857 samples, 0.19%)</title><rect x="48.6658%" y="165" width="0.1925%" height="15" fill="rgb(240,164,32)" fg:x="216632" fg:w="857"/><text x="48.9158%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (68 samples, 0.02%)</title><rect x="48.8808%" y="133" width="0.0153%" height="15" fill="rgb(232,46,7)" fg:x="217589" fg:w="68"/><text x="49.1308%" y="143.50"></text></g><g><title>__mod_node_page_state (58 samples, 0.01%)</title><rect x="48.8961%" y="133" width="0.0130%" height="15" fill="rgb(229,129,53)" fg:x="217657" fg:w="58"/><text x="49.1461%" y="143.50"></text></g><g><title>__mod_lruvec_state (156 samples, 0.04%)</title><rect x="48.8756%" y="149" width="0.0350%" height="15" fill="rgb(234,188,29)" fg:x="217566" fg:w="156"/><text x="49.1256%" y="159.50"></text></g><g><title>__mod_lruvec_page_state (224 samples, 0.05%)</title><rect x="48.8644%" y="165" width="0.0503%" height="15" fill="rgb(246,141,4)" fg:x="217516" fg:w="224"/><text x="49.1144%" y="175.50"></text></g><g><title>page_add_new_anon_rmap (284 samples, 0.06%)</title><rect x="48.8592%" y="181" width="0.0638%" height="15" fill="rgb(229,23,39)" fg:x="217493" fg:w="284"/><text x="49.1092%" y="191.50"></text></g><g><title>do_anonymous_page (5,338 samples, 1.20%)</title><rect x="47.7430%" y="197" width="1.1992%" height="15" fill="rgb(206,12,3)" fg:x="212524" fg:w="5338"/><text x="47.9930%" y="207.50"></text></g><g><title>handle_pte_fault (5,607 samples, 1.26%)</title><rect x="47.7019%" y="213" width="1.2596%" height="15" fill="rgb(252,226,20)" fg:x="212341" fg:w="5607"/><text x="47.9519%" y="223.50"></text></g><g><title>__handle_mm_fault (5,933 samples, 1.33%)</title><rect x="47.6372%" y="229" width="1.3328%" height="15" fill="rgb(216,123,35)" fg:x="212053" fg:w="5933"/><text x="47.8872%" y="239.50"></text></g><g><title>handle_mm_fault (6,223 samples, 1.40%)</title><rect x="47.5907%" y="245" width="1.3980%" height="15" fill="rgb(212,68,40)" fg:x="211846" fg:w="6223"/><text x="47.8407%" y="255.50"></text></g><g><title>do_user_addr_fault (6,609 samples, 1.48%)</title><rect x="47.5129%" y="261" width="1.4847%" height="15" fill="rgb(254,125,32)" fg:x="211500" fg:w="6609"/><text x="47.7629%" y="271.50"></text></g><g><title>exc_page_fault (6,782 samples, 1.52%)</title><rect x="47.4974%" y="277" width="1.5236%" height="15" fill="rgb(253,97,22)" fg:x="211431" fg:w="6782"/><text x="47.7474%" y="287.50"></text></g><g><title>up_read (67 samples, 0.02%)</title><rect x="49.0059%" y="261" width="0.0151%" height="15" fill="rgb(241,101,14)" fg:x="218146" fg:w="67"/><text x="49.2559%" y="271.50"></text></g><g><title>asm_exc_page_fault (6,795 samples, 1.53%)</title><rect x="47.4959%" y="293" width="1.5265%" height="15" fill="rgb(238,103,29)" fg:x="211424" fg:w="6795"/><text x="47.7459%" y="303.50"></text></g><g><title>copy_user_enhanced_fast_string (10,940 samples, 2.46%)</title><rect x="46.5660%" y="309" width="2.4576%" height="15" fill="rgb(233,195,47)" fg:x="207285" fg:w="10940"/><text x="46.8160%" y="319.50">co..</text></g><g><title>error_entry (103 samples, 0.02%)</title><rect x="49.0239%" y="309" width="0.0231%" height="15" fill="rgb(246,218,30)" fg:x="218226" fg:w="103"/><text x="49.2739%" y="319.50"></text></g><g><title>filemap_get_read_batch (307 samples, 0.07%)</title><rect x="49.0497%" y="293" width="0.0690%" height="15" fill="rgb(219,145,47)" fg:x="218341" fg:w="307"/><text x="49.2997%" y="303.50"></text></g><g><title>__next_zones_zonelist (46 samples, 0.01%)</title><rect x="49.2014%" y="197" width="0.0103%" height="15" fill="rgb(243,12,26)" fg:x="219016" fg:w="46"/><text x="49.4514%" y="207.50"></text></g><g><title>clear_page_erms (1,275 samples, 0.29%)</title><rect x="49.2396%" y="181" width="0.2864%" height="15" fill="rgb(214,87,16)" fg:x="219186" fg:w="1275"/><text x="49.4896%" y="191.50"></text></g><g><title>get_page_from_freelist (1,968 samples, 0.44%)</title><rect x="49.2124%" y="197" width="0.4421%" height="15" fill="rgb(208,99,42)" fg:x="219065" fg:w="1968"/><text x="49.4624%" y="207.50"></text></g><g><title>rmqueue (539 samples, 0.12%)</title><rect x="49.5334%" y="181" width="0.1211%" height="15" fill="rgb(253,99,2)" fg:x="220494" fg:w="539"/><text x="49.7834%" y="191.50"></text></g><g><title>rmqueue_bulk (359 samples, 0.08%)</title><rect x="49.5738%" y="165" width="0.0806%" height="15" fill="rgb(220,168,23)" fg:x="220674" fg:w="359"/><text x="49.8238%" y="175.50"></text></g><g><title>__alloc_pages (2,206 samples, 0.50%)</title><rect x="49.1634%" y="213" width="0.4956%" height="15" fill="rgb(242,38,24)" fg:x="218847" fg:w="2206"/><text x="49.4134%" y="223.50"></text></g><g><title>alloc_pages (2,298 samples, 0.52%)</title><rect x="49.1504%" y="229" width="0.5162%" height="15" fill="rgb(225,182,9)" fg:x="218789" fg:w="2298"/><text x="49.4004%" y="239.50"></text></g><g><title>__page_cache_alloc (2,335 samples, 0.52%)</title><rect x="49.1430%" y="245" width="0.5246%" height="15" fill="rgb(243,178,37)" fg:x="218756" fg:w="2335"/><text x="49.3930%" y="255.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (60 samples, 0.01%)</title><rect x="49.9268%" y="181" width="0.0135%" height="15" fill="rgb(232,139,19)" fg:x="222245" fg:w="60"/><text x="50.1768%" y="191.50"></text></g><g><title>charge_memcg (240 samples, 0.05%)</title><rect x="49.9113%" y="197" width="0.0539%" height="15" fill="rgb(225,201,24)" fg:x="222176" fg:w="240"/><text x="50.1613%" y="207.50"></text></g><g><title>try_charge_memcg (101 samples, 0.02%)</title><rect x="49.9425%" y="181" width="0.0227%" height="15" fill="rgb(221,47,46)" fg:x="222315" fg:w="101"/><text x="50.1925%" y="191.50"></text></g><g><title>__mem_cgroup_charge (329 samples, 0.07%)</title><rect x="49.9056%" y="213" width="0.0739%" height="15" fill="rgb(249,23,13)" fg:x="222151" fg:w="329"/><text x="50.1556%" y="223.50"></text></g><g><title>__mod_memcg_lruvec_state (71 samples, 0.02%)</title><rect x="49.9930%" y="181" width="0.0159%" height="15" fill="rgb(219,9,5)" fg:x="222540" fg:w="71"/><text x="50.2430%" y="191.50"></text></g><g><title>__mod_node_page_state (60 samples, 0.01%)</title><rect x="50.0090%" y="181" width="0.0135%" height="15" fill="rgb(254,171,16)" fg:x="222611" fg:w="60"/><text x="50.2590%" y="191.50"></text></g><g><title>__mod_lruvec_state (146 samples, 0.03%)</title><rect x="49.9901%" y="197" width="0.0328%" height="15" fill="rgb(230,171,20)" fg:x="222527" fg:w="146"/><text x="50.2401%" y="207.50"></text></g><g><title>__mod_lruvec_page_state (208 samples, 0.05%)</title><rect x="49.9796%" y="213" width="0.0467%" height="15" fill="rgb(210,71,41)" fg:x="222480" fg:w="208"/><text x="50.2296%" y="223.50"></text></g><g><title>_raw_spin_lock_irq (95 samples, 0.02%)</title><rect x="50.0270%" y="213" width="0.0213%" height="15" fill="rgb(206,173,20)" fg:x="222691" fg:w="95"/><text x="50.2770%" y="223.50"></text></g><g><title>xas_load (197 samples, 0.04%)</title><rect x="50.0692%" y="197" width="0.0443%" height="15" fill="rgb(233,88,34)" fg:x="222879" fg:w="197"/><text x="50.3192%" y="207.50"></text></g><g><title>xa_get_order (247 samples, 0.06%)</title><rect x="50.0593%" y="213" width="0.0555%" height="15" fill="rgb(223,209,46)" fg:x="222835" fg:w="247"/><text x="50.3093%" y="223.50"></text></g><g><title>xas_descend (135 samples, 0.03%)</title><rect x="50.1368%" y="197" width="0.0303%" height="15" fill="rgb(250,43,18)" fg:x="223180" fg:w="135"/><text x="50.3868%" y="207.50"></text></g><g><title>xas_find_conflict (241 samples, 0.05%)</title><rect x="50.1209%" y="213" width="0.0541%" height="15" fill="rgb(208,13,10)" fg:x="223109" fg:w="241"/><text x="50.3709%" y="223.50"></text></g><g><title>__add_to_page_cache_locked (2,389 samples, 0.54%)</title><rect x="49.6821%" y="229" width="0.5367%" height="15" fill="rgb(212,200,36)" fg:x="221156" fg:w="2389"/><text x="49.9321%" y="239.50"></text></g><g><title>xas_store (180 samples, 0.04%)</title><rect x="50.1784%" y="213" width="0.0404%" height="15" fill="rgb(225,90,30)" fg:x="223365" fg:w="180"/><text x="50.4284%" y="223.50"></text></g><g><title>xas_create (68 samples, 0.02%)</title><rect x="50.2035%" y="197" width="0.0153%" height="15" fill="rgb(236,182,39)" fg:x="223477" fg:w="68"/><text x="50.4535%" y="207.50"></text></g><g><title>__mod_memcg_lruvec_state (67 samples, 0.02%)</title><rect x="50.3287%" y="165" width="0.0151%" height="15" fill="rgb(212,144,35)" fg:x="224034" fg:w="67"/><text x="50.5787%" y="175.50"></text></g><g><title>__mod_lruvec_state (108 samples, 0.02%)</title><rect x="50.3242%" y="181" width="0.0243%" height="15" fill="rgb(228,63,44)" fg:x="224014" fg:w="108"/><text x="50.5742%" y="191.50"></text></g><g><title>__pagevec_lru_add_fn (570 samples, 0.13%)</title><rect x="50.2523%" y="197" width="0.1280%" height="15" fill="rgb(228,109,6)" fg:x="223694" fg:w="570"/><text x="50.5023%" y="207.50"></text></g><g><title>page_mapping (63 samples, 0.01%)</title><rect x="50.3662%" y="181" width="0.0142%" height="15" fill="rgb(238,117,24)" fg:x="224201" fg:w="63"/><text x="50.6162%" y="191.50"></text></g><g><title>__pagevec_lru_add (727 samples, 0.16%)</title><rect x="50.2428%" y="213" width="0.1633%" height="15" fill="rgb(242,26,26)" fg:x="223652" fg:w="727"/><text x="50.4928%" y="223.50"></text></g><g><title>release_pages (72 samples, 0.02%)</title><rect x="50.3900%" y="197" width="0.0162%" height="15" fill="rgb(221,92,48)" fg:x="224307" fg:w="72"/><text x="50.6400%" y="207.50"></text></g><g><title>lru_cache_add (819 samples, 0.18%)</title><rect x="50.2240%" y="229" width="0.1840%" height="15" fill="rgb(209,209,32)" fg:x="223568" fg:w="819"/><text x="50.4740%" y="239.50"></text></g><g><title>add_to_page_cache_lru (3,320 samples, 0.75%)</title><rect x="49.6675%" y="245" width="0.7458%" height="15" fill="rgb(221,70,22)" fg:x="221091" fg:w="3320"/><text x="49.9175%" y="255.50"></text></g><g><title>nvme_map_data (80 samples, 0.02%)</title><rect x="50.4208%" y="117" width="0.0180%" height="15" fill="rgb(248,145,5)" fg:x="224444" fg:w="80"/><text x="50.6708%" y="127.50"></text></g><g><title>blk_flush_plug_list (94 samples, 0.02%)</title><rect x="50.4192%" y="213" width="0.0211%" height="15" fill="rgb(226,116,26)" fg:x="224437" fg:w="94"/><text x="50.6692%" y="223.50"></text></g><g><title>blk_mq_flush_plug_list (94 samples, 0.02%)</title><rect x="50.4192%" y="197" width="0.0211%" height="15" fill="rgb(244,5,17)" fg:x="224437" fg:w="94"/><text x="50.6692%" y="207.50"></text></g><g><title>blk_mq_sched_insert_requests (93 samples, 0.02%)</title><rect x="50.4194%" y="181" width="0.0209%" height="15" fill="rgb(252,159,33)" fg:x="224438" fg:w="93"/><text x="50.6694%" y="191.50"></text></g><g><title>blk_mq_try_issue_list_directly (93 samples, 0.02%)</title><rect x="50.4194%" y="165" width="0.0209%" height="15" fill="rgb(206,71,0)" fg:x="224438" fg:w="93"/><text x="50.6694%" y="175.50"></text></g><g><title>__blk_mq_try_issue_directly (93 samples, 0.02%)</title><rect x="50.4194%" y="149" width="0.0209%" height="15" fill="rgb(233,118,54)" fg:x="224438" fg:w="93"/><text x="50.6694%" y="159.50"></text></g><g><title>nvme_queue_rq (93 samples, 0.02%)</title><rect x="50.4194%" y="133" width="0.0209%" height="15" fill="rgb(234,83,48)" fg:x="224438" fg:w="93"/><text x="50.6694%" y="143.50"></text></g><g><title>blk_finish_plug (95 samples, 0.02%)</title><rect x="50.4192%" y="229" width="0.0213%" height="15" fill="rgb(228,3,54)" fg:x="224437" fg:w="95"/><text x="50.6692%" y="239.50"></text></g><g><title>bio_add_page (101 samples, 0.02%)</title><rect x="50.5270%" y="197" width="0.0227%" height="15" fill="rgb(226,155,13)" fg:x="224917" fg:w="101"/><text x="50.7770%" y="207.50"></text></g><g><title>__bio_try_merge_page (59 samples, 0.01%)</title><rect x="50.5365%" y="181" width="0.0133%" height="15" fill="rgb(241,28,37)" fg:x="224959" fg:w="59"/><text x="50.7865%" y="191.50"></text></g><g><title>blk_bio_segment_split (45 samples, 0.01%)</title><rect x="50.5744%" y="117" width="0.0101%" height="15" fill="rgb(233,93,10)" fg:x="225128" fg:w="45"/><text x="50.8244%" y="127.50"></text></g><g><title>__blk_queue_split (48 samples, 0.01%)</title><rect x="50.5742%" y="133" width="0.0108%" height="15" fill="rgb(225,113,19)" fg:x="225127" fg:w="48"/><text x="50.8242%" y="143.50"></text></g><g><title>nvme_map_data (72 samples, 0.02%)</title><rect x="50.5906%" y="37" width="0.0162%" height="15" fill="rgb(241,2,18)" fg:x="225200" fg:w="72"/><text x="50.8406%" y="47.50"></text></g><g><title>blk_mq_sched_insert_requests (80 samples, 0.02%)</title><rect x="50.5895%" y="101" width="0.0180%" height="15" fill="rgb(228,207,21)" fg:x="225195" fg:w="80"/><text x="50.8395%" y="111.50"></text></g><g><title>blk_mq_try_issue_list_directly (79 samples, 0.02%)</title><rect x="50.5897%" y="85" width="0.0177%" height="15" fill="rgb(213,211,35)" fg:x="225196" fg:w="79"/><text x="50.8397%" y="95.50"></text></g><g><title>__blk_mq_try_issue_directly (79 samples, 0.02%)</title><rect x="50.5897%" y="69" width="0.0177%" height="15" fill="rgb(209,83,10)" fg:x="225196" fg:w="79"/><text x="50.8397%" y="79.50"></text></g><g><title>nvme_queue_rq (78 samples, 0.02%)</title><rect x="50.5899%" y="53" width="0.0175%" height="15" fill="rgb(209,164,1)" fg:x="225197" fg:w="78"/><text x="50.8399%" y="63.50"></text></g><g><title>blk_flush_plug_list (83 samples, 0.02%)</title><rect x="50.5890%" y="133" width="0.0186%" height="15" fill="rgb(213,184,43)" fg:x="225193" fg:w="83"/><text x="50.8390%" y="143.50"></text></g><g><title>blk_mq_flush_plug_list (83 samples, 0.02%)</title><rect x="50.5890%" y="117" width="0.0186%" height="15" fill="rgb(231,61,34)" fg:x="225193" fg:w="83"/><text x="50.8390%" y="127.50"></text></g><g><title>blk_mq_submit_bio (174 samples, 0.04%)</title><rect x="50.5688%" y="149" width="0.0391%" height="15" fill="rgb(235,75,3)" fg:x="225103" fg:w="174"/><text x="50.8188%" y="159.50"></text></g><g><title>__submit_bio (195 samples, 0.04%)</title><rect x="50.5686%" y="165" width="0.0438%" height="15" fill="rgb(220,106,47)" fg:x="225102" fg:w="195"/><text x="50.8186%" y="175.50"></text></g><g><title>submit_bio (202 samples, 0.05%)</title><rect x="50.5672%" y="197" width="0.0454%" height="15" fill="rgb(210,196,33)" fg:x="225096" fg:w="202"/><text x="50.8172%" y="207.50"></text></g><g><title>submit_bio_noacct (202 samples, 0.05%)</title><rect x="50.5672%" y="181" width="0.0454%" height="15" fill="rgb(229,154,42)" fg:x="225096" fg:w="202"/><text x="50.8172%" y="191.50"></text></g><g><title>xas_load (136 samples, 0.03%)</title><rect x="50.6180%" y="181" width="0.0306%" height="15" fill="rgb(228,114,26)" fg:x="225322" fg:w="136"/><text x="50.8680%" y="191.50"></text></g><g><title>xa_load (162 samples, 0.04%)</title><rect x="50.6126%" y="197" width="0.0364%" height="15" fill="rgb(208,144,1)" fg:x="225298" fg:w="162"/><text x="50.8626%" y="207.50"></text></g><g><title>ext4_mpage_readpages (929 samples, 0.21%)</title><rect x="50.4421%" y="213" width="0.2087%" height="15" fill="rgb(239,112,37)" fg:x="224539" fg:w="929"/><text x="50.6921%" y="223.50"></text></g><g><title>read_pages (1,039 samples, 0.23%)</title><rect x="50.4192%" y="245" width="0.2334%" height="15" fill="rgb(210,96,50)" fg:x="224437" fg:w="1039"/><text x="50.6692%" y="255.50"></text></g><g><title>ext4_readahead (944 samples, 0.21%)</title><rect x="50.4405%" y="229" width="0.2121%" height="15" fill="rgb(222,178,2)" fg:x="224532" fg:w="944"/><text x="50.6905%" y="239.50"></text></g><g><title>xas_load (186 samples, 0.04%)</title><rect x="50.6602%" y="229" width="0.0418%" height="15" fill="rgb(226,74,18)" fg:x="225510" fg:w="186"/><text x="50.9102%" y="239.50"></text></g><g><title>xa_load (224 samples, 0.05%)</title><rect x="50.6526%" y="245" width="0.0503%" height="15" fill="rgb(225,67,54)" fg:x="225476" fg:w="224"/><text x="50.9026%" y="255.50"></text></g><g><title>page_cache_ra_unbounded (7,023 samples, 1.58%)</title><rect x="49.1261%" y="261" width="1.5777%" height="15" fill="rgb(251,92,32)" fg:x="218681" fg:w="7023"/><text x="49.3761%" y="271.50"></text></g><g><title>page_cache_async_ra (7,042 samples, 1.58%)</title><rect x="49.1221%" y="293" width="1.5820%" height="15" fill="rgb(228,149,22)" fg:x="218663" fg:w="7042"/><text x="49.3721%" y="303.50"></text></g><g><title>ondemand_readahead (7,042 samples, 1.58%)</title><rect x="49.1221%" y="277" width="1.5820%" height="15" fill="rgb(243,54,13)" fg:x="218663" fg:w="7042"/><text x="49.3721%" y="287.50"></text></g><g><title>filemap_get_pages (7,373 samples, 1.66%)</title><rect x="49.0479%" y="309" width="1.6563%" height="15" fill="rgb(243,180,28)" fg:x="218333" fg:w="7373"/><text x="49.2979%" y="319.50"></text></g><g><title>mark_page_accessed (151 samples, 0.03%)</title><rect x="50.7047%" y="309" width="0.0339%" height="15" fill="rgb(208,167,24)" fg:x="225708" fg:w="151"/><text x="50.9547%" y="319.50"></text></g><g><title>filemap_read (22,266 samples, 5.00%)</title><rect x="45.7423%" y="325" width="5.0020%" height="15" fill="rgb(245,73,45)" fg:x="203618" fg:w="22266"/><text x="45.9923%" y="335.50">filema..</text></g><g><title>new_sync_read (22,285 samples, 5.01%)</title><rect x="45.7400%" y="373" width="5.0063%" height="15" fill="rgb(237,203,48)" fg:x="203608" fg:w="22285"/><text x="45.9900%" y="383.50">new_sy..</text></g><g><title>ext4_file_read_iter (22,285 samples, 5.01%)</title><rect x="45.7400%" y="357" width="5.0063%" height="15" fill="rgb(211,197,16)" fg:x="203608" fg:w="22285"/><text x="45.9900%" y="367.50">ext4_f..</text></g><g><title>generic_file_read_iter (22,285 samples, 5.01%)</title><rect x="45.7400%" y="341" width="5.0063%" height="15" fill="rgb(243,99,51)" fg:x="203608" fg:w="22285"/><text x="45.9900%" y="351.50">generi..</text></g><g><title>entry_SYSCALL_64_after_hwframe (22,289 samples, 5.01%)</title><rect x="45.7393%" y="453" width="5.0072%" height="15" fill="rgb(215,123,29)" fg:x="203605" fg:w="22289"/><text x="45.9893%" y="463.50">entry_..</text></g><g><title>do_syscall_64 (22,289 samples, 5.01%)</title><rect x="45.7393%" y="437" width="5.0072%" height="15" fill="rgb(239,186,37)" fg:x="203605" fg:w="22289"/><text x="45.9893%" y="447.50">do_sys..</text></g><g><title>__x64_sys_read (22,289 samples, 5.01%)</title><rect x="45.7393%" y="421" width="5.0072%" height="15" fill="rgb(252,136,39)" fg:x="203605" fg:w="22289"/><text x="45.9893%" y="431.50">__x64_..</text></g><g><title>ksys_read (22,288 samples, 5.01%)</title><rect x="45.7396%" y="405" width="5.0069%" height="15" fill="rgb(223,213,32)" fg:x="203606" fg:w="22288"/><text x="45.9896%" y="415.50">ksys_r..</text></g><g><title>vfs_read (22,286 samples, 5.01%)</title><rect x="45.7400%" y="389" width="5.0065%" height="15" fill="rgb(233,115,5)" fg:x="203608" fg:w="22286"/><text x="45.9900%" y="399.50">vfs_re..</text></g><g><title>__GI___libc_read (22,292 samples, 5.01%)</title><rect x="45.7393%" y="485" width="5.0078%" height="15" fill="rgb(207,226,44)" fg:x="203605" fg:w="22292"/><text x="45.9893%" y="495.50">__GI__..</text></g><g><title>__GI___libc_read (22,292 samples, 5.01%)</title><rect x="45.7393%" y="469" width="5.0078%" height="15" fill="rgb(208,126,0)" fg:x="203605" fg:w="22292"/><text x="45.9893%" y="479.50">__GI__..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (22,294 samples, 5.01%)</title><rect x="45.7391%" y="581" width="5.0083%" height="15" fill="rgb(244,66,21)" fg:x="203604" fg:w="22294"/><text x="45.9891%" y="591.50">&lt;std::..</text></g><g><title>std::io::default_read_exact (22,294 samples, 5.01%)</title><rect x="45.7391%" y="565" width="5.0083%" height="15" fill="rgb(222,97,12)" fg:x="203604" fg:w="22294"/><text x="45.9891%" y="575.50">std::i..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (22,294 samples, 5.01%)</title><rect x="45.7391%" y="549" width="5.0083%" height="15" fill="rgb(219,213,19)" fg:x="203604" fg:w="22294"/><text x="45.9891%" y="559.50">&lt;std::..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (22,293 samples, 5.01%)</title><rect x="45.7393%" y="533" width="5.0081%" height="15" fill="rgb(252,169,30)" fg:x="203605" fg:w="22293"/><text x="45.9893%" y="543.50">&lt;std::..</text></g><g><title>std::sys::unix::fs::File::read (22,293 samples, 5.01%)</title><rect x="45.7393%" y="517" width="5.0081%" height="15" fill="rgb(206,32,51)" fg:x="203605" fg:w="22293"/><text x="45.9893%" y="527.50">std::s..</text></g><g><title>std::sys::unix::fd::FileDesc::read (22,293 samples, 5.01%)</title><rect x="45.7393%" y="501" width="5.0081%" height="15" fill="rgb(250,172,42)" fg:x="203605" fg:w="22293"/><text x="45.9893%" y="511.50">std::s..</text></g><g><title>std::panic::catch_unwind (22,322 samples, 5.01%)</title><rect x="45.7391%" y="693" width="5.0146%" height="15" fill="rgb(209,34,43)" fg:x="203604" fg:w="22322"/><text x="45.9891%" y="703.50">std::p..</text></g><g><title>std::panicking::try (22,322 samples, 5.01%)</title><rect x="45.7391%" y="677" width="5.0146%" height="15" fill="rgb(223,11,35)" fg:x="203604" fg:w="22322"/><text x="45.9891%" y="687.50">std::p..</text></g><g><title>std::panicking::try::do_call (22,322 samples, 5.01%)</title><rect x="45.7391%" y="661" width="5.0146%" height="15" fill="rgb(251,219,26)" fg:x="203604" fg:w="22322"/><text x="45.9891%" y="671.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22,322 samples, 5.01%)</title><rect x="45.7391%" y="645" width="5.0146%" height="15" fill="rgb(231,119,3)" fg:x="203604" fg:w="22322"/><text x="45.9891%" y="655.50">&lt;core:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (22,322 samples, 5.01%)</title><rect x="45.7391%" y="629" width="5.0146%" height="15" fill="rgb(216,97,11)" fg:x="203604" fg:w="22322"/><text x="45.9891%" y="639.50">std::t..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22,322 samples, 5.01%)</title><rect x="45.7391%" y="613" width="5.0146%" height="15" fill="rgb(223,59,9)" fg:x="203604" fg:w="22322"/><text x="45.9891%" y="623.50">std::s..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (22,322 samples, 5.01%)</title><rect x="45.7391%" y="597" width="5.0146%" height="15" fill="rgb(233,93,31)" fg:x="203604" fg:w="22322"/><text x="45.9891%" y="607.50">hprof_..</text></g><g><title>__clone3 (22,323 samples, 5.01%)</title><rect x="45.7391%" y="805" width="5.0148%" height="15" fill="rgb(239,81,33)" fg:x="203604" fg:w="22323"/><text x="45.9891%" y="815.50">__clon..</text></g><g><title>start_thread (22,323 samples, 5.01%)</title><rect x="45.7391%" y="789" width="5.0148%" height="15" fill="rgb(213,120,34)" fg:x="203604" fg:w="22323"/><text x="45.9891%" y="799.50">start_..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (22,323 samples, 5.01%)</title><rect x="45.7391%" y="773" width="5.0148%" height="15" fill="rgb(243,49,53)" fg:x="203604" fg:w="22323"/><text x="45.9891%" y="783.50">std::s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22,323 samples, 5.01%)</title><rect x="45.7391%" y="757" width="5.0148%" height="15" fill="rgb(247,216,33)" fg:x="203604" fg:w="22323"/><text x="45.9891%" y="767.50">&lt;alloc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22,323 samples, 5.01%)</title><rect x="45.7391%" y="741" width="5.0148%" height="15" fill="rgb(226,26,14)" fg:x="203604" fg:w="22323"/><text x="45.9891%" y="751.50">&lt;alloc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (22,323 samples, 5.01%)</title><rect x="45.7391%" y="725" width="5.0148%" height="15" fill="rgb(215,49,53)" fg:x="203604" fg:w="22323"/><text x="45.9891%" y="735.50">core::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (22,323 samples, 5.01%)</title><rect x="45.7391%" y="709" width="5.0148%" height="15" fill="rgb(245,162,40)" fg:x="203604" fg:w="22323"/><text x="45.9891%" y="719.50">std::t..</text></g><g><title>hprof-prefetch (22,358 samples, 5.02%)</title><rect x="45.7387%" y="821" width="5.0227%" height="15" fill="rgb(229,68,17)" fg:x="203602" fg:w="22358"/><text x="45.9887%" y="831.50">hprof-..</text></g><g><title>__GI___lll_lock_wait_private (170 samples, 0.04%)</title><rect x="50.7625%" y="789" width="0.0382%" height="15" fill="rgb(213,182,10)" fg:x="225965" fg:w="170"/><text x="51.0125%" y="799.50"></text></g><g><title>futex_wait (170 samples, 0.04%)</title><rect x="50.7625%" y="773" width="0.0382%" height="15" fill="rgb(245,125,30)" fg:x="225965" fg:w="170"/><text x="51.0125%" y="783.50"></text></g><g><title>futex_fatal_error (170 samples, 0.04%)</title><rect x="50.7625%" y="757" width="0.0382%" height="15" fill="rgb(232,202,2)" fg:x="225965" fg:w="170"/><text x="51.0125%" y="767.50"></text></g><g><title>__GI___lll_lock_wake_private (51 samples, 0.01%)</title><rect x="50.8006%" y="789" width="0.0115%" height="15" fill="rgb(237,140,51)" fg:x="226135" fg:w="51"/><text x="51.0506%" y="799.50"></text></g><g><title>_int_free (1,290 samples, 0.29%)</title><rect x="50.8121%" y="789" width="0.2898%" height="15" fill="rgb(236,157,25)" fg:x="226186" fg:w="1290"/><text x="51.0621%" y="799.50"></text></g><g><title>[anon] (1,720 samples, 0.39%)</title><rect x="50.7613%" y="805" width="0.3864%" height="15" fill="rgb(219,209,0)" fg:x="225960" fg:w="1720"/><text x="51.0113%" y="815.50"></text></g><g><title>unlink_chunk (202 samples, 0.05%)</title><rect x="51.1023%" y="789" width="0.0454%" height="15" fill="rgb(240,116,54)" fg:x="227478" fg:w="202"/><text x="51.3523%" y="799.50"></text></g><g><title>__GI___libc_free (446 samples, 0.10%)</title><rect x="51.1477%" y="789" width="0.1002%" height="15" fill="rgb(216,10,36)" fg:x="227680" fg:w="446"/><text x="51.3977%" y="799.50"></text></g><g><title>__GI___lll_lock_wake_private (1,044 samples, 0.23%)</title><rect x="51.2497%" y="789" width="0.2345%" height="15" fill="rgb(222,72,44)" fg:x="228134" fg:w="1044"/><text x="51.4997%" y="799.50"></text></g><g><title>_int_free (607 samples, 0.14%)</title><rect x="51.4842%" y="789" width="0.1364%" height="15" fill="rgb(232,159,9)" fg:x="229178" fg:w="607"/><text x="51.7342%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (763 samples, 0.17%)</title><rect x="51.6206%" y="789" width="0.1714%" height="15" fill="rgb(210,39,32)" fg:x="229785" fg:w="763"/><text x="51.8706%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;hprof_slurp::parser::gc_record::GcRecord&gt;&gt; (85 samples, 0.02%)</title><rect x="51.7729%" y="773" width="0.0191%" height="15" fill="rgb(216,194,45)" fg:x="230463" fg:w="85"/><text x="52.0229%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (85 samples, 0.02%)</title><rect x="51.7729%" y="757" width="0.0191%" height="15" fill="rgb(218,18,35)" fg:x="230463" fg:w="85"/><text x="52.0229%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (48 samples, 0.01%)</title><rect x="51.7943%" y="789" width="0.0108%" height="15" fill="rgb(207,83,51)" fg:x="230558" fg:w="48"/><text x="52.0443%" y="799.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (48 samples, 0.01%)</title><rect x="51.7943%" y="773" width="0.0108%" height="15" fill="rgb(225,63,43)" fg:x="230558" fg:w="48"/><text x="52.0443%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (48 samples, 0.01%)</title><rect x="51.7943%" y="757" width="0.0108%" height="15" fill="rgb(207,57,36)" fg:x="230558" fg:w="48"/><text x="52.0443%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (48 samples, 0.01%)</title><rect x="51.7943%" y="741" width="0.0108%" height="15" fill="rgb(216,99,33)" fg:x="230558" fg:w="48"/><text x="52.0443%" y="751.50"></text></g><g><title>[unknown] (2,987 samples, 0.67%)</title><rect x="51.1477%" y="805" width="0.6710%" height="15" fill="rgb(225,42,16)" fg:x="227680" fg:w="2987"/><text x="51.3977%" y="815.50"></text></g><g><title>unlink_chunk (61 samples, 0.01%)</title><rect x="51.8050%" y="789" width="0.0137%" height="15" fill="rgb(220,201,45)" fg:x="230606" fg:w="61"/><text x="52.0550%" y="799.50"></text></g><g><title>__entry_text_start (3,460 samples, 0.78%)</title><rect x="53.0568%" y="517" width="0.7773%" height="15" fill="rgb(225,33,4)" fg:x="236178" fg:w="3460"/><text x="53.3068%" y="527.50"></text></g><g><title>do_syscall_64 (113 samples, 0.03%)</title><rect x="53.8350%" y="517" width="0.0254%" height="15" fill="rgb(224,33,50)" fg:x="239642" fg:w="113"/><text x="54.0850%" y="527.50"></text></g><g><title>__x64_sys_futex (85 samples, 0.02%)</title><rect x="54.0158%" y="501" width="0.0191%" height="15" fill="rgb(246,198,51)" fg:x="240447" fg:w="85"/><text x="54.2658%" y="511.50"></text></g><g><title>_raw_spin_lock (3,158 samples, 0.71%)</title><rect x="54.3829%" y="453" width="0.7094%" height="15" fill="rgb(205,22,4)" fg:x="242081" fg:w="3158"/><text x="54.6329%" y="463.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (48 samples, 0.01%)</title><rect x="56.8304%" y="421" width="0.0108%" height="15" fill="rgb(206,3,8)" fg:x="252976" fg:w="48"/><text x="57.0804%" y="431.50"></text></g><g><title>_raw_spin_lock (3,041 samples, 0.68%)</title><rect x="56.8261%" y="437" width="0.6832%" height="15" fill="rgb(251,23,15)" fg:x="252957" fg:w="3041"/><text x="57.0761%" y="447.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,974 samples, 0.67%)</title><rect x="56.8412%" y="421" width="0.6681%" height="15" fill="rgb(252,88,28)" fg:x="253024" fg:w="2974"/><text x="57.0912%" y="431.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (2,973 samples, 0.67%)</title><rect x="56.8414%" y="405" width="0.6679%" height="15" fill="rgb(212,127,14)" fg:x="253025" fg:w="2973"/><text x="57.0914%" y="415.50"></text></g><g><title>get_futex_key (585 samples, 0.13%)</title><rect x="57.5106%" y="437" width="0.1314%" height="15" fill="rgb(247,145,37)" fg:x="256004" fg:w="585"/><text x="57.7606%" y="447.50"></text></g><g><title>hash_futex (66 samples, 0.01%)</title><rect x="57.6421%" y="437" width="0.0148%" height="15" fill="rgb(209,117,53)" fg:x="256589" fg:w="66"/><text x="57.8921%" y="447.50"></text></g><g><title>__unqueue_futex (156 samples, 0.04%)</title><rect x="57.7214%" y="421" width="0.0350%" height="15" fill="rgb(212,90,42)" fg:x="256942" fg:w="156"/><text x="57.9714%" y="431.50"></text></g><g><title>mark_wake_futex (449 samples, 0.10%)</title><rect x="57.6569%" y="437" width="0.1009%" height="15" fill="rgb(218,164,37)" fg:x="256655" fg:w="449"/><text x="57.9069%" y="447.50"></text></g><g><title>native_queued_spin_lock_slowpath (46 samples, 0.01%)</title><rect x="57.7577%" y="437" width="0.0103%" height="15" fill="rgb(246,65,34)" fg:x="257104" fg:w="46"/><text x="58.0077%" y="447.50"></text></g><g><title>wake_q_add_safe (76 samples, 0.02%)</title><rect x="57.7683%" y="437" width="0.0171%" height="15" fill="rgb(231,100,33)" fg:x="257151" fg:w="76"/><text x="58.0183%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (62 samples, 0.01%)</title><rect x="57.8681%" y="405" width="0.0139%" height="15" fill="rgb(228,126,14)" fg:x="257595" fg:w="62"/><text x="58.1181%" y="415.50"></text></g><g><title>native_send_call_func_single_ipi (442 samples, 0.10%)</title><rect x="58.0001%" y="357" width="0.0993%" height="15" fill="rgb(215,173,21)" fg:x="258183" fg:w="442"/><text x="58.2501%" y="367.50"></text></g><g><title>x2apic_send_IPI (423 samples, 0.10%)</title><rect x="58.0044%" y="341" width="0.0950%" height="15" fill="rgb(210,6,40)" fg:x="258202" fg:w="423"/><text x="58.2544%" y="351.50"></text></g><g><title>native_write_msr (281 samples, 0.06%)</title><rect x="58.0363%" y="325" width="0.0631%" height="15" fill="rgb(212,48,18)" fg:x="258344" fg:w="281"/><text x="58.2863%" y="335.50"></text></g><g><title>__smp_call_single_queue (604 samples, 0.14%)</title><rect x="57.9644%" y="389" width="0.1357%" height="15" fill="rgb(230,214,11)" fg:x="258024" fg:w="604"/><text x="58.2144%" y="399.50"></text></g><g><title>send_call_function_single_ipi (579 samples, 0.13%)</title><rect x="57.9700%" y="373" width="0.1301%" height="15" fill="rgb(254,105,39)" fg:x="258049" fg:w="579"/><text x="58.2200%" y="383.50"></text></g><g><title>llist_add_batch (355 samples, 0.08%)</title><rect x="58.1001%" y="389" width="0.0797%" height="15" fill="rgb(245,158,5)" fg:x="258628" fg:w="355"/><text x="58.3501%" y="399.50"></text></g><g><title>sched_clock_cpu (54 samples, 0.01%)</title><rect x="58.1805%" y="389" width="0.0121%" height="15" fill="rgb(249,208,11)" fg:x="258986" fg:w="54"/><text x="58.4305%" y="399.50"></text></g><g><title>sched_clock (45 samples, 0.01%)</title><rect x="58.1826%" y="373" width="0.0101%" height="15" fill="rgb(210,39,28)" fg:x="258995" fg:w="45"/><text x="58.4326%" y="383.50"></text></g><g><title>ttwu_queue_wakelist (1,335 samples, 0.30%)</title><rect x="57.8930%" y="405" width="0.2999%" height="15" fill="rgb(211,56,53)" fg:x="257706" fg:w="1335"/><text x="58.1430%" y="415.50"></text></g><g><title>try_to_wake_up (1,560 samples, 0.35%)</title><rect x="57.8436%" y="421" width="0.3504%" height="15" fill="rgb(226,201,30)" fg:x="257486" fg:w="1560"/><text x="58.0936%" y="431.50"></text></g><g><title>futex_wake (13,805 samples, 3.10%)</title><rect x="55.0930%" y="453" width="3.1013%" height="15" fill="rgb(239,101,34)" fg:x="245242" fg:w="13805"/><text x="55.3430%" y="463.50">fut..</text></g><g><title>wake_up_q (1,820 samples, 0.41%)</title><rect x="57.7854%" y="437" width="0.4089%" height="15" fill="rgb(226,209,5)" fg:x="257227" fg:w="1820"/><text x="58.0354%" y="447.50"></text></g><g><title>get_futex_key (63 samples, 0.01%)</title><rect x="58.1942%" y="453" width="0.0142%" height="15" fill="rgb(250,105,47)" fg:x="259047" fg:w="63"/><text x="58.4442%" y="463.50"></text></g><g><title>hash_futex (1,395 samples, 0.31%)</title><rect x="58.2084%" y="453" width="0.3134%" height="15" fill="rgb(230,72,3)" fg:x="259110" fg:w="1395"/><text x="58.4584%" y="463.50"></text></g><g><title>do_futex (18,777 samples, 4.22%)</title><rect x="54.3094%" y="469" width="4.2182%" height="15" fill="rgb(232,218,39)" fg:x="241754" fg:w="18777"/><text x="54.5594%" y="479.50">do_fu..</text></g><g><title>__x64_sys_futex (19,522 samples, 4.39%)</title><rect x="54.1593%" y="485" width="4.3856%" height="15" fill="rgb(248,166,6)" fg:x="241086" fg:w="19522"/><text x="54.4093%" y="495.50">__x64..</text></g><g><title>futex_wake (77 samples, 0.02%)</title><rect x="58.5276%" y="469" width="0.0173%" height="15" fill="rgb(247,89,20)" fg:x="260531" fg:w="77"/><text x="58.7776%" y="479.50"></text></g><g><title>do_futex (182 samples, 0.04%)</title><rect x="58.5449%" y="485" width="0.0409%" height="15" fill="rgb(248,130,54)" fg:x="260608" fg:w="182"/><text x="58.7949%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (103 samples, 0.02%)</title><rect x="58.5858%" y="485" width="0.0231%" height="15" fill="rgb(234,196,4)" fg:x="260790" fg:w="103"/><text x="58.8358%" y="495.50"></text></g><g><title>syscall_enter_from_user_mode (286 samples, 0.06%)</title><rect x="58.6089%" y="485" width="0.0642%" height="15" fill="rgb(250,143,31)" fg:x="260893" fg:w="286"/><text x="58.8589%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (1,666 samples, 0.37%)</title><rect x="58.7316%" y="469" width="0.3743%" height="15" fill="rgb(211,110,34)" fg:x="261439" fg:w="1666"/><text x="58.9816%" y="479.50"></text></g><g><title>fpregs_assert_state_consistent (145 samples, 0.03%)</title><rect x="59.0733%" y="453" width="0.0326%" height="15" fill="rgb(215,124,48)" fg:x="262960" fg:w="145"/><text x="59.3233%" y="463.50"></text></g><g><title>do_syscall_64 (22,700 samples, 5.10%)</title><rect x="54.0349%" y="501" width="5.0995%" height="15" fill="rgb(216,46,13)" fg:x="240532" fg:w="22700"/><text x="54.2849%" y="511.50">do_sys..</text></g><g><title>syscall_exit_to_user_mode (2,053 samples, 0.46%)</title><rect x="58.6732%" y="485" width="0.4612%" height="15" fill="rgb(205,184,25)" fg:x="261179" fg:w="2053"/><text x="58.9232%" y="495.50"></text></g><g><title>fpregs_assert_state_consistent (127 samples, 0.03%)</title><rect x="59.1059%" y="469" width="0.0285%" height="15" fill="rgb(228,1,10)" fg:x="263105" fg:w="127"/><text x="59.3559%" y="479.50"></text></g><g><title>syscall_enter_from_user_mode (52 samples, 0.01%)</title><rect x="59.1344%" y="501" width="0.0117%" height="15" fill="rgb(213,116,27)" fg:x="263232" fg:w="52"/><text x="59.3844%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23,594 samples, 5.30%)</title><rect x="53.8603%" y="517" width="5.3003%" height="15" fill="rgb(241,95,50)" fg:x="239755" fg:w="23594"/><text x="54.1103%" y="527.50">entry_..</text></g><g><title>syscall_exit_to_user_mode (65 samples, 0.01%)</title><rect x="59.1461%" y="501" width="0.0146%" height="15" fill="rgb(238,48,32)" fg:x="263284" fg:w="65"/><text x="59.3961%" y="511.50"></text></g><g><title>__GI___lll_lock_wake_private (30,210 samples, 6.79%)</title><rect x="52.5632%" y="533" width="6.7866%" height="15" fill="rgb(235,113,49)" fg:x="233981" fg:w="30210"/><text x="52.8132%" y="543.50">__GI___ll..</text></g><g><title>syscall_return_via_sysret (841 samples, 0.19%)</title><rect x="59.1609%" y="517" width="0.1889%" height="15" fill="rgb(205,127,43)" fg:x="263350" fg:w="841"/><text x="59.4109%" y="527.50"></text></g><g><title>__entry_text_start (2,760 samples, 0.62%)</title><rect x="72.8797%" y="485" width="0.6200%" height="15" fill="rgb(250,162,2)" fg:x="324418" fg:w="2760"/><text x="73.1297%" y="495.50"></text></g><g><title>do_syscall_64 (94 samples, 0.02%)</title><rect x="73.5010%" y="485" width="0.0211%" height="15" fill="rgb(220,13,41)" fg:x="327184" fg:w="94"/><text x="73.7510%" y="495.50"></text></g><g><title>__x64_sys_futex (75 samples, 0.02%)</title><rect x="73.7333%" y="469" width="0.0168%" height="15" fill="rgb(249,221,25)" fg:x="328218" fg:w="75"/><text x="73.9833%" y="479.50"></text></g><g><title>__get_user_nocheck_4 (5,885 samples, 1.32%)</title><rect x="74.6937%" y="405" width="1.3221%" height="15" fill="rgb(215,208,19)" fg:x="332493" fg:w="5885"/><text x="74.9437%" y="415.50"></text></g><g><title>_raw_spin_lock (1,477 samples, 0.33%)</title><rect x="76.0160%" y="405" width="0.3318%" height="15" fill="rgb(236,175,2)" fg:x="338379" fg:w="1477"/><text x="76.2660%" y="415.50"></text></g><g><title>_raw_spin_lock (217 samples, 0.05%)</title><rect x="77.0458%" y="357" width="0.0487%" height="15" fill="rgb(241,52,2)" fg:x="342963" fg:w="217"/><text x="77.2958%" y="367.50"></text></g><g><title>update_cfs_group (705 samples, 0.16%)</title><rect x="77.3771%" y="309" width="0.1584%" height="15" fill="rgb(248,140,14)" fg:x="344438" fg:w="705"/><text x="77.6271%" y="319.50"></text></g><g><title>reweight_entity (345 samples, 0.08%)</title><rect x="77.4580%" y="293" width="0.0775%" height="15" fill="rgb(253,22,42)" fg:x="344798" fg:w="345"/><text x="77.7080%" y="303.50"></text></g><g><title>__calc_delta (525 samples, 0.12%)</title><rect x="77.6271%" y="293" width="0.1179%" height="15" fill="rgb(234,61,47)" fg:x="345551" fg:w="525"/><text x="77.8771%" y="303.50"></text></g><g><title>__cgroup_account_cputime (183 samples, 0.04%)</title><rect x="77.7451%" y="293" width="0.0411%" height="15" fill="rgb(208,226,15)" fg:x="346076" fg:w="183"/><text x="77.9951%" y="303.50"></text></g><g><title>cgroup_rstat_updated (111 samples, 0.02%)</title><rect x="77.7613%" y="277" width="0.0249%" height="15" fill="rgb(217,221,4)" fg:x="346148" fg:w="111"/><text x="78.0113%" y="287.50"></text></g><g><title>cpuacct_charge (368 samples, 0.08%)</title><rect x="77.7887%" y="293" width="0.0827%" height="15" fill="rgb(212,174,34)" fg:x="346270" fg:w="368"/><text x="78.0387%" y="303.50"></text></g><g><title>update_curr (1,557 samples, 0.35%)</title><rect x="77.5355%" y="309" width="0.3498%" height="15" fill="rgb(253,83,4)" fg:x="345143" fg:w="1557"/><text x="77.7855%" y="319.50"></text></g><g><title>update_min_vruntime (52 samples, 0.01%)</title><rect x="77.8736%" y="293" width="0.0117%" height="15" fill="rgb(250,195,49)" fg:x="346648" fg:w="52"/><text x="78.1236%" y="303.50"></text></g><g><title>__update_load_avg_cfs_rq (329 samples, 0.07%)</title><rect x="77.9336%" y="293" width="0.0739%" height="15" fill="rgb(241,192,25)" fg:x="346915" fg:w="329"/><text x="78.1836%" y="303.50"></text></g><g><title>update_load_avg (905 samples, 0.20%)</title><rect x="77.8853%" y="309" width="0.2033%" height="15" fill="rgb(208,124,10)" fg:x="346700" fg:w="905"/><text x="78.1353%" y="319.50"></text></g><g><title>__update_load_avg_se (361 samples, 0.08%)</title><rect x="78.0075%" y="293" width="0.0811%" height="15" fill="rgb(222,33,0)" fg:x="347244" fg:w="361"/><text x="78.2575%" y="303.50"></text></g><g><title>dequeue_entity (4,030 samples, 0.91%)</title><rect x="77.2145%" y="325" width="0.9053%" height="15" fill="rgb(234,209,28)" fg:x="343714" fg:w="4030"/><text x="77.4645%" y="335.50"></text></g><g><title>update_min_vruntime (139 samples, 0.03%)</title><rect x="78.0886%" y="309" width="0.0312%" height="15" fill="rgb(224,11,23)" fg:x="347605" fg:w="139"/><text x="78.3386%" y="319.50"></text></g><g><title>update_cfs_group (51 samples, 0.01%)</title><rect x="78.1198%" y="325" width="0.0115%" height="15" fill="rgb(232,99,1)" fg:x="347744" fg:w="51"/><text x="78.3698%" y="335.50"></text></g><g><title>update_curr (45 samples, 0.01%)</title><rect x="78.1312%" y="325" width="0.0101%" height="15" fill="rgb(237,95,45)" fg:x="347795" fg:w="45"/><text x="78.3812%" y="335.50"></text></g><g><title>dequeue_task_fair (4,573 samples, 1.03%)</title><rect x="77.1208%" y="341" width="1.0273%" height="15" fill="rgb(208,109,11)" fg:x="343297" fg:w="4573"/><text x="77.3708%" y="351.50"></text></g><g><title>dequeue_task (4,700 samples, 1.06%)</title><rect x="77.0949%" y="357" width="1.0558%" height="15" fill="rgb(216,190,48)" fg:x="343182" fg:w="4700"/><text x="77.3449%" y="367.50"></text></g><g><title>dequeue_task_fair (84 samples, 0.02%)</title><rect x="78.1508%" y="357" width="0.0189%" height="15" fill="rgb(251,171,36)" fg:x="347882" fg:w="84"/><text x="78.4008%" y="367.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (120 samples, 0.03%)</title><rect x="78.2881%" y="293" width="0.0270%" height="15" fill="rgb(230,62,22)" fg:x="348493" fg:w="120"/><text x="78.5381%" y="303.50"></text></g><g><title>__perf_event_task_sched_in (1,368 samples, 0.31%)</title><rect x="78.2373%" y="341" width="0.3073%" height="15" fill="rgb(225,114,35)" fg:x="348267" fg:w="1368"/><text x="78.4873%" y="351.50"></text></g><g><title>x86_pmu_enable (1,212 samples, 0.27%)</title><rect x="78.2723%" y="325" width="0.2723%" height="15" fill="rgb(215,118,42)" fg:x="348423" fg:w="1212"/><text x="78.5223%" y="335.50"></text></g><g><title>intel_pmu_enable_all (1,148 samples, 0.26%)</title><rect x="78.2867%" y="309" width="0.2579%" height="15" fill="rgb(243,119,21)" fg:x="348487" fg:w="1148"/><text x="78.5367%" y="319.50"></text></g><g><title>native_write_msr (1,022 samples, 0.23%)</title><rect x="78.3150%" y="293" width="0.2296%" height="15" fill="rgb(252,177,53)" fg:x="348613" fg:w="1022"/><text x="78.5650%" y="303.50"></text></g><g><title>finish_task_switch.isra.0 (1,710 samples, 0.38%)</title><rect x="78.1697%" y="357" width="0.3841%" height="15" fill="rgb(237,209,29)" fg:x="347966" fg:w="1710"/><text x="78.4197%" y="367.50"></text></g><g><title>iterate_groups (106 samples, 0.02%)</title><rect x="78.5538%" y="357" width="0.0238%" height="15" fill="rgb(212,65,23)" fg:x="349676" fg:w="106"/><text x="78.8038%" y="367.50"></text></g><g><title>newidle_balance (322 samples, 0.07%)</title><rect x="78.6738%" y="325" width="0.0723%" height="15" fill="rgb(230,222,46)" fg:x="350210" fg:w="322"/><text x="78.9238%" y="335.50"></text></g><g><title>pick_next_task_fair (447 samples, 0.10%)</title><rect x="78.6482%" y="341" width="0.1004%" height="15" fill="rgb(215,135,32)" fg:x="350096" fg:w="447"/><text x="78.8982%" y="351.50"></text></g><g><title>__update_idle_core (150 samples, 0.03%)</title><rect x="78.7677%" y="309" width="0.0337%" height="15" fill="rgb(246,101,22)" fg:x="350628" fg:w="150"/><text x="79.0177%" y="319.50"></text></g><g><title>pick_next_task_idle (241 samples, 0.05%)</title><rect x="78.7486%" y="341" width="0.0541%" height="15" fill="rgb(206,107,13)" fg:x="350543" fg:w="241"/><text x="78.9986%" y="351.50"></text></g><g><title>set_next_task_idle (202 samples, 0.05%)</title><rect x="78.7573%" y="325" width="0.0454%" height="15" fill="rgb(250,100,44)" fg:x="350582" fg:w="202"/><text x="79.0073%" y="335.50"></text></g><g><title>put_prev_entity (81 samples, 0.02%)</title><rect x="78.8027%" y="341" width="0.0182%" height="15" fill="rgb(231,147,38)" fg:x="350784" fg:w="81"/><text x="79.0527%" y="351.50"></text></g><g><title>put_prev_task_fair (395 samples, 0.09%)</title><rect x="78.8209%" y="341" width="0.0887%" height="15" fill="rgb(229,8,40)" fg:x="350865" fg:w="395"/><text x="79.0709%" y="351.50"></text></g><g><title>put_prev_entity (325 samples, 0.07%)</title><rect x="78.8366%" y="325" width="0.0730%" height="15" fill="rgb(221,135,30)" fg:x="350935" fg:w="325"/><text x="79.0866%" y="335.50"></text></g><g><title>pick_next_task (1,501 samples, 0.34%)</title><rect x="78.5776%" y="357" width="0.3372%" height="15" fill="rgb(249,193,18)" fg:x="349782" fg:w="1501"/><text x="78.8276%" y="367.50"></text></g><g><title>_raw_spin_lock (216 samples, 0.05%)</title><rect x="79.0867%" y="325" width="0.0485%" height="15" fill="rgb(209,133,39)" fg:x="352048" fg:w="216"/><text x="79.3367%" y="335.50"></text></g><g><title>perf_event_context_sched_out (180 samples, 0.04%)</title><rect x="79.1352%" y="325" width="0.0404%" height="15" fill="rgb(232,100,14)" fg:x="352264" fg:w="180"/><text x="79.3852%" y="335.50"></text></g><g><title>__perf_event_task_sched_out (493 samples, 0.11%)</title><rect x="79.0748%" y="341" width="0.1108%" height="15" fill="rgb(224,185,1)" fg:x="351995" fg:w="493"/><text x="79.3248%" y="351.50"></text></g><g><title>prepare_task_switch (1,168 samples, 0.26%)</title><rect x="78.9261%" y="357" width="0.2624%" height="15" fill="rgb(223,139,8)" fg:x="351333" fg:w="1168"/><text x="79.1761%" y="367.50"></text></g><g><title>psi_group_change (48 samples, 0.01%)</title><rect x="79.1916%" y="357" width="0.0108%" height="15" fill="rgb(232,213,38)" fg:x="352515" fg:w="48"/><text x="79.4416%" y="367.50"></text></g><g><title>iterate_groups (240 samples, 0.05%)</title><rect x="79.3001%" y="341" width="0.0539%" height="15" fill="rgb(207,94,22)" fg:x="352998" fg:w="240"/><text x="79.5501%" y="351.50"></text></g><g><title>psi_flags_change (153 samples, 0.03%)</title><rect x="79.3540%" y="341" width="0.0344%" height="15" fill="rgb(219,183,54)" fg:x="353238" fg:w="153"/><text x="79.6040%" y="351.50"></text></g><g><title>psi_group_change (2,726 samples, 0.61%)</title><rect x="79.3884%" y="341" width="0.6124%" height="15" fill="rgb(216,185,54)" fg:x="353391" fg:w="2726"/><text x="79.6384%" y="351.50"></text></g><g><title>psi_task_switch (3,828 samples, 0.86%)</title><rect x="79.2024%" y="357" width="0.8600%" height="15" fill="rgb(254,217,39)" fg:x="352563" fg:w="3828"/><text x="79.4524%" y="367.50"></text></g><g><title>sched_clock_cpu (261 samples, 0.06%)</title><rect x="80.0037%" y="341" width="0.0586%" height="15" fill="rgb(240,178,23)" fg:x="356130" fg:w="261"/><text x="80.2537%" y="351.50"></text></g><g><title>sched_clock (229 samples, 0.05%)</title><rect x="80.0109%" y="325" width="0.0514%" height="15" fill="rgb(218,11,47)" fg:x="356162" fg:w="229"/><text x="80.2609%" y="335.50"></text></g><g><title>native_sched_clock (228 samples, 0.05%)</title><rect x="80.0111%" y="309" width="0.0512%" height="15" fill="rgb(218,51,51)" fg:x="356163" fg:w="228"/><text x="80.2611%" y="319.50"></text></g><g><title>put_prev_task_fair (220 samples, 0.05%)</title><rect x="80.0623%" y="357" width="0.0494%" height="15" fill="rgb(238,126,27)" fg:x="356391" fg:w="220"/><text x="80.3123%" y="367.50"></text></g><g><title>__schedule (15,715 samples, 3.53%)</title><rect x="76.7182%" y="373" width="3.5303%" height="15" fill="rgb(249,202,22)" fg:x="341505" fg:w="15715"/><text x="76.9682%" y="383.50">__s..</text></g><g><title>update_rq_clock (494 samples, 0.11%)</title><rect x="80.1376%" y="357" width="0.1110%" height="15" fill="rgb(254,195,49)" fg:x="356726" fg:w="494"/><text x="80.3876%" y="367.50"></text></g><g><title>sched_clock_cpu (364 samples, 0.08%)</title><rect x="80.1668%" y="341" width="0.0818%" height="15" fill="rgb(208,123,14)" fg:x="356856" fg:w="364"/><text x="80.4168%" y="351.50"></text></g><g><title>sched_clock (306 samples, 0.07%)</title><rect x="80.1798%" y="325" width="0.0687%" height="15" fill="rgb(224,200,8)" fg:x="356914" fg:w="306"/><text x="80.4298%" y="335.50"></text></g><g><title>native_sched_clock (306 samples, 0.07%)</title><rect x="80.1798%" y="309" width="0.0687%" height="15" fill="rgb(217,61,36)" fg:x="356914" fg:w="306"/><text x="80.4298%" y="319.50"></text></g><g><title>futex_wait_queue_me (17,443 samples, 3.92%)</title><rect x="76.3478%" y="405" width="3.9185%" height="15" fill="rgb(206,35,45)" fg:x="339856" fg:w="17443"/><text x="76.5978%" y="415.50">fute..</text></g><g><title>schedule (16,551 samples, 3.72%)</title><rect x="76.5482%" y="389" width="3.7181%" height="15" fill="rgb(217,65,33)" fg:x="340748" fg:w="16551"/><text x="76.7982%" y="399.50">sche..</text></g><g><title>get_futex_key (420 samples, 0.09%)</title><rect x="82.3056%" y="389" width="0.0944%" height="15" fill="rgb(222,158,48)" fg:x="366377" fg:w="420"/><text x="82.5556%" y="399.50"></text></g><g><title>futex_wait_setup (9,540 samples, 2.14%)</title><rect x="80.2663%" y="405" width="2.1431%" height="15" fill="rgb(254,2,54)" fg:x="357299" fg:w="9540"/><text x="80.5163%" y="415.50">f..</text></g><g><title>get_futex_key (95 samples, 0.02%)</title><rect x="82.4094%" y="405" width="0.0213%" height="15" fill="rgb(250,143,38)" fg:x="366839" fg:w="95"/><text x="82.6594%" y="415.50"></text></g><g><title>hash_futex (1,208 samples, 0.27%)</title><rect x="82.4308%" y="405" width="0.2714%" height="15" fill="rgb(248,25,0)" fg:x="366934" fg:w="1208"/><text x="82.6808%" y="415.50"></text></g><g><title>futex_wait (38,330 samples, 8.61%)</title><rect x="74.1026%" y="421" width="8.6107%" height="15" fill="rgb(206,152,27)" fg:x="329862" fg:w="38330"/><text x="74.3526%" y="431.50">futex_wait</text></g><g><title>do_futex (38,704 samples, 8.69%)</title><rect x="74.0436%" y="437" width="8.6948%" height="15" fill="rgb(240,77,30)" fg:x="329599" fg:w="38704"/><text x="74.2936%" y="447.50">do_futex</text></g><g><title>futex_wait_setup (90 samples, 0.02%)</title><rect x="82.7181%" y="421" width="0.0202%" height="15" fill="rgb(231,5,3)" fg:x="368213" fg:w="90"/><text x="82.9681%" y="431.50"></text></g><g><title>__x64_sys_futex (39,454 samples, 8.86%)</title><rect x="73.8922%" y="453" width="8.8632%" height="15" fill="rgb(207,226,32)" fg:x="328925" fg:w="39454"/><text x="74.1422%" y="463.50">__x64_sys_fut..</text></g><g><title>futex_wait (76 samples, 0.02%)</title><rect x="82.7383%" y="437" width="0.0171%" height="15" fill="rgb(222,207,47)" fg:x="368303" fg:w="76"/><text x="82.9883%" y="447.50"></text></g><g><title>do_futex (162 samples, 0.04%)</title><rect x="82.7554%" y="453" width="0.0364%" height="15" fill="rgb(229,115,45)" fg:x="368379" fg:w="162"/><text x="83.0054%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (90 samples, 0.02%)</title><rect x="82.7918%" y="453" width="0.0202%" height="15" fill="rgb(224,191,6)" fg:x="368541" fg:w="90"/><text x="83.0418%" y="463.50"></text></g><g><title>syscall_enter_from_user_mode (247 samples, 0.06%)</title><rect x="82.8120%" y="453" width="0.0555%" height="15" fill="rgb(230,227,24)" fg:x="368631" fg:w="247"/><text x="83.0620%" y="463.50"></text></g><g><title>__put_user_nocheck_8 (266 samples, 0.06%)</title><rect x="83.5026%" y="389" width="0.0598%" height="15" fill="rgb(228,80,19)" fg:x="371705" fg:w="266"/><text x="83.7526%" y="399.50"></text></g><g><title>__get_user_8 (267 samples, 0.06%)</title><rect x="83.6057%" y="373" width="0.0600%" height="15" fill="rgb(247,229,0)" fg:x="372164" fg:w="267"/><text x="83.8557%" y="383.50"></text></g><g><title>__rseq_handle_notify_resume (1,275 samples, 0.29%)</title><rect x="83.4037%" y="405" width="0.2864%" height="15" fill="rgb(237,194,15)" fg:x="371265" fg:w="1275"/><text x="83.6537%" y="415.50"></text></g><g><title>rseq_ip_fixup (557 samples, 0.13%)</title><rect x="83.5650%" y="389" width="0.1251%" height="15" fill="rgb(219,203,20)" fg:x="371983" fg:w="557"/><text x="83.8150%" y="399.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (108 samples, 0.02%)</title><rect x="83.6659%" y="373" width="0.0243%" height="15" fill="rgb(234,128,8)" fg:x="372432" fg:w="108"/><text x="83.9159%" y="383.50"></text></g><g><title>blkcg_maybe_throttle_current (63 samples, 0.01%)</title><rect x="83.6901%" y="405" width="0.0142%" height="15" fill="rgb(248,202,8)" fg:x="372540" fg:w="63"/><text x="83.9401%" y="415.50"></text></g><g><title>exit_to_user_mode_loop (2,211 samples, 0.50%)</title><rect x="83.2170%" y="421" width="0.4967%" height="15" fill="rgb(206,104,37)" fg:x="370434" fg:w="2211"/><text x="83.4670%" y="431.50"></text></g><g><title>fpregs_assert_state_consistent (101 samples, 0.02%)</title><rect x="83.7137%" y="421" width="0.0227%" height="15" fill="rgb(223,8,27)" fg:x="372645" fg:w="101"/><text x="83.9637%" y="431.50"></text></g><g><title>exit_to_user_mode_prepare (3,869 samples, 0.87%)</title><rect x="82.9198%" y="437" width="0.8692%" height="15" fill="rgb(216,217,28)" fg:x="369111" fg:w="3869"/><text x="83.1698%" y="447.50"></text></g><g><title>switch_fpu_return (222 samples, 0.05%)</title><rect x="83.7391%" y="421" width="0.0499%" height="15" fill="rgb(249,199,1)" fg:x="372758" fg:w="222"/><text x="83.9891%" y="431.50"></text></g><g><title>fpregs_assert_state_consistent (87 samples, 0.02%)</title><rect x="83.7890%" y="437" width="0.0195%" height="15" fill="rgb(240,85,17)" fg:x="372980" fg:w="87"/><text x="84.0390%" y="447.50"></text></g><g><title>do_syscall_64 (44,779 samples, 10.06%)</title><rect x="73.7502%" y="469" width="10.0595%" height="15" fill="rgb(206,108,45)" fg:x="328293" fg:w="44779"/><text x="74.0002%" y="479.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (4,194 samples, 0.94%)</title><rect x="82.8675%" y="453" width="0.9422%" height="15" fill="rgb(245,210,41)" fg:x="368878" fg:w="4194"/><text x="83.1175%" y="463.50"></text></g><g><title>syscall_enter_from_user_mode (46 samples, 0.01%)</title><rect x="83.8097%" y="469" width="0.0103%" height="15" fill="rgb(206,13,37)" fg:x="373072" fg:w="46"/><text x="84.0597%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45,919 samples, 10.32%)</title><rect x="73.5222%" y="485" width="10.3156%" height="15" fill="rgb(250,61,18)" fg:x="327278" fg:w="45919"/><text x="73.7722%" y="495.50">entry_SYSCALL_6..</text></g><g><title>syscall_exit_to_user_mode (79 samples, 0.02%)</title><rect x="83.8200%" y="469" width="0.0177%" height="15" fill="rgb(235,172,48)" fg:x="373118" fg:w="79"/><text x="84.0700%" y="479.50"></text></g><g><title>futex_wait (52,234 samples, 11.73%)</title><rect x="72.2767%" y="501" width="11.7342%" height="15" fill="rgb(249,201,17)" fg:x="321734" fg:w="52234"/><text x="72.5267%" y="511.50">futex_wait</text></g><g><title>syscall_return_via_sysret (770 samples, 0.17%)</title><rect x="83.8380%" y="485" width="0.1730%" height="15" fill="rgb(219,208,6)" fg:x="373198" fg:w="770"/><text x="84.0880%" y="495.50"></text></g><g><title>__GI___lll_lock_wait_private (60,936 samples, 13.69%)</title><rect x="70.3225%" y="517" width="13.6891%" height="15" fill="rgb(248,31,23)" fg:x="313035" fg:w="60936"/><text x="70.5725%" y="527.50">__GI___lll_lock_wait_..</text></g><g><title>asm_sysvec_apic_timer_interrupt (53 samples, 0.01%)</title><rect x="84.0123%" y="517" width="0.0119%" height="15" fill="rgb(245,15,42)" fg:x="373974" fg:w="53"/><text x="84.2623%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (52 samples, 0.01%)</title><rect x="84.0125%" y="501" width="0.0117%" height="15" fill="rgb(222,217,39)" fg:x="373975" fg:w="52"/><text x="84.2625%" y="511.50"></text></g><g><title>free_perturb (209 samples, 0.05%)</title><rect x="84.0255%" y="517" width="0.0470%" height="15" fill="rgb(210,219,27)" fg:x="374033" fg:w="209"/><text x="84.2755%" y="527.50"></text></g><g><title>malloc_consolidate (3,383 samples, 0.76%)</title><rect x="84.0819%" y="517" width="0.7600%" height="15" fill="rgb(252,166,36)" fg:x="374284" fg:w="3383"/><text x="84.3319%" y="527.50"></text></g><g><title>unlink_chunk (1,456 samples, 0.33%)</title><rect x="84.5148%" y="501" width="0.3271%" height="15" fill="rgb(245,132,34)" fg:x="376211" fg:w="1456"/><text x="84.7648%" y="511.50"></text></g><g><title>_int_free (117,036 samples, 26.29%)</title><rect x="59.3498%" y="533" width="26.2918%" height="15" fill="rgb(236,54,3)" fg:x="264191" fg:w="117036"/><text x="59.5998%" y="543.50">_int_free</text></g><g><title>unlink_chunk (3,560 samples, 0.80%)</title><rect x="84.8419%" y="517" width="0.7997%" height="15" fill="rgb(241,173,43)" fg:x="377667" fg:w="3560"/><text x="85.0919%" y="527.50"></text></g><g><title>arena_for_chunk (1,955 samples, 0.44%)</title><rect x="85.6417%" y="533" width="0.4392%" height="15" fill="rgb(215,190,9)" fg:x="381227" fg:w="1955"/><text x="85.8917%" y="543.50"></text></g><g><title>arena_for_chunk (1,723 samples, 0.39%)</title><rect x="85.6938%" y="517" width="0.3871%" height="15" fill="rgb(242,101,16)" fg:x="381459" fg:w="1723"/><text x="85.9438%" y="527.50"></text></g><g><title>heap_for_ptr (297 samples, 0.07%)</title><rect x="86.0141%" y="501" width="0.0667%" height="15" fill="rgb(223,190,21)" fg:x="382885" fg:w="297"/><text x="86.2641%" y="511.50"></text></g><g><title>__GI___libc_free (151,732 samples, 34.09%)</title><rect x="51.9949%" y="549" width="34.0862%" height="15" fill="rgb(215,228,25)" fg:x="231451" fg:w="151732"/><text x="52.2449%" y="559.50">__GI___libc_free</text></g><g><title>__rdl_dealloc (276 samples, 0.06%)</title><rect x="86.0811%" y="549" width="0.0620%" height="15" fill="rgb(225,36,22)" fg:x="383183" fg:w="276"/><text x="86.3311%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (276 samples, 0.06%)</title><rect x="86.0811%" y="533" width="0.0620%" height="15" fill="rgb(251,106,46)" fg:x="383183" fg:w="276"/><text x="86.3311%" y="543.50"></text></g><g><title>__rust_dealloc (255 samples, 0.06%)</title><rect x="86.1431%" y="549" width="0.0573%" height="15" fill="rgb(208,90,1)" fg:x="383459" fg:w="255"/><text x="86.3931%" y="559.50"></text></g><g><title>_raw_spin_lock (53 samples, 0.01%)</title><rect x="90.9213%" y="405" width="0.0119%" height="15" fill="rgb(243,10,4)" fg:x="404729" fg:w="53"/><text x="91.1713%" y="415.50"></text></g><g><title>_raw_spin_lock (65 samples, 0.01%)</title><rect x="90.9645%" y="389" width="0.0146%" height="15" fill="rgb(212,137,27)" fg:x="404921" fg:w="65"/><text x="91.2145%" y="399.50"></text></g><g><title>native_queued_spin_lock_slowpath (63 samples, 0.01%)</title><rect x="90.9649%" y="373" width="0.0142%" height="15" fill="rgb(231,220,49)" fg:x="404923" fg:w="63"/><text x="91.2149%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (63 samples, 0.01%)</title><rect x="90.9649%" y="357" width="0.0142%" height="15" fill="rgb(237,96,20)" fg:x="404923" fg:w="63"/><text x="91.2149%" y="367.50"></text></g><g><title>futex_wake (249 samples, 0.06%)</title><rect x="90.9332%" y="405" width="0.0559%" height="15" fill="rgb(239,229,30)" fg:x="404782" fg:w="249"/><text x="91.1832%" y="415.50"></text></g><g><title>do_futex (330 samples, 0.07%)</title><rect x="90.9200%" y="421" width="0.0741%" height="15" fill="rgb(219,65,33)" fg:x="404723" fg:w="330"/><text x="91.1700%" y="431.50"></text></g><g><title>__x64_sys_futex (340 samples, 0.08%)</title><rect x="90.9180%" y="437" width="0.0764%" height="15" fill="rgb(243,134,7)" fg:x="404714" fg:w="340"/><text x="91.1680%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (412 samples, 0.09%)</title><rect x="90.9128%" y="469" width="0.0926%" height="15" fill="rgb(216,177,54)" fg:x="404691" fg:w="412"/><text x="91.1628%" y="479.50"></text></g><g><title>do_syscall_64 (398 samples, 0.09%)</title><rect x="90.9159%" y="453" width="0.0894%" height="15" fill="rgb(211,160,20)" fg:x="404705" fg:w="398"/><text x="91.1659%" y="463.50"></text></g><g><title>__GI___lll_lock_wake_private (501 samples, 0.11%)</title><rect x="90.8966%" y="485" width="0.1125%" height="15" fill="rgb(239,85,39)" fg:x="404619" fg:w="501"/><text x="91.1466%" y="495.50"></text></g><g><title>__get_user_nocheck_4 (107 samples, 0.02%)</title><rect x="92.7441%" y="357" width="0.0240%" height="15" fill="rgb(232,125,22)" fg:x="412843" fg:w="107"/><text x="92.9941%" y="367.50"></text></g><g><title>dequeue_entity (76 samples, 0.02%)</title><rect x="92.7859%" y="277" width="0.0171%" height="15" fill="rgb(244,57,34)" fg:x="413029" fg:w="76"/><text x="93.0359%" y="287.50"></text></g><g><title>dequeue_task (82 samples, 0.02%)</title><rect x="92.7848%" y="309" width="0.0184%" height="15" fill="rgb(214,203,32)" fg:x="413024" fg:w="82"/><text x="93.0348%" y="319.50"></text></g><g><title>dequeue_task_fair (81 samples, 0.02%)</title><rect x="92.7850%" y="293" width="0.0182%" height="15" fill="rgb(207,58,43)" fg:x="413025" fg:w="81"/><text x="93.0350%" y="303.50"></text></g><g><title>psi_group_change (46 samples, 0.01%)</title><rect x="92.8261%" y="293" width="0.0103%" height="15" fill="rgb(215,193,15)" fg:x="413208" fg:w="46"/><text x="93.0761%" y="303.50"></text></g><g><title>psi_task_switch (68 samples, 0.02%)</title><rect x="92.8216%" y="309" width="0.0153%" height="15" fill="rgb(232,15,44)" fg:x="413188" fg:w="68"/><text x="93.0716%" y="319.50"></text></g><g><title>__schedule (273 samples, 0.06%)</title><rect x="92.7794%" y="325" width="0.0613%" height="15" fill="rgb(212,3,48)" fg:x="413000" fg:w="273"/><text x="93.0294%" y="335.50"></text></g><g><title>futex_wait_queue_me (302 samples, 0.07%)</title><rect x="92.7735%" y="357" width="0.0678%" height="15" fill="rgb(218,128,7)" fg:x="412974" fg:w="302"/><text x="93.0235%" y="367.50"></text></g><g><title>schedule (288 samples, 0.06%)</title><rect x="92.7767%" y="341" width="0.0647%" height="15" fill="rgb(226,216,39)" fg:x="412988" fg:w="288"/><text x="93.0267%" y="351.50"></text></g><g><title>futex_wait_setup (162 samples, 0.04%)</title><rect x="92.8414%" y="357" width="0.0364%" height="15" fill="rgb(243,47,51)" fg:x="413276" fg:w="162"/><text x="93.0914%" y="367.50"></text></g><g><title>futex_wait (658 samples, 0.15%)</title><rect x="92.7340%" y="373" width="0.1478%" height="15" fill="rgb(241,183,40)" fg:x="412798" fg:w="658"/><text x="92.9840%" y="383.50"></text></g><g><title>do_futex (663 samples, 0.15%)</title><rect x="92.7333%" y="389" width="0.1489%" height="15" fill="rgb(231,217,32)" fg:x="412795" fg:w="663"/><text x="92.9833%" y="399.50"></text></g><g><title>__x64_sys_futex (677 samples, 0.15%)</title><rect x="92.7306%" y="405" width="0.1521%" height="15" fill="rgb(229,61,38)" fg:x="412783" fg:w="677"/><text x="92.9806%" y="415.50"></text></g><g><title>do_syscall_64 (751 samples, 0.17%)</title><rect x="92.7279%" y="421" width="0.1687%" height="15" fill="rgb(225,210,5)" fg:x="412771" fg:w="751"/><text x="92.9779%" y="431.50"></text></g><g><title>syscall_exit_to_user_mode (57 samples, 0.01%)</title><rect x="92.8838%" y="405" width="0.0128%" height="15" fill="rgb(231,79,45)" fg:x="413465" fg:w="57"/><text x="93.1338%" y="415.50"></text></g><g><title>exit_to_user_mode_prepare (52 samples, 0.01%)</title><rect x="92.8850%" y="389" width="0.0117%" height="15" fill="rgb(224,100,7)" fg:x="413470" fg:w="52"/><text x="93.1350%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (773 samples, 0.17%)</title><rect x="92.7234%" y="437" width="0.1737%" height="15" fill="rgb(241,198,18)" fg:x="412751" fg:w="773"/><text x="92.9734%" y="447.50"></text></g><g><title>__GI___lll_lock_wait_private (1,008 samples, 0.23%)</title><rect x="92.6731%" y="469" width="0.2264%" height="15" fill="rgb(252,97,53)" fg:x="412527" fg:w="1008"/><text x="92.9231%" y="479.50"></text></g><g><title>futex_wait (860 samples, 0.19%)</title><rect x="92.7064%" y="453" width="0.1932%" height="15" fill="rgb(220,88,7)" fg:x="412675" fg:w="860"/><text x="92.9564%" y="463.50"></text></g><g><title>malloc_consolidate (96 samples, 0.02%)</title><rect x="92.9106%" y="469" width="0.0216%" height="15" fill="rgb(213,176,14)" fg:x="413584" fg:w="96"/><text x="93.1606%" y="479.50"></text></g><g><title>_int_free (8,631 samples, 1.94%)</title><rect x="91.0094%" y="485" width="1.9389%" height="15" fill="rgb(246,73,7)" fg:x="405121" fg:w="8631"/><text x="91.2594%" y="495.50">_..</text></g><g><title>unlink_chunk (71 samples, 0.02%)</title><rect x="92.9324%" y="469" width="0.0159%" height="15" fill="rgb(245,64,36)" fg:x="413681" fg:w="71"/><text x="93.1824%" y="479.50"></text></g><g><title>arena_for_chunk (591 samples, 0.13%)</title><rect x="92.9483%" y="485" width="0.1328%" height="15" fill="rgb(245,80,10)" fg:x="413752" fg:w="591"/><text x="93.1983%" y="495.50"></text></g><g><title>arena_for_chunk (538 samples, 0.12%)</title><rect x="92.9602%" y="469" width="0.1209%" height="15" fill="rgb(232,107,50)" fg:x="413805" fg:w="538"/><text x="93.2102%" y="479.50"></text></g><g><title>heap_for_ptr (75 samples, 0.02%)</title><rect x="93.0642%" y="453" width="0.0168%" height="15" fill="rgb(253,3,0)" fg:x="414268" fg:w="75"/><text x="93.3142%" y="463.50"></text></g><g><title>__GI___libc_free (17,887 samples, 4.02%)</title><rect x="89.0655%" y="501" width="4.0183%" height="15" fill="rgb(212,99,53)" fg:x="396468" fg:w="17887"/><text x="89.3155%" y="511.50">__GI..</text></g><g><title>__rdl_dealloc (75 samples, 0.02%)</title><rect x="93.0838%" y="501" width="0.0168%" height="15" fill="rgb(249,111,54)" fg:x="414355" fg:w="75"/><text x="93.3338%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (75 samples, 0.02%)</title><rect x="93.0838%" y="485" width="0.0168%" height="15" fill="rgb(249,55,30)" fg:x="414355" fg:w="75"/><text x="93.3338%" y="495.50"></text></g><g><title>__rust_dealloc (74 samples, 0.02%)</title><rect x="93.1006%" y="501" width="0.0166%" height="15" fill="rgb(237,47,42)" fg:x="414430" fg:w="74"/><text x="93.3506%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::ArrayValue&gt; (773 samples, 0.17%)</title><rect x="93.1202%" y="501" width="0.1737%" height="15" fill="rgb(211,20,18)" fg:x="414517" fg:w="773"/><text x="93.3702%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (184,618 samples, 41.47%)</title><rect x="51.8201%" y="581" width="41.4740%" height="15" fill="rgb(231,203,46)" fg:x="230673" fg:w="184618"/><text x="52.0701%" y="591.50">alloc::vec::Vec&lt;T,A&gt;::clear</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (184,618 samples, 41.47%)</title><rect x="51.8201%" y="565" width="41.4740%" height="15" fill="rgb(237,142,3)" fg:x="230673" fg:w="184618"/><text x="52.0701%" y="575.50">core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt;</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (31,576 samples, 7.09%)</title><rect x="86.2006%" y="549" width="7.0935%" height="15" fill="rgb(241,107,1)" fg:x="383715" fg:w="31576"/><text x="86.4506%" y="559.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;hprof_slurp::parser::gc_record::GcRecord&gt;&gt; (30,014 samples, 6.74%)</title><rect x="86.5515%" y="533" width="6.7426%" height="15" fill="rgb(229,83,13)" fg:x="385277" fg:w="30014"/><text x="86.8015%" y="543.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (29,600 samples, 6.65%)</title><rect x="86.6445%" y="517" width="6.6496%" height="15" fill="rgb(241,91,40)" fg:x="385691" fg:w="29600"/><text x="86.8945%" y="527.50">core::ptr..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 0.03%)</title><rect x="93.3037%" y="549" width="0.0344%" height="15" fill="rgb(225,3,45)" fg:x="415334" fg:w="153"/><text x="93.5537%" y="559.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (478 samples, 0.11%)</title><rect x="97.5343%" y="533" width="0.1074%" height="15" fill="rgb(244,223,14)" fg:x="434166" fg:w="478"/><text x="97.7843%" y="543.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (863 samples, 0.19%)</title><rect x="97.6417%" y="533" width="0.1939%" height="15" fill="rgb(224,124,37)" fg:x="434644" fg:w="863"/><text x="97.8917%" y="543.50"></text></g><g><title>ahash::operations::folded_multiply (708 samples, 0.16%)</title><rect x="97.8362%" y="453" width="0.1591%" height="15" fill="rgb(251,171,30)" fg:x="435510" fg:w="708"/><text x="98.0862%" y="463.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (457 samples, 0.10%)</title><rect x="97.8926%" y="437" width="0.1027%" height="15" fill="rgb(236,46,54)" fg:x="435761" fg:w="457"/><text x="98.1426%" y="447.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (856 samples, 0.19%)</title><rect x="97.8362%" y="469" width="0.1923%" height="15" fill="rgb(245,213,5)" fg:x="435510" fg:w="856"/><text x="98.0862%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (148 samples, 0.03%)</title><rect x="97.9952%" y="453" width="0.0332%" height="15" fill="rgb(230,144,27)" fg:x="436218" fg:w="148"/><text x="98.2452%" y="463.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::hash::Hash&gt;::hash (123 samples, 0.03%)</title><rect x="98.0285%" y="453" width="0.0276%" height="15" fill="rgb(220,86,6)" fg:x="436366" fg:w="123"/><text x="98.2785%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (123 samples, 0.03%)</title><rect x="98.0285%" y="437" width="0.0276%" height="15" fill="rgb(240,20,13)" fg:x="436366" fg:w="123"/><text x="98.2785%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (123 samples, 0.03%)</title><rect x="98.0285%" y="421" width="0.0276%" height="15" fill="rgb(217,89,34)" fg:x="436366" fg:w="123"/><text x="98.2785%" y="431.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (123 samples, 0.03%)</title><rect x="98.0285%" y="405" width="0.0276%" height="15" fill="rgb(229,13,5)" fg:x="436366" fg:w="123"/><text x="98.2785%" y="415.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (123 samples, 0.03%)</title><rect x="98.0285%" y="389" width="0.0276%" height="15" fill="rgb(244,67,35)" fg:x="436366" fg:w="123"/><text x="98.2785%" y="399.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (123 samples, 0.03%)</title><rect x="98.0285%" y="373" width="0.0276%" height="15" fill="rgb(221,40,2)" fg:x="436366" fg:w="123"/><text x="98.2785%" y="383.50"></text></g><g><title>ahash::operations::folded_multiply (85 samples, 0.02%)</title><rect x="98.0370%" y="357" width="0.0191%" height="15" fill="rgb(237,157,21)" fg:x="436404" fg:w="85"/><text x="98.2870%" y="367.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (80 samples, 0.02%)</title><rect x="98.0382%" y="341" width="0.0180%" height="15" fill="rgb(222,94,11)" fg:x="436409" fg:w="80"/><text x="98.2882%" y="351.50"></text></g><g><title>hashbrown::map::make_insert_hash (1,457 samples, 0.33%)</title><rect x="97.8362%" y="501" width="0.3273%" height="15" fill="rgb(249,113,6)" fg:x="435510" fg:w="1457"/><text x="98.0862%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,457 samples, 0.33%)</title><rect x="97.8362%" y="485" width="0.3273%" height="15" fill="rgb(238,137,36)" fg:x="435510" fg:w="1457"/><text x="98.0862%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (601 samples, 0.14%)</title><rect x="98.0285%" y="469" width="0.1350%" height="15" fill="rgb(210,102,26)" fg:x="436366" fg:w="601"/><text x="98.2785%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (478 samples, 0.11%)</title><rect x="98.0561%" y="453" width="0.1074%" height="15" fill="rgb(218,30,30)" fg:x="436489" fg:w="478"/><text x="98.3061%" y="463.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (478 samples, 0.11%)</title><rect x="98.0561%" y="437" width="0.1074%" height="15" fill="rgb(214,67,26)" fg:x="436489" fg:w="478"/><text x="98.3061%" y="447.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (478 samples, 0.11%)</title><rect x="98.0561%" y="421" width="0.1074%" height="15" fill="rgb(251,9,53)" fg:x="436489" fg:w="478"/><text x="98.3061%" y="431.50"></text></g><g><title>ahash::operations::folded_multiply (392 samples, 0.09%)</title><rect x="98.0754%" y="405" width="0.0881%" height="15" fill="rgb(228,204,25)" fg:x="436575" fg:w="392"/><text x="98.3254%" y="415.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (332 samples, 0.07%)</title><rect x="98.0889%" y="389" width="0.0746%" height="15" fill="rgb(207,153,8)" fg:x="436635" fg:w="332"/><text x="98.3389%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (720 samples, 0.16%)</title><rect x="98.2574%" y="469" width="0.1617%" height="15" fill="rgb(242,9,16)" fg:x="437385" fg:w="720"/><text x="98.5074%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (602 samples, 0.14%)</title><rect x="98.2839%" y="453" width="0.1352%" height="15" fill="rgb(217,211,10)" fg:x="437503" fg:w="602"/><text x="98.5339%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (56 samples, 0.01%)</title><rect x="98.4212%" y="421" width="0.0126%" height="15" fill="rgb(219,228,52)" fg:x="438114" fg:w="56"/><text x="98.6712%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (56 samples, 0.01%)</title><rect x="98.4212%" y="405" width="0.0126%" height="15" fill="rgb(231,92,29)" fg:x="438114" fg:w="56"/><text x="98.6712%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (285 samples, 0.06%)</title><rect x="98.4212%" y="453" width="0.0640%" height="15" fill="rgb(232,8,23)" fg:x="438114" fg:w="285"/><text x="98.6712%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (285 samples, 0.06%)</title><rect x="98.4212%" y="437" width="0.0640%" height="15" fill="rgb(216,211,34)" fg:x="438114" fg:w="285"/><text x="98.6712%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (229 samples, 0.05%)</title><rect x="98.4338%" y="421" width="0.0514%" height="15" fill="rgb(236,151,0)" fg:x="438170" fg:w="229"/><text x="98.6838%" y="431.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (198 samples, 0.04%)</title><rect x="98.4852%" y="437" width="0.0445%" height="15" fill="rgb(209,168,3)" fg:x="438399" fg:w="198"/><text x="98.7352%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,536 samples, 0.57%)</title><rect x="98.4212%" y="469" width="0.5697%" height="15" fill="rgb(208,129,28)" fg:x="438114" fg:w="2536"/><text x="98.6712%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2,251 samples, 0.51%)</title><rect x="98.4852%" y="453" width="0.5057%" height="15" fill="rgb(229,78,22)" fg:x="438399" fg:w="2251"/><text x="98.7352%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (2,053 samples, 0.46%)</title><rect x="98.5297%" y="437" width="0.4612%" height="15" fill="rgb(228,187,13)" fg:x="438597" fg:w="2053"/><text x="98.7797%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (768 samples, 0.17%)</title><rect x="98.9909%" y="469" width="0.1725%" height="15" fill="rgb(240,119,24)" fg:x="440650" fg:w="768"/><text x="99.2409%" y="479.50"></text></g><g><title>hashbrown::raw::h2 (174 samples, 0.04%)</title><rect x="99.1634%" y="469" width="0.0391%" height="15" fill="rgb(209,194,42)" fg:x="441418" fg:w="174"/><text x="99.4134%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (782 samples, 0.18%)</title><rect x="99.2025%" y="469" width="0.1757%" height="15" fill="rgb(247,200,46)" fg:x="441592" fg:w="782"/><text x="99.4525%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (782 samples, 0.18%)</title><rect x="99.2025%" y="453" width="0.1757%" height="15" fill="rgb(218,76,16)" fg:x="441592" fg:w="782"/><text x="99.4525%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (782 samples, 0.18%)</title><rect x="99.2025%" y="437" width="0.1757%" height="15" fill="rgb(225,21,48)" fg:x="441592" fg:w="782"/><text x="99.4525%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (575 samples, 0.13%)</title><rect x="99.3782%" y="469" width="0.1292%" height="15" fill="rgb(239,223,50)" fg:x="442374" fg:w="575"/><text x="99.6282%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (575 samples, 0.13%)</title><rect x="99.3782%" y="453" width="0.1292%" height="15" fill="rgb(244,45,21)" fg:x="442374" fg:w="575"/><text x="99.6282%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7,442 samples, 1.67%)</title><rect x="97.8360%" y="533" width="1.6718%" height="15" fill="rgb(232,33,43)" fg:x="435509" fg:w="7442"/><text x="98.0860%" y="543.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (7,442 samples, 1.67%)</title><rect x="97.8360%" y="517" width="1.6718%" height="15" fill="rgb(209,8,3)" fg:x="435509" fg:w="7442"/><text x="98.0860%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,984 samples, 1.34%)</title><rect x="98.1635%" y="501" width="1.3443%" height="15" fill="rgb(214,25,53)" fg:x="436967" fg:w="5984"/><text x="98.4135%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5,984 samples, 1.34%)</title><rect x="98.1635%" y="485" width="1.3443%" height="15" fill="rgb(254,186,54)" fg:x="436967" fg:w="5984"/><text x="98.4135%" y="495.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (27,618 samples, 6.20%)</title><rect x="93.3037%" y="581" width="6.2043%" height="15" fill="rgb(208,174,49)" fg:x="415334" fg:w="27618"/><text x="93.5537%" y="591.50">hprof_sl..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (27,618 samples, 6.20%)</title><rect x="93.3037%" y="565" width="6.2043%" height="15" fill="rgb(233,191,51)" fg:x="415334" fg:w="27618"/><text x="93.5537%" y="575.50">&lt;core::s..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (27,465 samples, 6.17%)</title><rect x="93.3381%" y="549" width="6.1699%" height="15" fill="rgb(222,134,10)" fg:x="415487" fg:w="27465"/><text x="93.5881%" y="559.50">hprof_sl..</text></g><g><title>__clone3 (212,298 samples, 47.69%)</title><rect x="51.8187%" y="805" width="47.6922%" height="15" fill="rgb(230,226,20)" fg:x="230667" fg:w="212298"/><text x="52.0687%" y="815.50">__clone3</text></g><g><title>start_thread (212,298 samples, 47.69%)</title><rect x="51.8187%" y="789" width="47.6922%" height="15" fill="rgb(251,111,25)" fg:x="230667" fg:w="212298"/><text x="52.0687%" y="799.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (212,292 samples, 47.69%)</title><rect x="51.8201%" y="773" width="47.6908%" height="15" fill="rgb(224,40,46)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="783.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (212,292 samples, 47.69%)</title><rect x="51.8201%" y="757" width="47.6908%" height="15" fill="rgb(236,108,47)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="767.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (212,292 samples, 47.69%)</title><rect x="51.8201%" y="741" width="47.6908%" height="15" fill="rgb(234,93,0)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="751.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (212,292 samples, 47.69%)</title><rect x="51.8201%" y="725" width="47.6908%" height="15" fill="rgb(224,213,32)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="735.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (212,292 samples, 47.69%)</title><rect x="51.8201%" y="709" width="47.6908%" height="15" fill="rgb(251,11,48)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="719.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (212,292 samples, 47.69%)</title><rect x="51.8201%" y="693" width="47.6908%" height="15" fill="rgb(236,173,5)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (212,292 samples, 47.69%)</title><rect x="51.8201%" y="677" width="47.6908%" height="15" fill="rgb(230,95,12)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (212,292 samples, 47.69%)</title><rect x="51.8201%" y="661" width="47.6908%" height="15" fill="rgb(232,209,1)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="671.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (212,292 samples, 47.69%)</title><rect x="51.8201%" y="645" width="47.6908%" height="15" fill="rgb(232,6,1)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="655.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (212,292 samples, 47.69%)</title><rect x="51.8201%" y="629" width="47.6908%" height="15" fill="rgb(210,224,50)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="639.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (212,292 samples, 47.69%)</title><rect x="51.8201%" y="613" width="47.6908%" height="15" fill="rgb(228,127,35)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="623.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (212,292 samples, 47.69%)</title><rect x="51.8201%" y="597" width="47.6908%" height="15" fill="rgb(245,102,45)" fg:x="230673" fg:w="212292"/><text x="52.0701%" y="607.50">hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}</text></g><g><title>entry_SYSCALL_64_after_hwframe (665 samples, 0.15%)</title><rect x="99.5143%" y="805" width="0.1494%" height="15" fill="rgb(214,1,49)" fg:x="442980" fg:w="665"/><text x="99.7643%" y="815.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (1,081 samples, 0.24%)</title><rect x="99.6637%" y="805" width="0.2428%" height="15" fill="rgb(226,163,40)" fg:x="443645" fg:w="1081"/><text x="99.9137%" y="815.50"></text></g><g><title>hprof-recorder (219,113 samples, 49.22%)</title><rect x="50.7613%" y="821" width="49.2232%" height="15" fill="rgb(239,212,28)" fg:x="225960" fg:w="219113"/><text x="51.0113%" y="831.50">hprof-recorder</text></g><g><title>syscall_return_via_sysret (347 samples, 0.08%)</title><rect x="99.9065%" y="805" width="0.0780%" height="15" fill="rgb(220,20,13)" fg:x="444726" fg:w="347"/><text x="100.1565%" y="815.50"></text></g><g><title>hprof-slurp (64 samples, 0.01%)</title><rect x="99.9845%" y="821" width="0.0144%" height="15" fill="rgb(210,164,35)" fg:x="445073" fg:w="64"/><text x="100.2345%" y="831.50"></text></g><g><title>all (445,142 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(248,109,41)" fg:x="0" fg:w="445142"/><text x="0.2500%" y="847.50"></text></g></svg></svg>