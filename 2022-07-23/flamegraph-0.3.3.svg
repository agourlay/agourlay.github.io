<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="235384"><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (623 samples, 0.26%)</title><rect x="0.0000%" y="885" width="0.2647%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="623"/><text x="0.2500%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,234 samples, 0.52%)</title><rect x="0.2732%" y="885" width="0.5242%" height="15" fill="rgb(217,0,24)" fg:x="643" fg:w="1234"/><text x="0.5232%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (1,022 samples, 0.43%)</title><rect x="0.8097%" y="885" width="0.4342%" height="15" fill="rgb(221,193,54)" fg:x="1906" fg:w="1022"/><text x="1.0597%" y="895.50"></text></g><g><title>[anon] (2,939 samples, 1.25%)</title><rect x="0.0000%" y="901" width="1.2486%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2939"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,172 samples, 0.50%)</title><rect x="1.2486%" y="885" width="0.4979%" height="15" fill="rgb(208,68,35)" fg:x="2939" fg:w="1172"/><text x="1.4986%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 0.02%)</title><rect x="1.7877%" y="853" width="0.0170%" height="15" fill="rgb(232,128,0)" fg:x="4208" fg:w="40"/><text x="2.0377%" y="863.50"></text></g><g><title>core::ops::function::FnMut::call_mut (40 samples, 0.02%)</title><rect x="1.7877%" y="837" width="0.0170%" height="15" fill="rgb(207,160,47)" fg:x="4208" fg:w="40"/><text x="2.0377%" y="847.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (40 samples, 0.02%)</title><rect x="1.7877%" y="821" width="0.0170%" height="15" fill="rgb(228,23,34)" fg:x="4208" fg:w="40"/><text x="2.0377%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (140 samples, 0.06%)</title><rect x="1.7465%" y="885" width="0.0595%" height="15" fill="rgb(218,30,26)" fg:x="4111" fg:w="140"/><text x="1.9965%" y="895.50"></text></g><g><title>nom::multi::count::{{closure}} (43 samples, 0.02%)</title><rect x="1.7877%" y="869" width="0.0183%" height="15" fill="rgb(220,122,19)" fg:x="4208" fg:w="43"/><text x="2.0377%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (495 samples, 0.21%)</title><rect x="1.8107%" y="885" width="0.2103%" height="15" fill="rgb(250,228,42)" fg:x="4262" fg:w="495"/><text x="2.0607%" y="895.50"></text></g><g><title>_int_malloc (26 samples, 0.01%)</title><rect x="2.0244%" y="885" width="0.0110%" height="15" fill="rgb(240,193,28)" fg:x="4765" fg:w="26"/><text x="2.2744%" y="895.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (154 samples, 0.07%)</title><rect x="2.0422%" y="885" width="0.0654%" height="15" fill="rgb(216,20,37)" fg:x="4807" fg:w="154"/><text x="2.2922%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (301 samples, 0.13%)</title><rect x="2.7032%" y="869" width="0.1279%" height="15" fill="rgb(206,188,39)" fg:x="6363" fg:w="301"/><text x="2.9532%" y="879.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (490 samples, 0.21%)</title><rect x="2.8311%" y="821" width="0.2082%" height="15" fill="rgb(217,207,13)" fg:x="6664" fg:w="490"/><text x="3.0811%" y="831.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (490 samples, 0.21%)</title><rect x="2.8311%" y="805" width="0.2082%" height="15" fill="rgb(231,73,38)" fg:x="6664" fg:w="490"/><text x="3.0811%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (490 samples, 0.21%)</title><rect x="2.8311%" y="789" width="0.2082%" height="15" fill="rgb(225,20,46)" fg:x="6664" fg:w="490"/><text x="3.0811%" y="799.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (490 samples, 0.21%)</title><rect x="2.8311%" y="773" width="0.2082%" height="15" fill="rgb(210,31,41)" fg:x="6664" fg:w="490"/><text x="3.0811%" y="783.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (2,224 samples, 0.94%)</title><rect x="2.1076%" y="885" width="0.9448%" height="15" fill="rgb(221,200,47)" fg:x="4961" fg:w="2224"/><text x="2.3576%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (521 samples, 0.22%)</title><rect x="2.8311%" y="869" width="0.2213%" height="15" fill="rgb(226,26,5)" fg:x="6664" fg:w="521"/><text x="3.0811%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (521 samples, 0.22%)</title><rect x="2.8311%" y="853" width="0.2213%" height="15" fill="rgb(249,33,26)" fg:x="6664" fg:w="521"/><text x="3.0811%" y="863.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (521 samples, 0.22%)</title><rect x="2.8311%" y="837" width="0.2213%" height="15" fill="rgb(235,183,28)" fg:x="6664" fg:w="521"/><text x="3.0811%" y="847.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (27 samples, 0.01%)</title><rect x="3.0410%" y="821" width="0.0115%" height="15" fill="rgb(221,5,38)" fg:x="7158" fg:w="27"/><text x="3.2910%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (69 samples, 0.03%)</title><rect x="3.1795%" y="853" width="0.0293%" height="15" fill="rgb(247,18,42)" fg:x="7484" fg:w="69"/><text x="3.4295%" y="863.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (960 samples, 0.41%)</title><rect x="3.0525%" y="885" width="0.4078%" height="15" fill="rgb(241,131,45)" fg:x="7185" fg:w="960"/><text x="3.3025%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (960 samples, 0.41%)</title><rect x="3.0525%" y="869" width="0.4078%" height="15" fill="rgb(249,31,29)" fg:x="7185" fg:w="960"/><text x="3.3025%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (592 samples, 0.25%)</title><rect x="3.2088%" y="853" width="0.2515%" height="15" fill="rgb(225,111,53)" fg:x="7553" fg:w="592"/><text x="3.4588%" y="863.50"></text></g><g><title>core::ptr::write (592 samples, 0.25%)</title><rect x="3.2088%" y="837" width="0.2515%" height="15" fill="rgb(238,160,17)" fg:x="7553" fg:w="592"/><text x="3.4588%" y="847.50"></text></g><g><title>[unknown] (5,215 samples, 2.22%)</title><rect x="1.2486%" y="901" width="2.2155%" height="15" fill="rgb(214,148,48)" fg:x="2939" fg:w="5215"/><text x="1.4986%" y="911.50">[..</text></g><g><title>alloc_pages_vma (33 samples, 0.01%)</title><rect x="6.7936%" y="501" width="0.0140%" height="15" fill="rgb(232,36,49)" fg:x="15991" fg:w="33"/><text x="7.0436%" y="511.50"></text></g><g><title>__alloc_pages (32 samples, 0.01%)</title><rect x="6.7940%" y="485" width="0.0136%" height="15" fill="rgb(209,103,24)" fg:x="15992" fg:w="32"/><text x="7.0440%" y="495.50"></text></g><g><title>get_page_from_freelist (30 samples, 0.01%)</title><rect x="6.7949%" y="469" width="0.0127%" height="15" fill="rgb(229,88,8)" fg:x="15994" fg:w="30"/><text x="7.0449%" y="479.50"></text></g><g><title>__handle_mm_fault (72 samples, 0.03%)</title><rect x="6.7902%" y="549" width="0.0306%" height="15" fill="rgb(213,181,19)" fg:x="15983" fg:w="72"/><text x="7.0402%" y="559.50"></text></g><g><title>handle_pte_fault (68 samples, 0.03%)</title><rect x="6.7919%" y="533" width="0.0289%" height="15" fill="rgb(254,191,54)" fg:x="15987" fg:w="68"/><text x="7.0419%" y="543.50"></text></g><g><title>do_anonymous_page (67 samples, 0.03%)</title><rect x="6.7923%" y="517" width="0.0285%" height="15" fill="rgb(241,83,37)" fg:x="15988" fg:w="67"/><text x="7.0423%" y="527.50"></text></g><g><title>do_user_addr_fault (81 samples, 0.03%)</title><rect x="6.7872%" y="581" width="0.0344%" height="15" fill="rgb(233,36,39)" fg:x="15976" fg:w="81"/><text x="7.0372%" y="591.50"></text></g><g><title>handle_mm_fault (75 samples, 0.03%)</title><rect x="6.7898%" y="565" width="0.0319%" height="15" fill="rgb(226,3,54)" fg:x="15982" fg:w="75"/><text x="7.0398%" y="575.50"></text></g><g><title>asm_exc_page_fault (86 samples, 0.04%)</title><rect x="6.7859%" y="613" width="0.0365%" height="15" fill="rgb(245,192,40)" fg:x="15973" fg:w="86"/><text x="7.0359%" y="623.50"></text></g><g><title>exc_page_fault (85 samples, 0.04%)</title><rect x="6.7864%" y="597" width="0.0361%" height="15" fill="rgb(238,167,29)" fg:x="15974" fg:w="85"/><text x="7.0364%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (7,926 samples, 3.37%)</title><rect x="3.4641%" y="677" width="3.3673%" height="15" fill="rgb(232,182,51)" fg:x="8154" fg:w="7926"/><text x="3.7141%" y="687.50">all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,926 samples, 3.37%)</title><rect x="3.4641%" y="661" width="3.3673%" height="15" fill="rgb(231,60,39)" fg:x="8154" fg:w="7926"/><text x="3.7141%" y="671.50">all..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,923 samples, 3.37%)</title><rect x="3.4654%" y="645" width="3.3660%" height="15" fill="rgb(208,69,12)" fg:x="8157" fg:w="7923"/><text x="3.7154%" y="655.50">cor..</text></g><g><title>__memcpy_avx_unaligned_erms (7,923 samples, 3.37%)</title><rect x="3.4654%" y="629" width="3.3660%" height="15" fill="rgb(235,93,37)" fg:x="8157" fg:w="7923"/><text x="3.7154%" y="639.50">__m..</text></g><g><title>__mod_memcg_lruvec_state (33 samples, 0.01%)</title><rect x="6.9554%" y="405" width="0.0140%" height="15" fill="rgb(213,116,39)" fg:x="16372" fg:w="33"/><text x="7.2054%" y="415.50"></text></g><g><title>__mod_lruvec_state (57 samples, 0.02%)</title><rect x="6.9503%" y="421" width="0.0242%" height="15" fill="rgb(222,207,29)" fg:x="16360" fg:w="57"/><text x="7.2003%" y="431.50"></text></g><g><title>__free_one_page (257 samples, 0.11%)</title><rect x="7.0765%" y="373" width="0.1092%" height="15" fill="rgb(206,96,30)" fg:x="16657" fg:w="257"/><text x="7.3265%" y="383.50"></text></g><g><title>free_unref_page_list (468 samples, 0.20%)</title><rect x="6.9920%" y="421" width="0.1988%" height="15" fill="rgb(218,138,4)" fg:x="16458" fg:w="468"/><text x="7.2420%" y="431.50"></text></g><g><title>free_unref_page_commit (395 samples, 0.17%)</title><rect x="7.0230%" y="405" width="0.1678%" height="15" fill="rgb(250,191,14)" fg:x="16531" fg:w="395"/><text x="7.2730%" y="415.50"></text></g><g><title>free_pcppages_bulk (365 samples, 0.16%)</title><rect x="7.0357%" y="389" width="0.1551%" height="15" fill="rgb(239,60,40)" fg:x="16561" fg:w="365"/><text x="7.2857%" y="399.50"></text></g><g><title>mem_cgroup_uncharge_list (53 samples, 0.02%)</title><rect x="7.1912%" y="421" width="0.0225%" height="15" fill="rgb(206,27,48)" fg:x="16927" fg:w="53"/><text x="7.4412%" y="431.50"></text></g><g><title>uncharge_page (44 samples, 0.02%)</title><rect x="7.1951%" y="405" width="0.0187%" height="15" fill="rgb(225,35,8)" fg:x="16936" fg:w="44"/><text x="7.4451%" y="415.50"></text></g><g><title>tlb_finish_mmu (906 samples, 0.38%)</title><rect x="6.8348%" y="469" width="0.3849%" height="15" fill="rgb(250,213,24)" fg:x="16088" fg:w="906"/><text x="7.0848%" y="479.50"></text></g><g><title>free_pages_and_swap_cache (896 samples, 0.38%)</title><rect x="6.8390%" y="453" width="0.3807%" height="15" fill="rgb(247,123,22)" fg:x="16098" fg:w="896"/><text x="7.0890%" y="463.50"></text></g><g><title>release_pages (781 samples, 0.33%)</title><rect x="6.8879%" y="437" width="0.3318%" height="15" fill="rgb(231,138,38)" fg:x="16213" fg:w="781"/><text x="7.1379%" y="447.50"></text></g><g><title>__tlb_remove_page_size (27 samples, 0.01%)</title><rect x="7.6840%" y="389" width="0.0115%" height="15" fill="rgb(231,145,46)" fg:x="18087" fg:w="27"/><text x="7.9340%" y="399.50"></text></g><g><title>__mod_memcg_lruvec_state (106 samples, 0.05%)</title><rect x="7.8268%" y="341" width="0.0450%" height="15" fill="rgb(251,118,11)" fg:x="18423" fg:w="106"/><text x="8.0768%" y="351.50"></text></g><g><title>__mod_lruvec_state (196 samples, 0.08%)</title><rect x="7.8132%" y="357" width="0.0833%" height="15" fill="rgb(217,147,25)" fg:x="18391" fg:w="196"/><text x="8.0632%" y="367.50"></text></g><g><title>__mod_node_page_state (36 samples, 0.02%)</title><rect x="7.8812%" y="341" width="0.0153%" height="15" fill="rgb(247,81,37)" fg:x="18551" fg:w="36"/><text x="8.1312%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (272 samples, 0.12%)</title><rect x="7.8004%" y="373" width="0.1156%" height="15" fill="rgb(209,12,38)" fg:x="18361" fg:w="272"/><text x="8.0504%" y="383.50"></text></g><g><title>lock_page_memcg (37 samples, 0.02%)</title><rect x="7.9194%" y="373" width="0.0157%" height="15" fill="rgb(227,1,9)" fg:x="18641" fg:w="37"/><text x="8.1694%" y="383.50"></text></g><g><title>page_remove_rmap (582 samples, 0.25%)</title><rect x="7.7010%" y="389" width="0.2473%" height="15" fill="rgb(248,47,43)" fg:x="18127" fg:w="582"/><text x="7.9510%" y="399.50"></text></g><g><title>__mod_memcg_lruvec_state (66 samples, 0.03%)</title><rect x="8.1174%" y="325" width="0.0280%" height="15" fill="rgb(221,10,30)" fg:x="19107" fg:w="66"/><text x="8.3674%" y="335.50"></text></g><g><title>__mod_lruvec_state (111 samples, 0.05%)</title><rect x="8.1114%" y="341" width="0.0472%" height="15" fill="rgb(210,229,1)" fg:x="19093" fg:w="111"/><text x="8.3614%" y="351.50"></text></g><g><title>__free_one_page (359 samples, 0.15%)</title><rect x="8.3238%" y="293" width="0.1525%" height="15" fill="rgb(222,148,37)" fg:x="19593" fg:w="359"/><text x="8.5738%" y="303.50"></text></g><g><title>free_unref_page_list (716 samples, 0.30%)</title><rect x="8.1786%" y="341" width="0.3042%" height="15" fill="rgb(234,67,33)" fg:x="19251" fg:w="716"/><text x="8.4286%" y="351.50"></text></g><g><title>free_unref_page_commit (616 samples, 0.26%)</title><rect x="8.2210%" y="325" width="0.2617%" height="15" fill="rgb(247,98,35)" fg:x="19351" fg:w="616"/><text x="8.4710%" y="335.50"></text></g><g><title>free_pcppages_bulk (547 samples, 0.23%)</title><rect x="8.2503%" y="309" width="0.2324%" height="15" fill="rgb(247,138,52)" fg:x="19420" fg:w="547"/><text x="8.5003%" y="319.50"></text></g><g><title>mem_cgroup_uncharge_list (65 samples, 0.03%)</title><rect x="8.4836%" y="341" width="0.0276%" height="15" fill="rgb(213,79,30)" fg:x="19969" fg:w="65"/><text x="8.7336%" y="351.50"></text></g><g><title>uncharge_page (48 samples, 0.02%)</title><rect x="8.4908%" y="325" width="0.0204%" height="15" fill="rgb(246,177,23)" fg:x="19986" fg:w="48"/><text x="8.7408%" y="335.50"></text></g><g><title>tlb_flush_mmu (1,350 samples, 0.57%)</title><rect x="7.9483%" y="389" width="0.5735%" height="15" fill="rgb(230,62,27)" fg:x="18709" fg:w="1350"/><text x="8.1983%" y="399.50"></text></g><g><title>free_pages_and_swap_cache (1,345 samples, 0.57%)</title><rect x="7.9504%" y="373" width="0.5714%" height="15" fill="rgb(216,154,8)" fg:x="18714" fg:w="1345"/><text x="8.2004%" y="383.50"></text></g><g><title>release_pages (1,200 samples, 0.51%)</title><rect x="8.0120%" y="357" width="0.5098%" height="15" fill="rgb(244,35,45)" fg:x="18859" fg:w="1200"/><text x="8.2620%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,032 samples, 1.71%)</title><rect x="6.8314%" y="677" width="1.7129%" height="15" fill="rgb(251,115,12)" fg:x="16080" fg:w="4032"/><text x="7.0814%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,032 samples, 1.71%)</title><rect x="6.8314%" y="661" width="1.7129%" height="15" fill="rgb(240,54,50)" fg:x="16080" fg:w="4032"/><text x="7.0814%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,032 samples, 1.71%)</title><rect x="6.8314%" y="645" width="1.7129%" height="15" fill="rgb(233,84,52)" fg:x="16080" fg:w="4032"/><text x="7.0814%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,032 samples, 1.71%)</title><rect x="6.8314%" y="629" width="1.7129%" height="15" fill="rgb(207,117,47)" fg:x="16080" fg:w="4032"/><text x="7.0814%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (4,032 samples, 1.71%)</title><rect x="6.8314%" y="613" width="1.7129%" height="15" fill="rgb(249,43,39)" fg:x="16080" fg:w="4032"/><text x="7.0814%" y="623.50"></text></g><g><title>__free (4,032 samples, 1.71%)</title><rect x="6.8314%" y="597" width="1.7129%" height="15" fill="rgb(209,38,44)" fg:x="16080" fg:w="4032"/><text x="7.0814%" y="607.50"></text></g><g><title>__GI___munmap (4,031 samples, 1.71%)</title><rect x="6.8318%" y="581" width="1.7125%" height="15" fill="rgb(236,212,23)" fg:x="16081" fg:w="4031"/><text x="7.0818%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,031 samples, 1.71%)</title><rect x="6.8318%" y="565" width="1.7125%" height="15" fill="rgb(242,79,21)" fg:x="16081" fg:w="4031"/><text x="7.0818%" y="575.50"></text></g><g><title>do_syscall_64 (4,031 samples, 1.71%)</title><rect x="6.8318%" y="549" width="1.7125%" height="15" fill="rgb(211,96,35)" fg:x="16081" fg:w="4031"/><text x="7.0818%" y="559.50"></text></g><g><title>__x64_sys_munmap (4,031 samples, 1.71%)</title><rect x="6.8318%" y="533" width="1.7125%" height="15" fill="rgb(253,215,40)" fg:x="16081" fg:w="4031"/><text x="7.0818%" y="543.50"></text></g><g><title>__vm_munmap (4,031 samples, 1.71%)</title><rect x="6.8318%" y="517" width="1.7125%" height="15" fill="rgb(211,81,21)" fg:x="16081" fg:w="4031"/><text x="7.0818%" y="527.50"></text></g><g><title>__do_munmap (4,031 samples, 1.71%)</title><rect x="6.8318%" y="501" width="1.7125%" height="15" fill="rgb(208,190,38)" fg:x="16081" fg:w="4031"/><text x="7.0818%" y="511.50"></text></g><g><title>unmap_region (4,029 samples, 1.71%)</title><rect x="6.8327%" y="485" width="1.7117%" height="15" fill="rgb(235,213,38)" fg:x="16083" fg:w="4029"/><text x="7.0827%" y="495.50"></text></g><g><title>unmap_vmas (3,118 samples, 1.32%)</title><rect x="7.2197%" y="469" width="1.3246%" height="15" fill="rgb(237,122,38)" fg:x="16994" fg:w="3118"/><text x="7.4697%" y="479.50"></text></g><g><title>unmap_single_vma (3,118 samples, 1.32%)</title><rect x="7.2197%" y="453" width="1.3246%" height="15" fill="rgb(244,218,35)" fg:x="16994" fg:w="3118"/><text x="7.4697%" y="463.50"></text></g><g><title>unmap_page_range (3,118 samples, 1.32%)</title><rect x="7.2197%" y="437" width="1.3246%" height="15" fill="rgb(240,68,47)" fg:x="16994" fg:w="3118"/><text x="7.4697%" y="447.50"></text></g><g><title>zap_pmd_range.isra.0 (3,117 samples, 1.32%)</title><rect x="7.2201%" y="421" width="1.3242%" height="15" fill="rgb(210,16,53)" fg:x="16995" fg:w="3117"/><text x="7.4701%" y="431.50"></text></g><g><title>zap_pte_range (3,078 samples, 1.31%)</title><rect x="7.2367%" y="405" width="1.3077%" height="15" fill="rgb(235,124,12)" fg:x="17034" fg:w="3078"/><text x="7.4867%" y="415.50"></text></g><g><title>vm_normal_page (35 samples, 0.01%)</title><rect x="8.5295%" y="389" width="0.0149%" height="15" fill="rgb(224,169,11)" fg:x="20077" fg:w="35"/><text x="8.7795%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (33 samples, 0.01%)</title><rect x="8.5516%" y="661" width="0.0140%" height="15" fill="rgb(250,166,2)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (33 samples, 0.01%)</title><rect x="8.5516%" y="645" width="0.0140%" height="15" fill="rgb(242,216,29)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="8.5516%" y="629" width="0.0140%" height="15" fill="rgb(230,116,27)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.01%)</title><rect x="8.5516%" y="613" width="0.0140%" height="15" fill="rgb(228,99,48)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.01%)</title><rect x="8.5516%" y="597" width="0.0140%" height="15" fill="rgb(253,11,6)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="607.50"></text></g><g><title>__free (33 samples, 0.01%)</title><rect x="8.5516%" y="581" width="0.0140%" height="15" fill="rgb(247,143,39)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="591.50"></text></g><g><title>__GI___munmap (33 samples, 0.01%)</title><rect x="8.5516%" y="565" width="0.0140%" height="15" fill="rgb(236,97,10)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.01%)</title><rect x="8.5516%" y="549" width="0.0140%" height="15" fill="rgb(233,208,19)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="559.50"></text></g><g><title>do_syscall_64 (33 samples, 0.01%)</title><rect x="8.5516%" y="533" width="0.0140%" height="15" fill="rgb(216,164,2)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="543.50"></text></g><g><title>__x64_sys_munmap (33 samples, 0.01%)</title><rect x="8.5516%" y="517" width="0.0140%" height="15" fill="rgb(220,129,5)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="527.50"></text></g><g><title>__vm_munmap (33 samples, 0.01%)</title><rect x="8.5516%" y="501" width="0.0140%" height="15" fill="rgb(242,17,10)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="511.50"></text></g><g><title>__do_munmap (33 samples, 0.01%)</title><rect x="8.5516%" y="485" width="0.0140%" height="15" fill="rgb(242,107,0)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="495.50"></text></g><g><title>unmap_region (33 samples, 0.01%)</title><rect x="8.5516%" y="469" width="0.0140%" height="15" fill="rgb(251,28,31)" fg:x="20129" fg:w="33"/><text x="8.8016%" y="479.50"></text></g><g><title>unmap_vmas (32 samples, 0.01%)</title><rect x="8.5520%" y="453" width="0.0136%" height="15" fill="rgb(233,223,10)" fg:x="20130" fg:w="32"/><text x="8.8020%" y="463.50"></text></g><g><title>unmap_single_vma (32 samples, 0.01%)</title><rect x="8.5520%" y="437" width="0.0136%" height="15" fill="rgb(215,21,27)" fg:x="20130" fg:w="32"/><text x="8.8020%" y="447.50"></text></g><g><title>unmap_page_range (32 samples, 0.01%)</title><rect x="8.5520%" y="421" width="0.0136%" height="15" fill="rgb(232,23,21)" fg:x="20130" fg:w="32"/><text x="8.8020%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (32 samples, 0.01%)</title><rect x="8.5520%" y="405" width="0.0136%" height="15" fill="rgb(244,5,23)" fg:x="20130" fg:w="32"/><text x="8.8020%" y="415.50"></text></g><g><title>zap_pte_range (32 samples, 0.01%)</title><rect x="8.5520%" y="389" width="0.0136%" height="15" fill="rgb(226,81,46)" fg:x="20130" fg:w="32"/><text x="8.8020%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}&gt; (58 samples, 0.02%)</title><rect x="8.5460%" y="677" width="0.0246%" height="15" fill="rgb(247,70,30)" fg:x="20116" fg:w="58"/><text x="8.7960%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (24 samples, 0.01%)</title><rect x="10.5772%" y="613" width="0.0102%" height="15" fill="rgb(212,68,19)" fg:x="24897" fg:w="24"/><text x="10.8272%" y="623.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (24 samples, 0.01%)</title><rect x="10.5772%" y="597" width="0.0102%" height="15" fill="rgb(240,187,13)" fg:x="24897" fg:w="24"/><text x="10.8272%" y="607.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string (24 samples, 0.01%)</title><rect x="10.5772%" y="581" width="0.0102%" height="15" fill="rgb(223,113,26)" fg:x="24897" fg:w="24"/><text x="10.8272%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (24 samples, 0.01%)</title><rect x="10.5772%" y="565" width="0.0102%" height="15" fill="rgb(206,192,2)" fg:x="24897" fg:w="24"/><text x="10.8272%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13,713 samples, 5.83%)</title><rect x="10.9978%" y="597" width="5.8258%" height="15" fill="rgb(241,108,4)" fg:x="25887" fg:w="13713"/><text x="11.2478%" y="607.50">__memcp..</text></g><g><title>__memcpy_avx_unaligned_erms (13,511 samples, 5.74%)</title><rect x="21.1527%" y="581" width="5.7400%" height="15" fill="rgb(247,173,49)" fg:x="49790" fg:w="13511"/><text x="21.4027%" y="591.50">__memcp..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (38,394 samples, 16.31%)</title><rect x="10.5874%" y="613" width="16.3112%" height="15" fill="rgb(224,114,35)" fg:x="24921" fg:w="38394"/><text x="10.8374%" y="623.50">core::result::Result&lt;T,E&gt;..</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (23,715 samples, 10.08%)</title><rect x="16.8236%" y="597" width="10.0750%" height="15" fill="rgb(245,159,27)" fg:x="39600" fg:w="23715"/><text x="17.0736%" y="607.50">hprof_slurp::pa..</text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (573 samples, 0.24%)</title><rect x="32.2465%" y="469" width="0.2434%" height="15" fill="rgb(245,172,44)" fg:x="75903" fg:w="573"/><text x="32.4965%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (574 samples, 0.24%)</title><rect x="32.2465%" y="501" width="0.2439%" height="15" fill="rgb(236,23,11)" fg:x="75903" fg:w="574"/><text x="32.4965%" y="511.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (574 samples, 0.24%)</title><rect x="32.2465%" y="485" width="0.2439%" height="15" fill="rgb(205,117,38)" fg:x="75903" fg:w="574"/><text x="32.4965%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,751 samples, 0.74%)</title><rect x="31.7468%" y="517" width="0.7439%" height="15" fill="rgb(237,72,25)" fg:x="74727" fg:w="1751"/><text x="31.9968%" y="527.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (1,827 samples, 0.78%)</title><rect x="33.6314%" y="453" width="0.7762%" height="15" fill="rgb(244,70,9)" fg:x="79163" fg:w="1827"/><text x="33.8814%" y="463.50"></text></g><g><title>nom::number::streaming::be_u32 (1,827 samples, 0.78%)</title><rect x="33.6314%" y="437" width="0.7762%" height="15" fill="rgb(217,125,39)" fg:x="79163" fg:w="1827"/><text x="33.8814%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,710 samples, 2.00%)</title><rect x="33.6314%" y="485" width="2.0010%" height="15" fill="rgb(235,36,10)" fg:x="79163" fg:w="4710"/><text x="33.8814%" y="495.50">&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (4,710 samples, 2.00%)</title><rect x="33.6314%" y="469" width="2.0010%" height="15" fill="rgb(251,123,47)" fg:x="79163" fg:w="4710"/><text x="33.8814%" y="479.50">c..</text></g><g><title>hprof_slurp::parser::record_parser::parse_id (2,883 samples, 1.22%)</title><rect x="34.4076%" y="453" width="1.2248%" height="15" fill="rgb(221,13,13)" fg:x="80990" fg:w="2883"/><text x="34.6576%" y="463.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (2,883 samples, 1.22%)</title><rect x="34.4076%" y="437" width="1.2248%" height="15" fill="rgb(238,131,9)" fg:x="80990" fg:w="2883"/><text x="34.6576%" y="447.50"></text></g><g><title>nom::number::streaming::be_u64 (2,883 samples, 1.22%)</title><rect x="34.4076%" y="421" width="1.2248%" height="15" fill="rgb(211,50,8)" fg:x="80990" fg:w="2883"/><text x="34.6576%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9,152 samples, 3.89%)</title><rect x="31.7468%" y="533" width="3.8881%" height="15" fill="rgb(245,182,24)" fg:x="74727" fg:w="9152"/><text x="31.9968%" y="543.50">&lt;F a..</text></g><g><title>nom::sequence::tuple::{{closure}} (7,401 samples, 3.14%)</title><rect x="32.4907%" y="517" width="3.1442%" height="15" fill="rgb(242,14,37)" fg:x="76478" fg:w="7401"/><text x="32.7407%" y="527.50">nom..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (7,394 samples, 3.14%)</title><rect x="32.4937%" y="501" width="3.1413%" height="15" fill="rgb(246,228,12)" fg:x="76485" fg:w="7394"/><text x="32.7437%" y="511.50">&lt;(F..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (646 samples, 0.27%)</title><rect x="35.6350%" y="533" width="0.2744%" height="15" fill="rgb(213,55,15)" fg:x="83879" fg:w="646"/><text x="35.8850%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (19,407 samples, 8.24%)</title><rect x="27.6680%" y="565" width="8.2448%" height="15" fill="rgb(209,9,3)" fg:x="65126" fg:w="19407"/><text x="27.9180%" y="575.50">hprof_slurp..</text></g><g><title>nom::combinator::flat_map::{{closure}} (19,407 samples, 8.24%)</title><rect x="27.6680%" y="549" width="8.2448%" height="15" fill="rgb(230,59,30)" fg:x="65126" fg:w="19407"/><text x="27.9180%" y="559.50">nom::combin..</text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (63 samples, 0.03%)</title><rect x="36.3912%" y="389" width="0.0268%" height="15" fill="rgb(209,121,21)" fg:x="85659" fg:w="63"/><text x="36.6412%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (63 samples, 0.03%)</title><rect x="36.3912%" y="373" width="0.0268%" height="15" fill="rgb(220,109,13)" fg:x="85659" fg:w="63"/><text x="36.6412%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (63 samples, 0.03%)</title><rect x="36.3912%" y="357" width="0.0268%" height="15" fill="rgb(232,18,1)" fg:x="85659" fg:w="63"/><text x="36.6412%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (63 samples, 0.03%)</title><rect x="36.3912%" y="341" width="0.0268%" height="15" fill="rgb(215,41,42)" fg:x="85659" fg:w="63"/><text x="36.6412%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (63 samples, 0.03%)</title><rect x="36.3912%" y="325" width="0.0268%" height="15" fill="rgb(224,123,36)" fg:x="85659" fg:w="63"/><text x="36.6412%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,338 samples, 0.57%)</title><rect x="36.0101%" y="469" width="0.5684%" height="15" fill="rgb(240,125,3)" fg:x="84762" fg:w="1338"/><text x="36.2601%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,338 samples, 0.57%)</title><rect x="36.0101%" y="453" width="0.5684%" height="15" fill="rgb(205,98,50)" fg:x="84762" fg:w="1338"/><text x="36.2601%" y="463.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (1,338 samples, 0.57%)</title><rect x="36.0101%" y="437" width="0.5684%" height="15" fill="rgb(205,185,37)" fg:x="84762" fg:w="1338"/><text x="36.2601%" y="447.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (1,211 samples, 0.51%)</title><rect x="36.0640%" y="421" width="0.5145%" height="15" fill="rgb(238,207,15)" fg:x="84889" fg:w="1211"/><text x="36.3140%" y="431.50"></text></g><g><title>nom::number::streaming::be_u64 (1,112 samples, 0.47%)</title><rect x="36.1061%" y="405" width="0.4724%" height="15" fill="rgb(213,199,42)" fg:x="84988" fg:w="1112"/><text x="36.3561%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (378 samples, 0.16%)</title><rect x="36.4179%" y="389" width="0.1606%" height="15" fill="rgb(235,201,11)" fg:x="85722" fg:w="378"/><text x="36.6679%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (378 samples, 0.16%)</title><rect x="36.4179%" y="373" width="0.1606%" height="15" fill="rgb(207,46,11)" fg:x="85722" fg:w="378"/><text x="36.6679%" y="383.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (378 samples, 0.16%)</title><rect x="36.4179%" y="357" width="0.1606%" height="15" fill="rgb(241,35,35)" fg:x="85722" fg:w="378"/><text x="36.6679%" y="367.50"></text></g><g><title>clear_page_erms (72 samples, 0.03%)</title><rect x="36.7735%" y="277" width="0.0306%" height="15" fill="rgb(243,32,47)" fg:x="86559" fg:w="72"/><text x="37.0235%" y="287.50"></text></g><g><title>get_page_from_freelist (128 samples, 0.05%)</title><rect x="36.7659%" y="293" width="0.0544%" height="15" fill="rgb(247,202,23)" fg:x="86541" fg:w="128"/><text x="37.0159%" y="303.50"></text></g><g><title>rmqueue (36 samples, 0.02%)</title><rect x="36.8050%" y="277" width="0.0153%" height="15" fill="rgb(219,102,11)" fg:x="86633" fg:w="36"/><text x="37.0550%" y="287.50"></text></g><g><title>rmqueue_bulk.constprop.0 (29 samples, 0.01%)</title><rect x="36.8079%" y="261" width="0.0123%" height="15" fill="rgb(243,110,44)" fg:x="86640" fg:w="29"/><text x="37.0579%" y="271.50"></text></g><g><title>__alloc_pages (147 samples, 0.06%)</title><rect x="36.7599%" y="309" width="0.0625%" height="15" fill="rgb(222,74,54)" fg:x="86527" fg:w="147"/><text x="37.0099%" y="319.50"></text></g><g><title>alloc_pages_vma (162 samples, 0.07%)</title><rect x="36.7565%" y="325" width="0.0688%" height="15" fill="rgb(216,99,12)" fg:x="86519" fg:w="162"/><text x="37.0065%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (35 samples, 0.01%)</title><rect x="36.8330%" y="277" width="0.0149%" height="15" fill="rgb(226,22,26)" fg:x="86699" fg:w="35"/><text x="37.0830%" y="287.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (49 samples, 0.02%)</title><rect x="36.8309%" y="325" width="0.0208%" height="15" fill="rgb(217,163,10)" fg:x="86694" fg:w="49"/><text x="37.0809%" y="335.50"></text></g><g><title>lru_cache_add (49 samples, 0.02%)</title><rect x="36.8309%" y="309" width="0.0208%" height="15" fill="rgb(213,25,53)" fg:x="86694" fg:w="49"/><text x="37.0809%" y="319.50"></text></g><g><title>__pagevec_lru_add (46 samples, 0.02%)</title><rect x="36.8322%" y="293" width="0.0195%" height="15" fill="rgb(252,105,26)" fg:x="86697" fg:w="46"/><text x="37.0822%" y="303.50"></text></g><g><title>__mem_cgroup_charge (51 samples, 0.02%)</title><rect x="36.8525%" y="309" width="0.0217%" height="15" fill="rgb(220,39,43)" fg:x="86745" fg:w="51"/><text x="37.1025%" y="319.50"></text></g><g><title>try_charge (25 samples, 0.01%)</title><rect x="36.8636%" y="293" width="0.0106%" height="15" fill="rgb(229,68,48)" fg:x="86771" fg:w="25"/><text x="37.1136%" y="303.50"></text></g><g><title>mem_cgroup_charge (71 samples, 0.03%)</title><rect x="36.8517%" y="325" width="0.0302%" height="15" fill="rgb(252,8,32)" fg:x="86743" fg:w="71"/><text x="37.1017%" y="335.50"></text></g><g><title>do_anonymous_page (328 samples, 0.14%)</title><rect x="36.7531%" y="341" width="0.1393%" height="15" fill="rgb(223,20,43)" fg:x="86511" fg:w="328"/><text x="37.0031%" y="351.50"></text></g><g><title>handle_pte_fault (340 samples, 0.14%)</title><rect x="36.7497%" y="357" width="0.1444%" height="15" fill="rgb(229,81,49)" fg:x="86503" fg:w="340"/><text x="36.9997%" y="367.50"></text></g><g><title>__handle_mm_fault (361 samples, 0.15%)</title><rect x="36.7425%" y="373" width="0.1534%" height="15" fill="rgb(236,28,36)" fg:x="86486" fg:w="361"/><text x="36.9925%" y="383.50"></text></g><g><title>handle_mm_fault (373 samples, 0.16%)</title><rect x="36.7387%" y="389" width="0.1585%" height="15" fill="rgb(249,185,26)" fg:x="86477" fg:w="373"/><text x="36.9887%" y="399.50"></text></g><g><title>do_user_addr_fault (390 samples, 0.17%)</title><rect x="36.7344%" y="405" width="0.1657%" height="15" fill="rgb(249,174,33)" fg:x="86467" fg:w="390"/><text x="36.9844%" y="415.50"></text></g><g><title>exc_page_fault (402 samples, 0.17%)</title><rect x="36.7332%" y="421" width="0.1708%" height="15" fill="rgb(233,201,37)" fg:x="86464" fg:w="402"/><text x="36.9832%" y="431.50"></text></g><g><title>asm_exc_page_fault (411 samples, 0.17%)</title><rect x="36.7298%" y="437" width="0.1746%" height="15" fill="rgb(221,78,26)" fg:x="86456" fg:w="411"/><text x="36.9798%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (821 samples, 0.35%)</title><rect x="36.5785%" y="469" width="0.3488%" height="15" fill="rgb(250,127,30)" fg:x="86100" fg:w="821"/><text x="36.8285%" y="479.50"></text></g><g><title>core::ptr::write (603 samples, 0.26%)</title><rect x="36.6711%" y="453" width="0.2562%" height="15" fill="rgb(230,49,44)" fg:x="86318" fg:w="603"/><text x="36.9211%" y="463.50"></text></g><g><title>sync_regs (45 samples, 0.02%)</title><rect x="36.9082%" y="437" width="0.0191%" height="15" fill="rgb(229,67,23)" fg:x="86876" fg:w="45"/><text x="37.1582%" y="447.50"></text></g><g><title>malloc_consolidate (335 samples, 0.14%)</title><rect x="37.3615%" y="325" width="0.1423%" height="15" fill="rgb(249,83,47)" fg:x="87943" fg:w="335"/><text x="37.6115%" y="335.50"></text></g><g><title>unlink_chunk.constprop.0 (66 samples, 0.03%)</title><rect x="37.4758%" y="309" width="0.0280%" height="15" fill="rgb(215,43,3)" fg:x="88212" fg:w="66"/><text x="37.7258%" y="319.50"></text></g><g><title>__GI___libc_malloc (1,403 samples, 0.60%)</title><rect x="36.9324%" y="357" width="0.5960%" height="15" fill="rgb(238,154,13)" fg:x="86933" fg:w="1403"/><text x="37.1824%" y="367.50"></text></g><g><title>_int_malloc (1,068 samples, 0.45%)</title><rect x="37.0747%" y="341" width="0.4537%" height="15" fill="rgb(219,56,2)" fg:x="87268" fg:w="1068"/><text x="37.3247%" y="351.50"></text></g><g><title>unlink_chunk.constprop.0 (56 samples, 0.02%)</title><rect x="37.5047%" y="325" width="0.0238%" height="15" fill="rgb(233,0,4)" fg:x="88280" fg:w="56"/><text x="37.7547%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,419 samples, 0.60%)</title><rect x="36.9299%" y="405" width="0.6028%" height="15" fill="rgb(235,30,7)" fg:x="86927" fg:w="1419"/><text x="37.1799%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,419 samples, 0.60%)</title><rect x="36.9299%" y="389" width="0.6028%" height="15" fill="rgb(250,79,13)" fg:x="86927" fg:w="1419"/><text x="37.1799%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1,419 samples, 0.60%)</title><rect x="36.9299%" y="373" width="0.6028%" height="15" fill="rgb(211,146,34)" fg:x="86927" fg:w="1419"/><text x="37.1799%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,428 samples, 0.61%)</title><rect x="36.9273%" y="469" width="0.6067%" height="15" fill="rgb(228,22,38)" fg:x="86921" fg:w="1428"/><text x="37.1773%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,428 samples, 0.61%)</title><rect x="36.9273%" y="453" width="0.6067%" height="15" fill="rgb(235,168,5)" fg:x="86921" fg:w="1428"/><text x="37.1773%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,425 samples, 0.61%)</title><rect x="36.9286%" y="437" width="0.6054%" height="15" fill="rgb(221,155,16)" fg:x="86924" fg:w="1425"/><text x="37.1786%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,425 samples, 0.61%)</title><rect x="36.9286%" y="421" width="0.6054%" height="15" fill="rgb(215,215,53)" fg:x="86924" fg:w="1425"/><text x="37.1786%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,893 samples, 1.65%)</title><rect x="35.9171%" y="501" width="1.6539%" height="15" fill="rgb(223,4,10)" fg:x="84543" fg:w="3893"/><text x="36.1671%" y="511.50"></text></g><g><title>nom::multi::count::{{closure}} (3,891 samples, 1.65%)</title><rect x="35.9179%" y="485" width="1.6530%" height="15" fill="rgb(234,103,6)" fg:x="84545" fg:w="3891"/><text x="36.1679%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (87 samples, 0.04%)</title><rect x="37.5340%" y="469" width="0.0370%" height="15" fill="rgb(227,97,0)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (87 samples, 0.04%)</title><rect x="37.5340%" y="453" width="0.0370%" height="15" fill="rgb(234,150,53)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.04%)</title><rect x="37.5340%" y="437" width="0.0370%" height="15" fill="rgb(228,201,54)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (87 samples, 0.04%)</title><rect x="37.5340%" y="421" width="0.0370%" height="15" fill="rgb(222,22,37)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (87 samples, 0.04%)</title><rect x="37.5340%" y="405" width="0.0370%" height="15" fill="rgb(237,53,32)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="415.50"></text></g><g><title>__free (87 samples, 0.04%)</title><rect x="37.5340%" y="389" width="0.0370%" height="15" fill="rgb(233,25,53)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="399.50"></text></g><g><title>__GI___munmap (87 samples, 0.04%)</title><rect x="37.5340%" y="373" width="0.0370%" height="15" fill="rgb(210,40,34)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (87 samples, 0.04%)</title><rect x="37.5340%" y="357" width="0.0370%" height="15" fill="rgb(241,220,44)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="367.50"></text></g><g><title>do_syscall_64 (87 samples, 0.04%)</title><rect x="37.5340%" y="341" width="0.0370%" height="15" fill="rgb(235,28,35)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="351.50"></text></g><g><title>__x64_sys_munmap (87 samples, 0.04%)</title><rect x="37.5340%" y="325" width="0.0370%" height="15" fill="rgb(210,56,17)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="335.50"></text></g><g><title>__vm_munmap (87 samples, 0.04%)</title><rect x="37.5340%" y="309" width="0.0370%" height="15" fill="rgb(224,130,29)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="319.50"></text></g><g><title>__do_munmap (87 samples, 0.04%)</title><rect x="37.5340%" y="293" width="0.0370%" height="15" fill="rgb(235,212,8)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="303.50"></text></g><g><title>unmap_region (87 samples, 0.04%)</title><rect x="37.5340%" y="277" width="0.0370%" height="15" fill="rgb(223,33,50)" fg:x="88349" fg:w="87"/><text x="37.7840%" y="287.50"></text></g><g><title>unmap_vmas (84 samples, 0.04%)</title><rect x="37.5353%" y="261" width="0.0357%" height="15" fill="rgb(219,149,13)" fg:x="88352" fg:w="84"/><text x="37.7853%" y="271.50"></text></g><g><title>unmap_single_vma (84 samples, 0.04%)</title><rect x="37.5353%" y="245" width="0.0357%" height="15" fill="rgb(250,156,29)" fg:x="88352" fg:w="84"/><text x="37.7853%" y="255.50"></text></g><g><title>unmap_page_range (84 samples, 0.04%)</title><rect x="37.5353%" y="229" width="0.0357%" height="15" fill="rgb(216,193,19)" fg:x="88352" fg:w="84"/><text x="37.7853%" y="239.50"></text></g><g><title>zap_pmd_range.isra.0 (84 samples, 0.04%)</title><rect x="37.5353%" y="213" width="0.0357%" height="15" fill="rgb(216,135,14)" fg:x="88352" fg:w="84"/><text x="37.7853%" y="223.50"></text></g><g><title>zap_pte_range (83 samples, 0.04%)</title><rect x="37.5357%" y="197" width="0.0353%" height="15" fill="rgb(241,47,5)" fg:x="88353" fg:w="83"/><text x="37.7857%" y="207.50"></text></g><g><title>tlb_flush_mmu (45 samples, 0.02%)</title><rect x="37.5518%" y="181" width="0.0191%" height="15" fill="rgb(233,42,35)" fg:x="88391" fg:w="45"/><text x="37.8018%" y="191.50"></text></g><g><title>free_pages_and_swap_cache (45 samples, 0.02%)</title><rect x="37.5518%" y="165" width="0.0191%" height="15" fill="rgb(231,13,6)" fg:x="88391" fg:w="45"/><text x="37.8018%" y="175.50"></text></g><g><title>release_pages (38 samples, 0.02%)</title><rect x="37.5548%" y="149" width="0.0161%" height="15" fill="rgb(207,181,40)" fg:x="88398" fg:w="38"/><text x="37.8048%" y="159.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (89 samples, 0.04%)</title><rect x="37.5709%" y="501" width="0.0378%" height="15" fill="rgb(254,173,49)" fg:x="88436" fg:w="89"/><text x="37.8209%" y="511.50"></text></g><g><title>nom::combinator::map::{{closure}} (3,990 samples, 1.70%)</title><rect x="35.9149%" y="517" width="1.6951%" height="15" fill="rgb(221,1,38)" fg:x="84538" fg:w="3990"/><text x="36.1649%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,032 samples, 1.71%)</title><rect x="35.9128%" y="533" width="1.7129%" height="15" fill="rgb(206,124,46)" fg:x="84533" fg:w="4032"/><text x="36.1628%" y="543.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (37 samples, 0.02%)</title><rect x="37.6100%" y="517" width="0.0157%" height="15" fill="rgb(249,21,11)" fg:x="88528" fg:w="37"/><text x="37.8600%" y="527.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (37 samples, 0.02%)</title><rect x="37.6100%" y="501" width="0.0157%" height="15" fill="rgb(222,201,40)" fg:x="88528" fg:w="37"/><text x="37.8600%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27 samples, 0.01%)</title><rect x="37.6143%" y="485" width="0.0115%" height="15" fill="rgb(235,61,29)" fg:x="88538" fg:w="27"/><text x="37.8643%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (27 samples, 0.01%)</title><rect x="37.6143%" y="469" width="0.0115%" height="15" fill="rgb(219,207,3)" fg:x="88538" fg:w="27"/><text x="37.8643%" y="479.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (4,049 samples, 1.72%)</title><rect x="35.9128%" y="565" width="1.7202%" height="15" fill="rgb(222,56,46)" fg:x="84533" fg:w="4049"/><text x="36.1628%" y="575.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (4,049 samples, 1.72%)</title><rect x="35.9128%" y="549" width="1.7202%" height="15" fill="rgb(239,76,54)" fg:x="84533" fg:w="4049"/><text x="36.1628%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (40 samples, 0.02%)</title><rect x="37.6623%" y="517" width="0.0170%" height="15" fill="rgb(231,124,27)" fg:x="88651" fg:w="40"/><text x="37.9123%" y="527.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i32 (92 samples, 0.04%)</title><rect x="37.7039%" y="437" width="0.0391%" height="15" fill="rgb(249,195,6)" fg:x="88749" fg:w="92"/><text x="37.9539%" y="447.50"></text></g><g><title>nom::number::streaming::be_i32 (92 samples, 0.04%)</title><rect x="37.7039%" y="421" width="0.0391%" height="15" fill="rgb(237,174,47)" fg:x="88749" fg:w="92"/><text x="37.9539%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (92 samples, 0.04%)</title><rect x="37.7039%" y="405" width="0.0391%" height="15" fill="rgb(206,201,31)" fg:x="88749" fg:w="92"/><text x="37.9539%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (92 samples, 0.04%)</title><rect x="37.7039%" y="389" width="0.0391%" height="15" fill="rgb(231,57,52)" fg:x="88749" fg:w="92"/><text x="37.9539%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (92 samples, 0.04%)</title><rect x="37.7039%" y="373" width="0.0391%" height="15" fill="rgb(248,177,22)" fg:x="88749" fg:w="92"/><text x="37.9539%" y="383.50"></text></g><g><title>nom::number::streaming::be_i32::{{closure}} (92 samples, 0.04%)</title><rect x="37.7039%" y="357" width="0.0391%" height="15" fill="rgb(215,211,37)" fg:x="88749" fg:w="92"/><text x="37.9539%" y="367.50"></text></g><g><title>nom::number::streaming::be_u32 (92 samples, 0.04%)</title><rect x="37.7039%" y="341" width="0.0391%" height="15" fill="rgb(241,128,51)" fg:x="88749" fg:w="92"/><text x="37.9539%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.02%)</title><rect x="37.7269%" y="325" width="0.0161%" height="15" fill="rgb(227,165,31)" fg:x="88803" fg:w="38"/><text x="37.9769%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.02%)</title><rect x="37.7269%" y="309" width="0.0161%" height="15" fill="rgb(228,167,24)" fg:x="88803" fg:w="38"/><text x="37.9769%" y="319.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (28 samples, 0.01%)</title><rect x="37.7311%" y="293" width="0.0119%" height="15" fill="rgb(228,143,12)" fg:x="88813" fg:w="28"/><text x="37.9811%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (296 samples, 0.13%)</title><rect x="37.7039%" y="469" width="0.1258%" height="15" fill="rgb(249,149,8)" fg:x="88749" fg:w="296"/><text x="37.9539%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (296 samples, 0.13%)</title><rect x="37.7039%" y="453" width="0.1258%" height="15" fill="rgb(243,35,44)" fg:x="88749" fg:w="296"/><text x="37.9539%" y="463.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (195 samples, 0.08%)</title><rect x="37.7468%" y="437" width="0.0828%" height="15" fill="rgb(246,89,9)" fg:x="88850" fg:w="195"/><text x="37.9968%" y="447.50"></text></g><g><title>nom::number::streaming::be_i8 (195 samples, 0.08%)</title><rect x="37.7468%" y="421" width="0.0828%" height="15" fill="rgb(233,213,13)" fg:x="88850" fg:w="195"/><text x="37.9968%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (195 samples, 0.08%)</title><rect x="37.7468%" y="405" width="0.0828%" height="15" fill="rgb(233,141,41)" fg:x="88850" fg:w="195"/><text x="37.9968%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (195 samples, 0.08%)</title><rect x="37.7468%" y="389" width="0.0828%" height="15" fill="rgb(239,167,4)" fg:x="88850" fg:w="195"/><text x="37.9968%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (195 samples, 0.08%)</title><rect x="37.7468%" y="373" width="0.0828%" height="15" fill="rgb(209,217,16)" fg:x="88850" fg:w="195"/><text x="37.9968%" y="383.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (195 samples, 0.08%)</title><rect x="37.7468%" y="357" width="0.0828%" height="15" fill="rgb(219,88,35)" fg:x="88850" fg:w="195"/><text x="37.9968%" y="367.50"></text></g><g><title>nom::number::streaming::be_u8 (195 samples, 0.08%)</title><rect x="37.7468%" y="341" width="0.0828%" height="15" fill="rgb(220,193,23)" fg:x="88850" fg:w="195"/><text x="37.9968%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.03%)</title><rect x="37.8029%" y="325" width="0.0268%" height="15" fill="rgb(230,90,52)" fg:x="88982" fg:w="63"/><text x="38.0529%" y="335.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (63 samples, 0.03%)</title><rect x="37.8029%" y="309" width="0.0268%" height="15" fill="rgb(252,106,19)" fg:x="88982" fg:w="63"/><text x="38.0529%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (118 samples, 0.05%)</title><rect x="38.1024%" y="453" width="0.0501%" height="15" fill="rgb(206,74,20)" fg:x="89687" fg:w="118"/><text x="38.3524%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,191 samples, 0.51%)</title><rect x="37.8297%" y="469" width="0.5060%" height="15" fill="rgb(230,138,44)" fg:x="89045" fg:w="1191"/><text x="38.0797%" y="479.50"></text></g><g><title>core::ptr::write (428 samples, 0.18%)</title><rect x="38.1538%" y="453" width="0.1818%" height="15" fill="rgb(235,182,43)" fg:x="89808" fg:w="428"/><text x="38.4038%" y="463.50"></text></g><g><title>__GI___lll_lock_wake_private (31 samples, 0.01%)</title><rect x="38.6959%" y="341" width="0.0132%" height="15" fill="rgb(242,16,51)" fg:x="91084" fg:w="31"/><text x="38.9459%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.01%)</title><rect x="38.6959%" y="325" width="0.0132%" height="15" fill="rgb(248,9,4)" fg:x="91084" fg:w="31"/><text x="38.9459%" y="335.50"></text></g><g><title>do_syscall_64 (31 samples, 0.01%)</title><rect x="38.6959%" y="309" width="0.0132%" height="15" fill="rgb(210,31,22)" fg:x="91084" fg:w="31"/><text x="38.9459%" y="319.50"></text></g><g><title>__x64_sys_futex (29 samples, 0.01%)</title><rect x="38.6968%" y="293" width="0.0123%" height="15" fill="rgb(239,54,39)" fg:x="91086" fg:w="29"/><text x="38.9468%" y="303.50"></text></g><g><title>do_futex (27 samples, 0.01%)</title><rect x="38.6976%" y="277" width="0.0115%" height="15" fill="rgb(230,99,41)" fg:x="91088" fg:w="27"/><text x="38.9476%" y="287.50"></text></g><g><title>malloc_consolidate (264 samples, 0.11%)</title><rect x="39.2907%" y="325" width="0.1122%" height="15" fill="rgb(253,106,12)" fg:x="92484" fg:w="264"/><text x="39.5407%" y="335.50"></text></g><g><title>unlink_chunk.constprop.0 (51 samples, 0.02%)</title><rect x="39.3812%" y="309" width="0.0217%" height="15" fill="rgb(213,46,41)" fg:x="92697" fg:w="51"/><text x="39.6312%" y="319.50"></text></g><g><title>_int_malloc (1,798 samples, 0.76%)</title><rect x="38.7091%" y="341" width="0.7639%" height="15" fill="rgb(215,133,35)" fg:x="91115" fg:w="1798"/><text x="38.9591%" y="351.50"></text></g><g><title>unlink_chunk.constprop.0 (161 samples, 0.07%)</title><rect x="39.4045%" y="325" width="0.0684%" height="15" fill="rgb(213,28,5)" fg:x="92752" fg:w="161"/><text x="39.6545%" y="335.50"></text></g><g><title>__GI___libc_malloc (2,639 samples, 1.12%)</title><rect x="38.3522%" y="357" width="1.1211%" height="15" fill="rgb(215,77,49)" fg:x="90275" fg:w="2639"/><text x="38.6022%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,690 samples, 1.14%)</title><rect x="38.3433%" y="405" width="1.1428%" height="15" fill="rgb(248,100,22)" fg:x="90254" fg:w="2690"/><text x="38.5933%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,690 samples, 1.14%)</title><rect x="38.3433%" y="389" width="1.1428%" height="15" fill="rgb(208,67,9)" fg:x="90254" fg:w="2690"/><text x="38.5933%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2,684 samples, 1.14%)</title><rect x="38.3459%" y="373" width="1.1403%" height="15" fill="rgb(219,133,21)" fg:x="90260" fg:w="2684"/><text x="38.5959%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,710 samples, 1.15%)</title><rect x="38.3357%" y="469" width="1.1513%" height="15" fill="rgb(246,46,29)" fg:x="90236" fg:w="2710"/><text x="38.5857%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,710 samples, 1.15%)</title><rect x="38.3357%" y="453" width="1.1513%" height="15" fill="rgb(246,185,52)" fg:x="90236" fg:w="2710"/><text x="38.5857%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,693 samples, 1.14%)</title><rect x="38.3429%" y="437" width="1.1441%" height="15" fill="rgb(252,136,11)" fg:x="90253" fg:w="2693"/><text x="38.5929%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,693 samples, 1.14%)</title><rect x="38.3429%" y="421" width="1.1441%" height="15" fill="rgb(219,138,53)" fg:x="90253" fg:w="2693"/><text x="38.5929%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (41 samples, 0.02%)</title><rect x="39.4925%" y="437" width="0.0174%" height="15" fill="rgb(211,51,23)" fg:x="92959" fg:w="41"/><text x="39.7425%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (41 samples, 0.02%)</title><rect x="39.4925%" y="421" width="0.0174%" height="15" fill="rgb(247,221,28)" fg:x="92959" fg:w="41"/><text x="39.7425%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,424 samples, 1.88%)</title><rect x="37.6797%" y="501" width="1.8795%" height="15" fill="rgb(251,222,45)" fg:x="88692" fg:w="4424"/><text x="37.9297%" y="511.50">&lt;..</text></g><g><title>nom::multi::count::{{closure}} (4,410 samples, 1.87%)</title><rect x="37.6857%" y="485" width="1.8735%" height="15" fill="rgb(217,162,53)" fg:x="88706" fg:w="4410"/><text x="37.9357%" y="495.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (170 samples, 0.07%)</title><rect x="39.4870%" y="469" width="0.0722%" height="15" fill="rgb(229,93,14)" fg:x="92946" fg:w="170"/><text x="39.7370%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (170 samples, 0.07%)</title><rect x="39.4870%" y="453" width="0.0722%" height="15" fill="rgb(209,67,49)" fg:x="92946" fg:w="170"/><text x="39.7370%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (116 samples, 0.05%)</title><rect x="39.5099%" y="437" width="0.0493%" height="15" fill="rgb(213,87,29)" fg:x="93000" fg:w="116"/><text x="39.7599%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4,582 samples, 1.95%)</title><rect x="37.6330%" y="549" width="1.9466%" height="15" fill="rgb(205,151,52)" fg:x="88582" fg:w="4582"/><text x="37.8830%" y="559.50">c..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump::{{closure}} (4,573 samples, 1.94%)</title><rect x="37.6368%" y="533" width="1.9428%" height="15" fill="rgb(253,215,39)" fg:x="88591" fg:w="4573"/><text x="37.8868%" y="543.50">h..</text></g><g><title>nom::combinator::map::{{closure}} (4,473 samples, 1.90%)</title><rect x="37.6793%" y="517" width="1.9003%" height="15" fill="rgb(221,220,41)" fg:x="88691" fg:w="4473"/><text x="37.9293%" y="527.50">n..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (48 samples, 0.02%)</title><rect x="39.5592%" y="501" width="0.0204%" height="15" fill="rgb(218,133,21)" fg:x="93116" fg:w="48"/><text x="39.8092%" y="511.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (77 samples, 0.03%)</title><rect x="39.6034%" y="485" width="0.0327%" height="15" fill="rgb(221,193,43)" fg:x="93220" fg:w="77"/><text x="39.8534%" y="495.50"></text></g><g><title>nom::number::streaming::be_u32 (77 samples, 0.03%)</title><rect x="39.6034%" y="469" width="0.0327%" height="15" fill="rgb(240,128,52)" fg:x="93220" fg:w="77"/><text x="39.8534%" y="479.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (26 samples, 0.01%)</title><rect x="39.6250%" y="453" width="0.0110%" height="15" fill="rgb(253,114,12)" fg:x="93271" fg:w="26"/><text x="39.8750%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (26 samples, 0.01%)</title><rect x="39.6250%" y="437" width="0.0110%" height="15" fill="rgb(215,223,47)" fg:x="93271" fg:w="26"/><text x="39.8750%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (26 samples, 0.01%)</title><rect x="39.6250%" y="421" width="0.0110%" height="15" fill="rgb(248,225,23)" fg:x="93271" fg:w="26"/><text x="39.8750%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (26 samples, 0.01%)</title><rect x="39.6250%" y="405" width="0.0110%" height="15" fill="rgb(250,108,0)" fg:x="93271" fg:w="26"/><text x="39.8750%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (26 samples, 0.01%)</title><rect x="39.6250%" y="389" width="0.0110%" height="15" fill="rgb(228,208,7)" fg:x="93271" fg:w="26"/><text x="39.8750%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24 samples, 0.01%)</title><rect x="39.6361%" y="453" width="0.0102%" height="15" fill="rgb(244,45,10)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (24 samples, 0.01%)</title><rect x="39.6361%" y="437" width="0.0102%" height="15" fill="rgb(207,125,25)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="447.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (24 samples, 0.01%)</title><rect x="39.6361%" y="421" width="0.0102%" height="15" fill="rgb(210,195,18)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="431.50"></text></g><g><title>nom::number::streaming::be_i8 (24 samples, 0.01%)</title><rect x="39.6361%" y="405" width="0.0102%" height="15" fill="rgb(249,80,12)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24 samples, 0.01%)</title><rect x="39.6361%" y="389" width="0.0102%" height="15" fill="rgb(221,65,9)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (24 samples, 0.01%)</title><rect x="39.6361%" y="373" width="0.0102%" height="15" fill="rgb(235,49,36)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24 samples, 0.01%)</title><rect x="39.6361%" y="357" width="0.0102%" height="15" fill="rgb(225,32,20)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="367.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (24 samples, 0.01%)</title><rect x="39.6361%" y="341" width="0.0102%" height="15" fill="rgb(215,141,46)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="351.50"></text></g><g><title>nom::number::streaming::be_u8 (24 samples, 0.01%)</title><rect x="39.6361%" y="325" width="0.0102%" height="15" fill="rgb(250,160,47)" fg:x="93297" fg:w="24"/><text x="39.8861%" y="335.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (73 samples, 0.03%)</title><rect x="39.6361%" y="485" width="0.0310%" height="15" fill="rgb(216,222,40)" fg:x="93297" fg:w="73"/><text x="39.8861%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (73 samples, 0.03%)</title><rect x="39.6361%" y="469" width="0.0310%" height="15" fill="rgb(234,217,39)" fg:x="93297" fg:w="73"/><text x="39.8861%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (49 samples, 0.02%)</title><rect x="39.6463%" y="453" width="0.0208%" height="15" fill="rgb(207,178,40)" fg:x="93321" fg:w="49"/><text x="39.8963%" y="463.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (41 samples, 0.02%)</title><rect x="39.6497%" y="437" width="0.0174%" height="15" fill="rgb(221,136,13)" fg:x="93329" fg:w="41"/><text x="39.8997%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (263 samples, 0.11%)</title><rect x="39.5936%" y="517" width="0.1117%" height="15" fill="rgb(249,199,10)" fg:x="93197" fg:w="263"/><text x="39.8436%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (240 samples, 0.10%)</title><rect x="39.6034%" y="501" width="0.1020%" height="15" fill="rgb(249,222,13)" fg:x="93220" fg:w="240"/><text x="39.8534%" y="511.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (90 samples, 0.04%)</title><rect x="39.6671%" y="485" width="0.0382%" height="15" fill="rgb(244,185,38)" fg:x="93370" fg:w="90"/><text x="39.9171%" y="495.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (89 samples, 0.04%)</title><rect x="39.6675%" y="469" width="0.0378%" height="15" fill="rgb(236,202,9)" fg:x="93371" fg:w="89"/><text x="39.9175%" y="479.50"></text></g><g><title>nom::number::streaming::be_u64 (89 samples, 0.04%)</title><rect x="39.6675%" y="453" width="0.0378%" height="15" fill="rgb(250,229,37)" fg:x="93371" fg:w="89"/><text x="39.9175%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.01%)</title><rect x="39.6926%" y="437" width="0.0127%" height="15" fill="rgb(206,174,23)" fg:x="93430" fg:w="30"/><text x="39.9426%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.01%)</title><rect x="39.6926%" y="421" width="0.0127%" height="15" fill="rgb(211,33,43)" fg:x="93430" fg:w="30"/><text x="39.9426%" y="431.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (30 samples, 0.01%)</title><rect x="39.6926%" y="405" width="0.0127%" height="15" fill="rgb(245,58,50)" fg:x="93430" fg:w="30"/><text x="39.9426%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (30,168 samples, 12.82%)</title><rect x="26.8986%" y="597" width="12.8165%" height="15" fill="rgb(244,68,36)" fg:x="63315" fg:w="30168"/><text x="27.1486%" y="607.50">core::result::Resul..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (30,168 samples, 12.82%)</title><rect x="26.8986%" y="581" width="12.8165%" height="15" fill="rgb(232,229,15)" fg:x="63315" fg:w="30168"/><text x="27.1486%" y="591.50">hprof_slurp::parser..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (4,901 samples, 2.08%)</title><rect x="37.6330%" y="565" width="2.0821%" height="15" fill="rgb(254,30,23)" fg:x="88582" fg:w="4901"/><text x="37.8830%" y="575.50">h..</text></g><g><title>nom::sequence::tuple::{{closure}} (319 samples, 0.14%)</title><rect x="39.5796%" y="549" width="0.1355%" height="15" fill="rgb(235,160,14)" fg:x="93164" fg:w="319"/><text x="39.8296%" y="559.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (319 samples, 0.14%)</title><rect x="39.5796%" y="533" width="0.1355%" height="15" fill="rgb(212,155,44)" fg:x="93164" fg:w="319"/><text x="39.8296%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (867 samples, 0.37%)</title><rect x="39.7419%" y="565" width="0.3683%" height="15" fill="rgb(226,2,50)" fg:x="93546" fg:w="867"/><text x="39.9919%" y="575.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (867 samples, 0.37%)</title><rect x="39.7419%" y="549" width="0.3683%" height="15" fill="rgb(234,177,6)" fg:x="93546" fg:w="867"/><text x="39.9919%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (72,240 samples, 30.69%)</title><rect x="9.4204%" y="645" width="30.6903%" height="15" fill="rgb(217,24,9)" fg:x="22174" fg:w="72240"/><text x="9.6704%" y="655.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (71,092 samples, 30.20%)</title><rect x="9.9081%" y="629" width="30.2026%" height="15" fill="rgb(220,13,46)" fg:x="23322" fg:w="71092"/><text x="10.1581%" y="639.50">hprof_slurp::parser::record_parser::HprofRecordPa..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (31,099 samples, 13.21%)</title><rect x="26.8986%" y="613" width="13.2120%" height="15" fill="rgb(239,221,27)" fg:x="63315" fg:w="31099"/><text x="27.1486%" y="623.50">hprof_slurp::parser:..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (931 samples, 0.40%)</title><rect x="39.7151%" y="597" width="0.3955%" height="15" fill="rgb(222,198,25)" fg:x="93483" fg:w="931"/><text x="39.9651%" y="607.50"></text></g><g><title>nom::number::streaming::be_u8 (931 samples, 0.40%)</title><rect x="39.7151%" y="581" width="0.3955%" height="15" fill="rgb(211,99,13)" fg:x="93483" fg:w="931"/><text x="39.9651%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16,219 samples, 6.89%)</title><rect x="40.1106%" y="645" width="6.8904%" height="15" fill="rgb(232,111,31)" fg:x="94414" fg:w="16219"/><text x="40.3606%" y="655.50">__memcpy_..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (597 samples, 0.25%)</title><rect x="47.2543%" y="629" width="0.2536%" height="15" fill="rgb(245,82,37)" fg:x="111229" fg:w="597"/><text x="47.5043%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (597 samples, 0.25%)</title><rect x="47.2543%" y="613" width="0.2536%" height="15" fill="rgb(227,149,46)" fg:x="111229" fg:w="597"/><text x="47.5043%" y="623.50"></text></g><g><title>__alloc_pages (31 samples, 0.01%)</title><rect x="55.2268%" y="469" width="0.0132%" height="15" fill="rgb(218,36,50)" fg:x="129995" fg:w="31"/><text x="55.4768%" y="479.50"></text></g><g><title>get_page_from_freelist (30 samples, 0.01%)</title><rect x="55.2272%" y="453" width="0.0127%" height="15" fill="rgb(226,80,48)" fg:x="129996" fg:w="30"/><text x="55.4772%" y="463.50"></text></g><g><title>alloc_pages_vma (34 samples, 0.01%)</title><rect x="55.2259%" y="485" width="0.0144%" height="15" fill="rgb(238,224,15)" fg:x="129993" fg:w="34"/><text x="55.4759%" y="495.50"></text></g><g><title>do_anonymous_page (58 samples, 0.02%)</title><rect x="55.2255%" y="501" width="0.0246%" height="15" fill="rgb(241,136,10)" fg:x="129992" fg:w="58"/><text x="55.4755%" y="511.50"></text></g><g><title>do_user_addr_fault (66 samples, 0.03%)</title><rect x="55.2225%" y="565" width="0.0280%" height="15" fill="rgb(208,32,45)" fg:x="129985" fg:w="66"/><text x="55.4725%" y="575.50"></text></g><g><title>handle_mm_fault (63 samples, 0.03%)</title><rect x="55.2238%" y="549" width="0.0268%" height="15" fill="rgb(207,135,9)" fg:x="129988" fg:w="63"/><text x="55.4738%" y="559.50"></text></g><g><title>__handle_mm_fault (62 samples, 0.03%)</title><rect x="55.2242%" y="533" width="0.0263%" height="15" fill="rgb(206,86,44)" fg:x="129989" fg:w="62"/><text x="55.4742%" y="543.50"></text></g><g><title>handle_pte_fault (60 samples, 0.03%)</title><rect x="55.2251%" y="517" width="0.0255%" height="15" fill="rgb(245,177,15)" fg:x="129991" fg:w="60"/><text x="55.4751%" y="527.50"></text></g><g><title>asm_exc_page_fault (68 samples, 0.03%)</title><rect x="55.2221%" y="597" width="0.0289%" height="15" fill="rgb(206,64,50)" fg:x="129984" fg:w="68"/><text x="55.4721%" y="607.50"></text></g><g><title>exc_page_fault (68 samples, 0.03%)</title><rect x="55.2221%" y="581" width="0.0289%" height="15" fill="rgb(234,36,40)" fg:x="129984" fg:w="68"/><text x="55.4721%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (18,146 samples, 7.71%)</title><rect x="47.5546%" y="613" width="7.7091%" height="15" fill="rgb(213,64,8)" fg:x="111936" fg:w="18146"/><text x="47.8046%" y="623.50">__memcpy_av..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19,451 samples, 8.26%)</title><rect x="47.0011%" y="645" width="8.2635%" height="15" fill="rgb(210,75,36)" fg:x="110633" fg:w="19451"/><text x="47.2511%" y="655.50">alloc::vec::..</text></g><g><title>core::ptr::write (18,258 samples, 7.76%)</title><rect x="47.5079%" y="629" width="7.7567%" height="15" fill="rgb(229,88,21)" fg:x="111826" fg:w="18258"/><text x="47.7579%" y="639.50">core::ptr::..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (462 samples, 0.20%)</title><rect x="55.2650%" y="645" width="0.1963%" height="15" fill="rgb(252,204,47)" fg:x="130085" fg:w="462"/><text x="55.5150%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (462 samples, 0.20%)</title><rect x="55.2650%" y="629" width="0.1963%" height="15" fill="rgb(208,77,27)" fg:x="130085" fg:w="462"/><text x="55.5150%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (462 samples, 0.20%)</title><rect x="55.2650%" y="613" width="0.1963%" height="15" fill="rgb(221,76,26)" fg:x="130085" fg:w="462"/><text x="55.5150%" y="623.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (110,374 samples, 46.89%)</title><rect x="8.5707%" y="677" width="46.8910%" height="15" fill="rgb(225,139,18)" fg:x="20174" fg:w="110374"/><text x="8.8207%" y="687.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (110,374 samples, 46.89%)</title><rect x="8.5707%" y="661" width="46.8910%" height="15" fill="rgb(230,137,11)" fg:x="20174" fg:w="110374"/><text x="8.8207%" y="671.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>std::panic::catch_unwind (122,403 samples, 52.00%)</title><rect x="3.4641%" y="789" width="52.0014%" height="15" fill="rgb(212,28,1)" fg:x="8154" fg:w="122403"/><text x="3.7141%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (122,403 samples, 52.00%)</title><rect x="3.4641%" y="773" width="52.0014%" height="15" fill="rgb(248,164,17)" fg:x="8154" fg:w="122403"/><text x="3.7141%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (122,403 samples, 52.00%)</title><rect x="3.4641%" y="757" width="52.0014%" height="15" fill="rgb(222,171,42)" fg:x="8154" fg:w="122403"/><text x="3.7141%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (122,403 samples, 52.00%)</title><rect x="3.4641%" y="741" width="52.0014%" height="15" fill="rgb(243,84,45)" fg:x="8154" fg:w="122403"/><text x="3.7141%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (122,403 samples, 52.00%)</title><rect x="3.4641%" y="725" width="52.0014%" height="15" fill="rgb(252,49,23)" fg:x="8154" fg:w="122403"/><text x="3.7141%" y="735.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (122,403 samples, 52.00%)</title><rect x="3.4641%" y="709" width="52.0014%" height="15" fill="rgb(215,19,7)" fg:x="8154" fg:w="122403"/><text x="3.7141%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (122,403 samples, 52.00%)</title><rect x="3.4641%" y="693" width="52.0014%" height="15" fill="rgb(238,81,41)" fg:x="8154" fg:w="122403"/><text x="3.7141%" y="703.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}</text></g><g><title>__GI___clone (122,404 samples, 52.00%)</title><rect x="3.4641%" y="901" width="52.0018%" height="15" fill="rgb(210,199,37)" fg:x="8154" fg:w="122404"/><text x="3.7141%" y="911.50">__GI___clone</text></g><g><title>start_thread (122,404 samples, 52.00%)</title><rect x="3.4641%" y="885" width="52.0018%" height="15" fill="rgb(244,192,49)" fg:x="8154" fg:w="122404"/><text x="3.7141%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (122,404 samples, 52.00%)</title><rect x="3.4641%" y="869" width="52.0018%" height="15" fill="rgb(226,211,11)" fg:x="8154" fg:w="122404"/><text x="3.7141%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (122,404 samples, 52.00%)</title><rect x="3.4641%" y="853" width="52.0018%" height="15" fill="rgb(236,162,54)" fg:x="8154" fg:w="122404"/><text x="3.7141%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (122,404 samples, 52.00%)</title><rect x="3.4641%" y="837" width="52.0018%" height="15" fill="rgb(220,229,9)" fg:x="8154" fg:w="122404"/><text x="3.7141%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (122,404 samples, 52.00%)</title><rect x="3.4641%" y="821" width="52.0018%" height="15" fill="rgb(250,87,22)" fg:x="8154" fg:w="122404"/><text x="3.7141%" y="831.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (122,404 samples, 52.00%)</title><rect x="3.4641%" y="805" width="52.0018%" height="15" fill="rgb(239,43,17)" fg:x="8154" fg:w="122404"/><text x="3.7141%" y="815.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>asm_exc_page_fault (152 samples, 0.06%)</title><rect x="55.4660%" y="901" width="0.0646%" height="15" fill="rgb(231,177,25)" fg:x="130558" fg:w="152"/><text x="55.7160%" y="911.50"></text></g><g><title>hprof-parser (130,722 samples, 55.54%)</title><rect x="0.0000%" y="917" width="55.5356%" height="15" fill="rgb(219,179,1)" fg:x="0" fg:w="130722"/><text x="0.2500%" y="927.50">hprof-parser</text></g><g><title>__cond_resched (27 samples, 0.01%)</title><rect x="55.7013%" y="453" width="0.0115%" height="15" fill="rgb(238,219,53)" fg:x="131112" fg:w="27"/><text x="55.9513%" y="463.50"></text></g><g><title>asm_exc_page_fault (7,559 samples, 3.21%)</title><rect x="55.7268%" y="453" width="3.2113%" height="15" fill="rgb(232,167,36)" fg:x="131172" fg:w="7559"/><text x="55.9768%" y="463.50">asm..</text></g><g><title>copy_page_to_iter (312 samples, 0.13%)</title><rect x="58.9386%" y="453" width="0.1325%" height="15" fill="rgb(244,19,51)" fg:x="138732" fg:w="312"/><text x="59.1886%" y="463.50"></text></g><g><title>__read_end_io (104 samples, 0.04%)</title><rect x="62.9962%" y="213" width="0.0442%" height="15" fill="rgb(224,6,22)" fg:x="148283" fg:w="104"/><text x="63.2462%" y="223.50"></text></g><g><title>nvme_complete_rq (165 samples, 0.07%)</title><rect x="62.9856%" y="293" width="0.0701%" height="15" fill="rgb(224,145,5)" fg:x="148258" fg:w="165"/><text x="63.2356%" y="303.50"></text></g><g><title>blk_mq_end_request (165 samples, 0.07%)</title><rect x="62.9856%" y="277" width="0.0701%" height="15" fill="rgb(234,130,49)" fg:x="148258" fg:w="165"/><text x="63.2356%" y="287.50"></text></g><g><title>blk_update_request (158 samples, 0.07%)</title><rect x="62.9886%" y="261" width="0.0671%" height="15" fill="rgb(254,6,2)" fg:x="148265" fg:w="158"/><text x="63.2386%" y="271.50"></text></g><g><title>bio_endio (147 samples, 0.06%)</title><rect x="62.9932%" y="245" width="0.0625%" height="15" fill="rgb(208,96,46)" fg:x="148276" fg:w="147"/><text x="63.2432%" y="255.50"></text></g><g><title>mpage_end_io (141 samples, 0.06%)</title><rect x="62.9958%" y="229" width="0.0599%" height="15" fill="rgb(239,3,39)" fg:x="148282" fg:w="141"/><text x="63.2458%" y="239.50"></text></g><g><title>unlock_page (36 samples, 0.02%)</title><rect x="63.0404%" y="213" width="0.0153%" height="15" fill="rgb(233,210,1)" fg:x="148387" fg:w="36"/><text x="63.2904%" y="223.50"></text></g><g><title>__handle_irq_event_percpu (210 samples, 0.09%)</title><rect x="62.9796%" y="357" width="0.0892%" height="15" fill="rgb(244,137,37)" fg:x="148244" fg:w="210"/><text x="63.2296%" y="367.50"></text></g><g><title>nvme_irq (207 samples, 0.09%)</title><rect x="62.9809%" y="341" width="0.0879%" height="15" fill="rgb(240,136,2)" fg:x="148247" fg:w="207"/><text x="63.2309%" y="351.50"></text></g><g><title>nvme_process_cq (207 samples, 0.09%)</title><rect x="62.9809%" y="325" width="0.0879%" height="15" fill="rgb(239,18,37)" fg:x="148247" fg:w="207"/><text x="63.2309%" y="335.50"></text></g><g><title>nvme_pci_complete_rq (198 samples, 0.08%)</title><rect x="62.9847%" y="309" width="0.0841%" height="15" fill="rgb(218,185,22)" fg:x="148256" fg:w="198"/><text x="63.2347%" y="319.50"></text></g><g><title>nvme_unmap_data (31 samples, 0.01%)</title><rect x="63.0557%" y="293" width="0.0132%" height="15" fill="rgb(225,218,4)" fg:x="148423" fg:w="31"/><text x="63.3057%" y="303.50"></text></g><g><title>handle_irq_event (212 samples, 0.09%)</title><rect x="62.9796%" y="373" width="0.0901%" height="15" fill="rgb(230,182,32)" fg:x="148244" fg:w="212"/><text x="63.2296%" y="383.50"></text></g><g><title>handle_edge_irq (221 samples, 0.09%)</title><rect x="62.9775%" y="389" width="0.0939%" height="15" fill="rgb(242,56,43)" fg:x="148239" fg:w="221"/><text x="63.2275%" y="399.50"></text></g><g><title>__common_interrupt (224 samples, 0.10%)</title><rect x="62.9767%" y="405" width="0.0952%" height="15" fill="rgb(233,99,24)" fg:x="148237" fg:w="224"/><text x="63.2267%" y="415.50"></text></g><g><title>asm_common_interrupt (227 samples, 0.10%)</title><rect x="62.9758%" y="437" width="0.0964%" height="15" fill="rgb(234,209,42)" fg:x="148235" fg:w="227"/><text x="63.2258%" y="447.50"></text></g><g><title>common_interrupt (227 samples, 0.10%)</title><rect x="62.9758%" y="421" width="0.0964%" height="15" fill="rgb(227,7,12)" fg:x="148235" fg:w="227"/><text x="63.2258%" y="431.50"></text></g><g><title>__read_end_io (61 samples, 0.03%)</title><rect x="63.2702%" y="165" width="0.0259%" height="15" fill="rgb(245,203,43)" fg:x="148928" fg:w="61"/><text x="63.5202%" y="175.50"></text></g><g><title>nvme_complete_rq (98 samples, 0.04%)</title><rect x="63.2651%" y="245" width="0.0416%" height="15" fill="rgb(238,205,33)" fg:x="148916" fg:w="98"/><text x="63.5151%" y="255.50"></text></g><g><title>blk_mq_end_request (98 samples, 0.04%)</title><rect x="63.2651%" y="229" width="0.0416%" height="15" fill="rgb(231,56,7)" fg:x="148916" fg:w="98"/><text x="63.5151%" y="239.50"></text></g><g><title>blk_update_request (95 samples, 0.04%)</title><rect x="63.2664%" y="213" width="0.0404%" height="15" fill="rgb(244,186,29)" fg:x="148919" fg:w="95"/><text x="63.5164%" y="223.50"></text></g><g><title>bio_endio (89 samples, 0.04%)</title><rect x="63.2690%" y="197" width="0.0378%" height="15" fill="rgb(234,111,31)" fg:x="148925" fg:w="89"/><text x="63.5190%" y="207.50"></text></g><g><title>mpage_end_io (86 samples, 0.04%)</title><rect x="63.2702%" y="181" width="0.0365%" height="15" fill="rgb(241,149,10)" fg:x="148928" fg:w="86"/><text x="63.5202%" y="191.50"></text></g><g><title>unlock_page (25 samples, 0.01%)</title><rect x="63.2961%" y="165" width="0.0106%" height="15" fill="rgb(249,206,44)" fg:x="148989" fg:w="25"/><text x="63.5461%" y="175.50"></text></g><g><title>nvme_irq (114 samples, 0.05%)</title><rect x="63.2634%" y="293" width="0.0484%" height="15" fill="rgb(251,153,30)" fg:x="148912" fg:w="114"/><text x="63.5134%" y="303.50"></text></g><g><title>nvme_process_cq (114 samples, 0.05%)</title><rect x="63.2634%" y="277" width="0.0484%" height="15" fill="rgb(239,152,38)" fg:x="148912" fg:w="114"/><text x="63.5134%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (110 samples, 0.05%)</title><rect x="63.2651%" y="261" width="0.0467%" height="15" fill="rgb(249,139,47)" fg:x="148916" fg:w="110"/><text x="63.5151%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (115 samples, 0.05%)</title><rect x="63.2634%" y="309" width="0.0489%" height="15" fill="rgb(244,64,35)" fg:x="148912" fg:w="115"/><text x="63.5134%" y="319.50"></text></g><g><title>handle_irq_event (117 samples, 0.05%)</title><rect x="63.2634%" y="325" width="0.0497%" height="15" fill="rgb(216,46,15)" fg:x="148912" fg:w="117"/><text x="63.5134%" y="335.50"></text></g><g><title>handle_edge_irq (121 samples, 0.05%)</title><rect x="63.2630%" y="341" width="0.0514%" height="15" fill="rgb(250,74,19)" fg:x="148911" fg:w="121"/><text x="63.5130%" y="351.50"></text></g><g><title>asm_common_interrupt (125 samples, 0.05%)</title><rect x="63.2617%" y="389" width="0.0531%" height="15" fill="rgb(249,42,33)" fg:x="148908" fg:w="125"/><text x="63.5117%" y="399.50"></text></g><g><title>common_interrupt (125 samples, 0.05%)</title><rect x="63.2617%" y="373" width="0.0531%" height="15" fill="rgb(242,149,17)" fg:x="148908" fg:w="125"/><text x="63.5117%" y="383.50"></text></g><g><title>__common_interrupt (124 samples, 0.05%)</title><rect x="63.2622%" y="357" width="0.0527%" height="15" fill="rgb(244,29,21)" fg:x="148909" fg:w="124"/><text x="63.5122%" y="367.50"></text></g><g><title>down_read_trylock (134 samples, 0.06%)</title><rect x="63.3182%" y="389" width="0.0569%" height="15" fill="rgb(220,130,37)" fg:x="149041" fg:w="134"/><text x="63.5682%" y="399.50"></text></g><g><title>find_vma (106 samples, 0.05%)</title><rect x="63.3752%" y="389" width="0.0450%" height="15" fill="rgb(211,67,2)" fg:x="149175" fg:w="106"/><text x="63.6252%" y="399.50"></text></g><g><title>vmacache_find (74 samples, 0.03%)</title><rect x="63.3888%" y="373" width="0.0314%" height="15" fill="rgb(235,68,52)" fg:x="149207" fg:w="74"/><text x="63.6388%" y="383.50"></text></g><g><title>__count_memcg_events (62 samples, 0.03%)</title><rect x="63.5111%" y="373" width="0.0263%" height="15" fill="rgb(246,142,3)" fg:x="149495" fg:w="62"/><text x="63.7611%" y="383.50"></text></g><g><title>cgroup_rstat_updated (26 samples, 0.01%)</title><rect x="63.5264%" y="357" width="0.0110%" height="15" fill="rgb(241,25,7)" fg:x="149531" fg:w="26"/><text x="63.7764%" y="367.50"></text></g><g><title>_raw_spin_lock (143 samples, 0.06%)</title><rect x="63.8421%" y="341" width="0.0608%" height="15" fill="rgb(242,119,39)" fg:x="150274" fg:w="143"/><text x="64.0921%" y="351.50"></text></g><g><title>__get_vma_policy (27 samples, 0.01%)</title><rect x="64.0290%" y="325" width="0.0115%" height="15" fill="rgb(241,98,45)" fg:x="150714" fg:w="27"/><text x="64.2790%" y="335.50"></text></g><g><title>alloc_pages (32 samples, 0.01%)</title><rect x="64.0660%" y="293" width="0.0136%" height="15" fill="rgb(254,28,30)" fg:x="150801" fg:w="32"/><text x="64.3160%" y="303.50"></text></g><g><title>__alloc_pages (32 samples, 0.01%)</title><rect x="64.0660%" y="277" width="0.0136%" height="15" fill="rgb(241,142,54)" fg:x="150801" fg:w="32"/><text x="64.3160%" y="287.50"></text></g><g><title>get_page_from_freelist (26 samples, 0.01%)</title><rect x="64.0685%" y="261" width="0.0110%" height="15" fill="rgb(222,85,15)" fg:x="150807" fg:w="26"/><text x="64.3185%" y="271.50"></text></g><g><title>__pte_alloc (43 samples, 0.02%)</title><rect x="64.0643%" y="325" width="0.0183%" height="15" fill="rgb(210,85,47)" fg:x="150797" fg:w="43"/><text x="64.3143%" y="335.50"></text></g><g><title>pte_alloc_one (39 samples, 0.02%)</title><rect x="64.0660%" y="309" width="0.0166%" height="15" fill="rgb(224,206,25)" fg:x="150801" fg:w="39"/><text x="64.3160%" y="319.50"></text></g><g><title>clear_page_erms (32 samples, 0.01%)</title><rect x="64.2707%" y="261" width="0.0136%" height="15" fill="rgb(243,201,19)" fg:x="151283" fg:w="32"/><text x="64.5207%" y="271.50"></text></g><g><title>get_page_from_freelist (44 samples, 0.02%)</title><rect x="64.2686%" y="277" width="0.0187%" height="15" fill="rgb(236,59,4)" fg:x="151278" fg:w="44"/><text x="64.5186%" y="287.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (51 samples, 0.02%)</title><rect x="64.2677%" y="293" width="0.0217%" height="15" fill="rgb(254,179,45)" fg:x="151276" fg:w="51"/><text x="64.5177%" y="303.50"></text></g><g><title>__next_zones_zonelist (112 samples, 0.05%)</title><rect x="64.2975%" y="293" width="0.0476%" height="15" fill="rgb(226,14,10)" fg:x="151346" fg:w="112"/><text x="64.5475%" y="303.50"></text></g><g><title>__inc_numa_state (58 samples, 0.02%)</title><rect x="64.4470%" y="277" width="0.0246%" height="15" fill="rgb(244,27,41)" fg:x="151698" fg:w="58"/><text x="64.6970%" y="287.50"></text></g><g><title>__read_end_io (39 samples, 0.02%)</title><rect x="65.9403%" y="37" width="0.0166%" height="15" fill="rgb(235,35,32)" fg:x="155213" fg:w="39"/><text x="66.1903%" y="47.50"></text></g><g><title>nvme_complete_rq (59 samples, 0.03%)</title><rect x="65.9374%" y="117" width="0.0251%" height="15" fill="rgb(218,68,31)" fg:x="155206" fg:w="59"/><text x="66.1874%" y="127.50"></text></g><g><title>blk_mq_end_request (59 samples, 0.03%)</title><rect x="65.9374%" y="101" width="0.0251%" height="15" fill="rgb(207,120,37)" fg:x="155206" fg:w="59"/><text x="66.1874%" y="111.50"></text></g><g><title>blk_update_request (57 samples, 0.02%)</title><rect x="65.9382%" y="85" width="0.0242%" height="15" fill="rgb(227,98,0)" fg:x="155208" fg:w="57"/><text x="66.1882%" y="95.50"></text></g><g><title>bio_endio (56 samples, 0.02%)</title><rect x="65.9386%" y="69" width="0.0238%" height="15" fill="rgb(207,7,3)" fg:x="155209" fg:w="56"/><text x="66.1886%" y="79.50"></text></g><g><title>mpage_end_io (52 samples, 0.02%)</title><rect x="65.9403%" y="53" width="0.0221%" height="15" fill="rgb(206,98,19)" fg:x="155213" fg:w="52"/><text x="66.1903%" y="63.50"></text></g><g><title>__handle_irq_event_percpu (70 samples, 0.03%)</title><rect x="65.9365%" y="181" width="0.0297%" height="15" fill="rgb(217,5,26)" fg:x="155204" fg:w="70"/><text x="66.1865%" y="191.50"></text></g><g><title>nvme_irq (70 samples, 0.03%)</title><rect x="65.9365%" y="165" width="0.0297%" height="15" fill="rgb(235,190,38)" fg:x="155204" fg:w="70"/><text x="66.1865%" y="175.50"></text></g><g><title>nvme_process_cq (70 samples, 0.03%)</title><rect x="65.9365%" y="149" width="0.0297%" height="15" fill="rgb(247,86,24)" fg:x="155204" fg:w="70"/><text x="66.1865%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (68 samples, 0.03%)</title><rect x="65.9374%" y="133" width="0.0289%" height="15" fill="rgb(205,101,16)" fg:x="155206" fg:w="68"/><text x="66.1874%" y="143.50"></text></g><g><title>handle_irq_event (72 samples, 0.03%)</title><rect x="65.9365%" y="197" width="0.0306%" height="15" fill="rgb(246,168,33)" fg:x="155204" fg:w="72"/><text x="66.1865%" y="207.50"></text></g><g><title>asm_common_interrupt (77 samples, 0.03%)</title><rect x="65.9352%" y="261" width="0.0327%" height="15" fill="rgb(231,114,1)" fg:x="155201" fg:w="77"/><text x="66.1852%" y="271.50"></text></g><g><title>common_interrupt (77 samples, 0.03%)</title><rect x="65.9352%" y="245" width="0.0327%" height="15" fill="rgb(207,184,53)" fg:x="155201" fg:w="77"/><text x="66.1852%" y="255.50"></text></g><g><title>__common_interrupt (77 samples, 0.03%)</title><rect x="65.9352%" y="229" width="0.0327%" height="15" fill="rgb(224,95,51)" fg:x="155201" fg:w="77"/><text x="66.1852%" y="239.50"></text></g><g><title>handle_edge_irq (76 samples, 0.03%)</title><rect x="65.9357%" y="213" width="0.0323%" height="15" fill="rgb(212,188,45)" fg:x="155202" fg:w="76"/><text x="66.1857%" y="223.50"></text></g><g><title>clear_page_erms (3,504 samples, 1.49%)</title><rect x="64.4806%" y="277" width="1.4886%" height="15" fill="rgb(223,154,38)" fg:x="151777" fg:w="3504"/><text x="64.7306%" y="287.50"></text></g><g><title>kernel_init_free_pages (58 samples, 0.02%)</title><rect x="65.9692%" y="277" width="0.0246%" height="15" fill="rgb(251,22,52)" fg:x="155281" fg:w="58"/><text x="66.2192%" y="287.50"></text></g><g><title>nvme_complete_rq (36 samples, 0.02%)</title><rect x="66.1489%" y="117" width="0.0153%" height="15" fill="rgb(229,209,22)" fg:x="155704" fg:w="36"/><text x="66.3989%" y="127.50"></text></g><g><title>blk_mq_end_request (36 samples, 0.02%)</title><rect x="66.1489%" y="101" width="0.0153%" height="15" fill="rgb(234,138,34)" fg:x="155704" fg:w="36"/><text x="66.3989%" y="111.50"></text></g><g><title>blk_update_request (35 samples, 0.01%)</title><rect x="66.1494%" y="85" width="0.0149%" height="15" fill="rgb(212,95,11)" fg:x="155705" fg:w="35"/><text x="66.3994%" y="95.50"></text></g><g><title>bio_endio (34 samples, 0.01%)</title><rect x="66.1498%" y="69" width="0.0144%" height="15" fill="rgb(240,179,47)" fg:x="155706" fg:w="34"/><text x="66.3998%" y="79.50"></text></g><g><title>mpage_end_io (33 samples, 0.01%)</title><rect x="66.1502%" y="53" width="0.0140%" height="15" fill="rgb(240,163,11)" fg:x="155707" fg:w="33"/><text x="66.4002%" y="63.50"></text></g><g><title>__handle_irq_event_percpu (39 samples, 0.02%)</title><rect x="66.1485%" y="181" width="0.0166%" height="15" fill="rgb(236,37,12)" fg:x="155703" fg:w="39"/><text x="66.3985%" y="191.50"></text></g><g><title>nvme_irq (39 samples, 0.02%)</title><rect x="66.1485%" y="165" width="0.0166%" height="15" fill="rgb(232,164,16)" fg:x="155703" fg:w="39"/><text x="66.3985%" y="175.50"></text></g><g><title>nvme_process_cq (39 samples, 0.02%)</title><rect x="66.1485%" y="149" width="0.0166%" height="15" fill="rgb(244,205,15)" fg:x="155703" fg:w="39"/><text x="66.3985%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (38 samples, 0.02%)</title><rect x="66.1489%" y="133" width="0.0161%" height="15" fill="rgb(223,117,47)" fg:x="155704" fg:w="38"/><text x="66.3989%" y="143.50"></text></g><g><title>asm_common_interrupt (40 samples, 0.02%)</title><rect x="66.1485%" y="261" width="0.0170%" height="15" fill="rgb(244,107,35)" fg:x="155703" fg:w="40"/><text x="66.3985%" y="271.50"></text></g><g><title>common_interrupt (40 samples, 0.02%)</title><rect x="66.1485%" y="245" width="0.0170%" height="15" fill="rgb(205,140,8)" fg:x="155703" fg:w="40"/><text x="66.3985%" y="255.50"></text></g><g><title>__common_interrupt (40 samples, 0.02%)</title><rect x="66.1485%" y="229" width="0.0170%" height="15" fill="rgb(228,84,46)" fg:x="155703" fg:w="40"/><text x="66.3985%" y="239.50"></text></g><g><title>handle_edge_irq (40 samples, 0.02%)</title><rect x="66.1485%" y="213" width="0.0170%" height="15" fill="rgb(254,188,9)" fg:x="155703" fg:w="40"/><text x="66.3985%" y="223.50"></text></g><g><title>handle_irq_event (40 samples, 0.02%)</title><rect x="66.1485%" y="197" width="0.0170%" height="15" fill="rgb(206,112,54)" fg:x="155703" fg:w="40"/><text x="66.3985%" y="207.50"></text></g><g><title>rmqueue (1,478 samples, 0.63%)</title><rect x="65.9939%" y="277" width="0.6279%" height="15" fill="rgb(216,84,49)" fg:x="155339" fg:w="1478"/><text x="66.2439%" y="287.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,071 samples, 0.46%)</title><rect x="66.1668%" y="261" width="0.4550%" height="15" fill="rgb(214,194,35)" fg:x="155746" fg:w="1071"/><text x="66.4168%" y="271.50"></text></g><g><title>get_page_from_freelist (5,354 samples, 2.27%)</title><rect x="64.3476%" y="293" width="2.2746%" height="15" fill="rgb(249,28,3)" fg:x="151464" fg:w="5354"/><text x="64.5976%" y="303.50">g..</text></g><g><title>__alloc_pages (5,814 samples, 2.47%)</title><rect x="64.1705%" y="309" width="2.4700%" height="15" fill="rgb(222,56,52)" fg:x="151047" fg:w="5814"/><text x="64.4205%" y="319.50">__..</text></g><g><title>alloc_pages_vma (6,123 samples, 2.60%)</title><rect x="64.0829%" y="325" width="2.6013%" height="15" fill="rgb(245,217,50)" fg:x="150841" fg:w="6123"/><text x="64.3329%" y="335.50">al..</text></g><g><title>cgroup_throttle_swaprate (231 samples, 0.10%)</title><rect x="66.6851%" y="325" width="0.0981%" height="15" fill="rgb(213,201,24)" fg:x="156966" fg:w="231"/><text x="66.9351%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (30 samples, 0.01%)</title><rect x="66.7832%" y="325" width="0.0127%" height="15" fill="rgb(248,116,28)" fg:x="157197" fg:w="30"/><text x="67.0332%" y="335.50"></text></g><g><title>__lock_text_start (27 samples, 0.01%)</title><rect x="66.9302%" y="277" width="0.0115%" height="15" fill="rgb(219,72,43)" fg:x="157543" fg:w="27"/><text x="67.1802%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (31 samples, 0.01%)</title><rect x="67.2777%" y="229" width="0.0132%" height="15" fill="rgb(209,138,14)" fg:x="158361" fg:w="31"/><text x="67.5277%" y="239.50"></text></g><g><title>cgroup_rstat_updated (24 samples, 0.01%)</title><rect x="67.2807%" y="213" width="0.0102%" height="15" fill="rgb(222,18,33)" fg:x="158368" fg:w="24"/><text x="67.5307%" y="223.50"></text></g><g><title>__mod_memcg_lruvec_state (145 samples, 0.06%)</title><rect x="67.2310%" y="245" width="0.0616%" height="15" fill="rgb(213,199,7)" fg:x="158251" fg:w="145"/><text x="67.4810%" y="255.50"></text></g><g><title>__mod_lruvec_state (239 samples, 0.10%)</title><rect x="67.2148%" y="261" width="0.1015%" height="15" fill="rgb(250,110,10)" fg:x="158213" fg:w="239"/><text x="67.4648%" y="271.50"></text></g><g><title>__mod_node_page_state (38 samples, 0.02%)</title><rect x="67.3002%" y="245" width="0.0161%" height="15" fill="rgb(248,123,6)" fg:x="158414" fg:w="38"/><text x="67.5502%" y="255.50"></text></g><g><title>__mod_node_page_state (32 samples, 0.01%)</title><rect x="67.3177%" y="261" width="0.0136%" height="15" fill="rgb(206,91,31)" fg:x="158455" fg:w="32"/><text x="67.5677%" y="271.50"></text></g><g><title>__mod_zone_page_state (33 samples, 0.01%)</title><rect x="67.3313%" y="261" width="0.0140%" height="15" fill="rgb(211,154,13)" fg:x="158487" fg:w="33"/><text x="67.5813%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (42 samples, 0.02%)</title><rect x="67.3453%" y="261" width="0.0178%" height="15" fill="rgb(225,148,7)" fg:x="158520" fg:w="42"/><text x="67.5953%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (1,094 samples, 0.46%)</title><rect x="66.9523%" y="277" width="0.4648%" height="15" fill="rgb(220,160,43)" fg:x="157595" fg:w="1094"/><text x="67.2023%" y="287.50"></text></g><g><title>page_mapping (127 samples, 0.05%)</title><rect x="67.3631%" y="261" width="0.0540%" height="15" fill="rgb(213,52,39)" fg:x="158562" fg:w="127"/><text x="67.6131%" y="271.50"></text></g><g><title>lock_page_lruvec_irqsave (62 samples, 0.03%)</title><rect x="67.4183%" y="277" width="0.0263%" height="15" fill="rgb(243,137,7)" fg:x="158692" fg:w="62"/><text x="67.6683%" y="287.50"></text></g><g><title>_raw_spin_lock_irqsave (50 samples, 0.02%)</title><rect x="67.4234%" y="261" width="0.0212%" height="15" fill="rgb(230,79,13)" fg:x="158704" fg:w="50"/><text x="67.6734%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (27 samples, 0.01%)</title><rect x="67.4332%" y="245" width="0.0115%" height="15" fill="rgb(247,105,23)" fg:x="158727" fg:w="27"/><text x="67.6832%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (27 samples, 0.01%)</title><rect x="67.4332%" y="229" width="0.0115%" height="15" fill="rgb(223,179,41)" fg:x="158727" fg:w="27"/><text x="67.6832%" y="239.50"></text></g><g><title>__pagevec_lru_add (1,504 samples, 0.64%)</title><rect x="66.8949%" y="293" width="0.6390%" height="15" fill="rgb(218,9,34)" fg:x="157460" fg:w="1504"/><text x="67.1449%" y="303.50"></text></g><g><title>release_pages (183 samples, 0.08%)</title><rect x="67.4562%" y="277" width="0.0777%" height="15" fill="rgb(222,106,8)" fg:x="158781" fg:w="183"/><text x="67.7062%" y="287.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,730 samples, 0.73%)</title><rect x="66.8070%" y="325" width="0.7350%" height="15" fill="rgb(211,220,0)" fg:x="157253" fg:w="1730"/><text x="67.0570%" y="335.50"></text></g><g><title>lru_cache_add (1,700 samples, 0.72%)</title><rect x="66.8197%" y="309" width="0.7222%" height="15" fill="rgb(229,52,16)" fg:x="157283" fg:w="1700"/><text x="67.0697%" y="319.50"></text></g><g><title>nvme_complete_rq (25 samples, 0.01%)</title><rect x="67.9099%" y="149" width="0.0106%" height="15" fill="rgb(212,155,18)" fg:x="159849" fg:w="25"/><text x="68.1599%" y="159.50"></text></g><g><title>blk_mq_end_request (25 samples, 0.01%)</title><rect x="67.9099%" y="133" width="0.0106%" height="15" fill="rgb(242,21,14)" fg:x="159849" fg:w="25"/><text x="68.1599%" y="143.50"></text></g><g><title>handle_irq_event (29 samples, 0.01%)</title><rect x="67.9090%" y="229" width="0.0123%" height="15" fill="rgb(222,19,48)" fg:x="159847" fg:w="29"/><text x="68.1590%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (29 samples, 0.01%)</title><rect x="67.9090%" y="213" width="0.0123%" height="15" fill="rgb(232,45,27)" fg:x="159847" fg:w="29"/><text x="68.1590%" y="223.50"></text></g><g><title>nvme_irq (29 samples, 0.01%)</title><rect x="67.9090%" y="197" width="0.0123%" height="15" fill="rgb(249,103,42)" fg:x="159847" fg:w="29"/><text x="68.1590%" y="207.50"></text></g><g><title>nvme_process_cq (29 samples, 0.01%)</title><rect x="67.9090%" y="181" width="0.0123%" height="15" fill="rgb(246,81,33)" fg:x="159847" fg:w="29"/><text x="68.1590%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (27 samples, 0.01%)</title><rect x="67.9099%" y="165" width="0.0115%" height="15" fill="rgb(252,33,42)" fg:x="159849" fg:w="27"/><text x="68.1599%" y="175.50"></text></g><g><title>asm_common_interrupt (33 samples, 0.01%)</title><rect x="67.9086%" y="293" width="0.0140%" height="15" fill="rgb(209,212,41)" fg:x="159846" fg:w="33"/><text x="68.1586%" y="303.50"></text></g><g><title>common_interrupt (33 samples, 0.01%)</title><rect x="67.9086%" y="277" width="0.0140%" height="15" fill="rgb(207,154,6)" fg:x="159846" fg:w="33"/><text x="68.1586%" y="287.50"></text></g><g><title>__common_interrupt (33 samples, 0.01%)</title><rect x="67.9086%" y="261" width="0.0140%" height="15" fill="rgb(223,64,47)" fg:x="159846" fg:w="33"/><text x="68.1586%" y="271.50"></text></g><g><title>handle_edge_irq (33 samples, 0.01%)</title><rect x="67.9086%" y="245" width="0.0140%" height="15" fill="rgb(211,161,38)" fg:x="159846" fg:w="33"/><text x="68.1586%" y="255.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (258 samples, 0.11%)</title><rect x="67.9294%" y="293" width="0.1096%" height="15" fill="rgb(219,138,40)" fg:x="159895" fg:w="258"/><text x="68.1794%" y="303.50"></text></g><g><title>cgroup_rstat_updated (123 samples, 0.05%)</title><rect x="67.9868%" y="277" width="0.0523%" height="15" fill="rgb(241,228,46)" fg:x="160030" fg:w="123"/><text x="68.2368%" y="287.50"></text></g><g><title>page_counter_try_charge (70 samples, 0.03%)</title><rect x="68.2990%" y="277" width="0.0297%" height="15" fill="rgb(223,209,38)" fg:x="160765" fg:w="70"/><text x="68.5490%" y="287.50"></text></g><g><title>__mem_cgroup_charge (1,727 samples, 0.73%)</title><rect x="67.5968%" y="309" width="0.7337%" height="15" fill="rgb(236,164,45)" fg:x="159112" fg:w="1727"/><text x="67.8468%" y="319.50"></text></g><g><title>try_charge (673 samples, 0.29%)</title><rect x="68.0446%" y="293" width="0.2859%" height="15" fill="rgb(231,15,5)" fg:x="160166" fg:w="673"/><text x="68.2946%" y="303.50"></text></g><g><title>get_mem_cgroup_from_mm (311 samples, 0.13%)</title><rect x="68.3322%" y="309" width="0.1321%" height="15" fill="rgb(252,35,15)" fg:x="160843" fg:w="311"/><text x="68.5822%" y="319.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (33 samples, 0.01%)</title><rect x="68.4643%" y="309" width="0.0140%" height="15" fill="rgb(248,181,18)" fg:x="161154" fg:w="33"/><text x="68.7143%" y="319.50"></text></g><g><title>memcg_check_events (209 samples, 0.09%)</title><rect x="68.4783%" y="309" width="0.0888%" height="15" fill="rgb(233,39,42)" fg:x="161187" fg:w="209"/><text x="68.7283%" y="319.50"></text></g><g><title>rcu_read_unlock_strict (39 samples, 0.02%)</title><rect x="68.5671%" y="309" width="0.0166%" height="15" fill="rgb(238,110,33)" fg:x="161396" fg:w="39"/><text x="68.8171%" y="319.50"></text></g><g><title>mem_cgroup_charge (2,471 samples, 1.05%)</title><rect x="67.5420%" y="325" width="1.0498%" height="15" fill="rgb(233,195,10)" fg:x="158983" fg:w="2471"/><text x="67.7920%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (158 samples, 0.07%)</title><rect x="68.6521%" y="277" width="0.0671%" height="15" fill="rgb(254,105,3)" fg:x="161596" fg:w="158"/><text x="68.9021%" y="287.50"></text></g><g><title>__mod_node_page_state (79 samples, 0.03%)</title><rect x="68.7285%" y="277" width="0.0336%" height="15" fill="rgb(221,225,9)" fg:x="161776" fg:w="79"/><text x="68.9785%" y="287.50"></text></g><g><title>__mod_lruvec_state (295 samples, 0.13%)</title><rect x="68.6372%" y="293" width="0.1253%" height="15" fill="rgb(224,227,45)" fg:x="161561" fg:w="295"/><text x="68.8872%" y="303.50"></text></g><g><title>__mod_node_page_state (30 samples, 0.01%)</title><rect x="68.7630%" y="293" width="0.0127%" height="15" fill="rgb(229,198,43)" fg:x="161857" fg:w="30"/><text x="69.0130%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (392 samples, 0.17%)</title><rect x="68.6143%" y="309" width="0.1665%" height="15" fill="rgb(206,209,35)" fg:x="161507" fg:w="392"/><text x="68.8643%" y="319.50"></text></g><g><title>__page_set_anon_rmap (33 samples, 0.01%)</title><rect x="68.7850%" y="309" width="0.0140%" height="15" fill="rgb(245,195,53)" fg:x="161909" fg:w="33"/><text x="69.0350%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (488 samples, 0.21%)</title><rect x="68.5956%" y="325" width="0.2073%" height="15" fill="rgb(240,92,26)" fg:x="161463" fg:w="488"/><text x="68.8456%" y="335.50"></text></g><g><title>pmd_page_vaddr (37 samples, 0.02%)</title><rect x="68.8101%" y="325" width="0.0157%" height="15" fill="rgb(207,40,23)" fg:x="161968" fg:w="37"/><text x="69.0601%" y="335.50"></text></g><g><title>pmd_pfn (26 samples, 0.01%)</title><rect x="68.8258%" y="325" width="0.0110%" height="15" fill="rgb(223,111,35)" fg:x="162005" fg:w="26"/><text x="69.0758%" y="335.50"></text></g><g><title>pmd_val (34 samples, 0.01%)</title><rect x="68.8369%" y="325" width="0.0144%" height="15" fill="rgb(229,147,28)" fg:x="162031" fg:w="34"/><text x="69.0869%" y="335.50"></text></g><g><title>do_anonymous_page (11,653 samples, 4.95%)</title><rect x="63.9215%" y="341" width="4.9506%" height="15" fill="rgb(211,29,28)" fg:x="150461" fg:w="11653"/><text x="64.1715%" y="351.50">do_ano..</text></g><g><title>pmd_page_vaddr (56 samples, 0.02%)</title><rect x="68.8955%" y="341" width="0.0238%" height="15" fill="rgb(228,72,33)" fg:x="162169" fg:w="56"/><text x="69.1455%" y="351.50"></text></g><g><title>pmd_val (38 samples, 0.02%)</title><rect x="68.9244%" y="341" width="0.0161%" height="15" fill="rgb(205,214,31)" fg:x="162237" fg:w="38"/><text x="69.1744%" y="351.50"></text></g><g><title>handle_pte_fault (12,187 samples, 5.18%)</title><rect x="63.7686%" y="357" width="5.1775%" height="15" fill="rgb(224,111,15)" fg:x="150101" fg:w="12187"/><text x="64.0186%" y="367.50">handle..</text></g><g><title>pmd_val (29 samples, 0.01%)</title><rect x="68.9482%" y="357" width="0.0123%" height="15" fill="rgb(253,21,26)" fg:x="162293" fg:w="29"/><text x="69.1982%" y="367.50"></text></g><g><title>__handle_mm_fault (12,799 samples, 5.44%)</title><rect x="63.5375%" y="373" width="5.4375%" height="15" fill="rgb(245,139,43)" fg:x="149557" fg:w="12799"/><text x="63.7875%" y="383.50">__handl..</text></g><g><title>pud_val (34 samples, 0.01%)</title><rect x="68.9605%" y="357" width="0.0144%" height="15" fill="rgb(252,170,7)" fg:x="162322" fg:w="34"/><text x="69.2105%" y="367.50"></text></g><g><title>handle_pte_fault (26 samples, 0.01%)</title><rect x="68.9805%" y="373" width="0.0110%" height="15" fill="rgb(231,118,14)" fg:x="162369" fg:w="26"/><text x="69.2305%" y="383.50"></text></g><g><title>pud_val (37 samples, 0.02%)</title><rect x="69.0179%" y="373" width="0.0157%" height="15" fill="rgb(238,83,0)" fg:x="162457" fg:w="37"/><text x="69.2679%" y="383.50"></text></g><g><title>handle_mm_fault (13,233 samples, 5.62%)</title><rect x="63.4202%" y="389" width="5.6219%" height="15" fill="rgb(221,39,39)" fg:x="149281" fg:w="13233"/><text x="63.6702%" y="399.50">handle_..</text></g><g><title>mem_cgroup_from_task (39 samples, 0.02%)</title><rect x="69.0421%" y="389" width="0.0166%" height="15" fill="rgb(222,119,46)" fg:x="162514" fg:w="39"/><text x="69.2921%" y="399.50"></text></g><g><title>up_read (191 samples, 0.08%)</title><rect x="69.0667%" y="389" width="0.0811%" height="15" fill="rgb(222,165,49)" fg:x="162572" fg:w="191"/><text x="69.3167%" y="399.50"></text></g><g><title>do_user_addr_fault (14,137 samples, 6.01%)</title><rect x="63.1475%" y="405" width="6.0059%" height="15" fill="rgb(219,113,52)" fg:x="148639" fg:w="14137"/><text x="63.3975%" y="415.50">do_user_..</text></g><g><title>exc_page_fault (14,382 samples, 6.11%)</title><rect x="63.0740%" y="421" width="6.1100%" height="15" fill="rgb(214,7,15)" fg:x="148466" fg:w="14382"/><text x="63.3240%" y="431.50">exc_page..</text></g><g><title>asm_exc_page_fault (14,398 samples, 6.12%)</title><rect x="63.0723%" y="437" width="6.1168%" height="15" fill="rgb(235,32,4)" fg:x="148462" fg:w="14398"/><text x="63.3223%" y="447.50">asm_exc_..</text></g><g><title>copy_user_enhanced_fast_string (23,830 samples, 10.12%)</title><rect x="59.0711%" y="453" width="10.1239%" height="15" fill="rgb(238,90,54)" fg:x="139044" fg:w="23830"/><text x="59.3211%" y="463.50">copy_user_enhan..</text></g><g><title>error_entry (221 samples, 0.09%)</title><rect x="69.1954%" y="453" width="0.0939%" height="15" fill="rgb(213,208,19)" fg:x="162875" fg:w="221"/><text x="69.4454%" y="463.50"></text></g><g><title>xas_load (60 samples, 0.03%)</title><rect x="69.7163%" y="421" width="0.0255%" height="15" fill="rgb(233,156,4)" fg:x="164101" fg:w="60"/><text x="69.9663%" y="431.50"></text></g><g><title>filemap_get_read_batch (1,014 samples, 0.43%)</title><rect x="69.3152%" y="437" width="0.4308%" height="15" fill="rgb(207,194,5)" fg:x="163157" fg:w="1014"/><text x="69.5652%" y="447.50"></text></g><g><title>get_page_from_freelist (34 samples, 0.01%)</title><rect x="69.9963%" y="325" width="0.0144%" height="15" fill="rgb(206,111,30)" fg:x="164760" fg:w="34"/><text x="70.2463%" y="335.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (42 samples, 0.02%)</title><rect x="69.9954%" y="341" width="0.0178%" height="15" fill="rgb(243,70,54)" fg:x="164758" fg:w="42"/><text x="70.2454%" y="351.50"></text></g><g><title>__next_zones_zonelist (81 samples, 0.03%)</title><rect x="70.0205%" y="341" width="0.0344%" height="15" fill="rgb(242,28,8)" fg:x="164817" fg:w="81"/><text x="70.2705%" y="351.50"></text></g><g><title>__inc_numa_state (51 samples, 0.02%)</title><rect x="70.1598%" y="325" width="0.0217%" height="15" fill="rgb(219,106,18)" fg:x="165145" fg:w="51"/><text x="70.4098%" y="335.50"></text></g><g><title>clear_page_erms (3,163 samples, 1.34%)</title><rect x="70.1866%" y="325" width="1.3438%" height="15" fill="rgb(244,222,10)" fg:x="165208" fg:w="3163"/><text x="70.4366%" y="335.50"></text></g><g><title>kernel_init_free_pages (57 samples, 0.02%)</title><rect x="71.5304%" y="325" width="0.0242%" height="15" fill="rgb(236,179,52)" fg:x="168371" fg:w="57"/><text x="71.7804%" y="335.50"></text></g><g><title>_raw_spin_lock (25 samples, 0.01%)</title><rect x="71.6986%" y="309" width="0.0106%" height="15" fill="rgb(213,23,39)" fg:x="168767" fg:w="25"/><text x="71.9486%" y="319.50"></text></g><g><title>rmqueue (1,395 samples, 0.59%)</title><rect x="71.5546%" y="325" width="0.5926%" height="15" fill="rgb(238,48,10)" fg:x="168428" fg:w="1395"/><text x="71.8046%" y="335.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,018 samples, 0.43%)</title><rect x="71.7147%" y="309" width="0.4325%" height="15" fill="rgb(251,196,23)" fg:x="168805" fg:w="1018"/><text x="71.9647%" y="319.50"></text></g><g><title>get_page_from_freelist (4,921 samples, 2.09%)</title><rect x="70.0574%" y="341" width="2.0906%" height="15" fill="rgb(250,152,24)" fg:x="164904" fg:w="4921"/><text x="70.3074%" y="351.50">g..</text></g><g><title>__alloc_pages (5,343 samples, 2.27%)</title><rect x="69.9015%" y="357" width="2.2699%" height="15" fill="rgb(209,150,17)" fg:x="164537" fg:w="5343"/><text x="70.1515%" y="367.50">_..</text></g><g><title>policy_nodemask (31 samples, 0.01%)</title><rect x="72.2016%" y="357" width="0.0132%" height="15" fill="rgb(234,202,34)" fg:x="169951" fg:w="31"/><text x="72.4516%" y="367.50"></text></g><g><title>alloc_pages (5,533 samples, 2.35%)</title><rect x="69.8697%" y="373" width="2.3506%" height="15" fill="rgb(253,148,53)" fg:x="164462" fg:w="5533"/><text x="70.1197%" y="383.50">a..</text></g><g><title>__page_cache_alloc (5,596 samples, 2.38%)</title><rect x="69.8548%" y="389" width="2.3774%" height="15" fill="rgb(218,129,16)" fg:x="164427" fg:w="5596"/><text x="70.1048%" y="399.50">__..</text></g><g><title>PageHuge (35 samples, 0.01%)</title><rect x="72.2938%" y="373" width="0.0149%" height="15" fill="rgb(216,85,19)" fg:x="170168" fg:w="35"/><text x="72.5438%" y="383.50"></text></g><g><title>PageHuge (27 samples, 0.01%)</title><rect x="73.1783%" y="357" width="0.0115%" height="15" fill="rgb(235,228,7)" fg:x="172250" fg:w="27"/><text x="73.4283%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (129 samples, 0.05%)</title><rect x="73.2505%" y="325" width="0.0548%" height="15" fill="rgb(245,175,0)" fg:x="172420" fg:w="129"/><text x="73.5005%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (28 samples, 0.01%)</title><rect x="73.3053%" y="325" width="0.0119%" height="15" fill="rgb(208,168,36)" fg:x="172549" fg:w="28"/><text x="73.5553%" y="335.50"></text></g><g><title>__mod_lruvec_state (290 samples, 0.12%)</title><rect x="73.2395%" y="341" width="0.1232%" height="15" fill="rgb(246,171,24)" fg:x="172394" fg:w="290"/><text x="73.4895%" y="351.50"></text></g><g><title>__mod_node_page_state (107 samples, 0.05%)</title><rect x="73.3172%" y="325" width="0.0455%" height="15" fill="rgb(215,142,24)" fg:x="172577" fg:w="107"/><text x="73.5672%" y="335.50"></text></g><g><title>__mod_node_page_state (32 samples, 0.01%)</title><rect x="73.3656%" y="341" width="0.0136%" height="15" fill="rgb(250,187,7)" fg:x="172691" fg:w="32"/><text x="73.6156%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (447 samples, 0.19%)</title><rect x="73.1932%" y="357" width="0.1899%" height="15" fill="rgb(228,66,33)" fg:x="172285" fg:w="447"/><text x="73.4432%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (265 samples, 0.11%)</title><rect x="73.3886%" y="357" width="0.1126%" height="15" fill="rgb(234,215,21)" fg:x="172745" fg:w="265"/><text x="73.6386%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (111 samples, 0.05%)</title><rect x="73.4540%" y="341" width="0.0472%" height="15" fill="rgb(222,191,20)" fg:x="172899" fg:w="111"/><text x="73.7040%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (111 samples, 0.05%)</title><rect x="73.4540%" y="325" width="0.0472%" height="15" fill="rgb(245,79,54)" fg:x="172899" fg:w="111"/><text x="73.7040%" y="335.50"></text></g><g><title>bio_endio (26 samples, 0.01%)</title><rect x="73.5041%" y="165" width="0.0110%" height="15" fill="rgb(240,10,37)" fg:x="173017" fg:w="26"/><text x="73.7541%" y="175.50"></text></g><g><title>mpage_end_io (26 samples, 0.01%)</title><rect x="73.5041%" y="149" width="0.0110%" height="15" fill="rgb(214,192,32)" fg:x="173017" fg:w="26"/><text x="73.7541%" y="159.50"></text></g><g><title>nvme_complete_rq (31 samples, 0.01%)</title><rect x="73.5024%" y="213" width="0.0132%" height="15" fill="rgb(209,36,54)" fg:x="173013" fg:w="31"/><text x="73.7524%" y="223.50"></text></g><g><title>blk_mq_end_request (31 samples, 0.01%)</title><rect x="73.5024%" y="197" width="0.0132%" height="15" fill="rgb(220,10,11)" fg:x="173013" fg:w="31"/><text x="73.7524%" y="207.50"></text></g><g><title>blk_update_request (28 samples, 0.01%)</title><rect x="73.5037%" y="181" width="0.0119%" height="15" fill="rgb(221,106,17)" fg:x="173016" fg:w="28"/><text x="73.7537%" y="191.50"></text></g><g><title>asm_common_interrupt (36 samples, 0.02%)</title><rect x="73.5012%" y="357" width="0.0153%" height="15" fill="rgb(251,142,44)" fg:x="173010" fg:w="36"/><text x="73.7512%" y="367.50"></text></g><g><title>common_interrupt (36 samples, 0.02%)</title><rect x="73.5012%" y="341" width="0.0153%" height="15" fill="rgb(238,13,15)" fg:x="173010" fg:w="36"/><text x="73.7512%" y="351.50"></text></g><g><title>__common_interrupt (34 samples, 0.01%)</title><rect x="73.5020%" y="325" width="0.0144%" height="15" fill="rgb(208,107,27)" fg:x="173012" fg:w="34"/><text x="73.7520%" y="335.50"></text></g><g><title>handle_edge_irq (34 samples, 0.01%)</title><rect x="73.5020%" y="309" width="0.0144%" height="15" fill="rgb(205,136,37)" fg:x="173012" fg:w="34"/><text x="73.7520%" y="319.50"></text></g><g><title>handle_irq_event (34 samples, 0.01%)</title><rect x="73.5020%" y="293" width="0.0144%" height="15" fill="rgb(250,205,27)" fg:x="173012" fg:w="34"/><text x="73.7520%" y="303.50"></text></g><g><title>__handle_irq_event_percpu (34 samples, 0.01%)</title><rect x="73.5020%" y="277" width="0.0144%" height="15" fill="rgb(210,80,43)" fg:x="173012" fg:w="34"/><text x="73.7520%" y="287.50"></text></g><g><title>nvme_irq (34 samples, 0.01%)</title><rect x="73.5020%" y="261" width="0.0144%" height="15" fill="rgb(247,160,36)" fg:x="173012" fg:w="34"/><text x="73.7520%" y="271.50"></text></g><g><title>nvme_process_cq (34 samples, 0.01%)</title><rect x="73.5020%" y="245" width="0.0144%" height="15" fill="rgb(234,13,49)" fg:x="173012" fg:w="34"/><text x="73.7520%" y="255.50"></text></g><g><title>nvme_pci_complete_rq (33 samples, 0.01%)</title><rect x="73.5024%" y="229" width="0.0140%" height="15" fill="rgb(234,122,0)" fg:x="173013" fg:w="33"/><text x="73.7524%" y="239.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (70 samples, 0.03%)</title><rect x="73.5997%" y="325" width="0.0297%" height="15" fill="rgb(207,146,38)" fg:x="173242" fg:w="70"/><text x="73.8497%" y="335.50"></text></g><g><title>cgroup_rstat_updated (31 samples, 0.01%)</title><rect x="73.6163%" y="309" width="0.0132%" height="15" fill="rgb(207,177,25)" fg:x="173281" fg:w="31"/><text x="73.8663%" y="319.50"></text></g><g><title>page_counter_try_charge (40 samples, 0.02%)</title><rect x="73.7042%" y="309" width="0.0170%" height="15" fill="rgb(211,178,42)" fg:x="173488" fg:w="40"/><text x="73.9542%" y="319.50"></text></g><g><title>__mem_cgroup_charge (419 samples, 0.18%)</title><rect x="73.5462%" y="341" width="0.1780%" height="15" fill="rgb(230,69,54)" fg:x="173116" fg:w="419"/><text x="73.7962%" y="351.50"></text></g><g><title>try_charge (207 samples, 0.09%)</title><rect x="73.6363%" y="325" width="0.0879%" height="15" fill="rgb(214,135,41)" fg:x="173328" fg:w="207"/><text x="73.8863%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (64 samples, 0.03%)</title><rect x="73.7246%" y="341" width="0.0272%" height="15" fill="rgb(237,67,25)" fg:x="173536" fg:w="64"/><text x="73.9746%" y="351.50"></text></g><g><title>rcu_read_unlock_strict (39 samples, 0.02%)</title><rect x="73.7612%" y="341" width="0.0166%" height="15" fill="rgb(222,189,50)" fg:x="173622" fg:w="39"/><text x="74.0112%" y="351.50"></text></g><g><title>mem_cgroup_charge (600 samples, 0.25%)</title><rect x="73.5241%" y="357" width="0.2549%" height="15" fill="rgb(245,148,34)" fg:x="173064" fg:w="600"/><text x="73.7741%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (26 samples, 0.01%)</title><rect x="73.7803%" y="357" width="0.0110%" height="15" fill="rgb(222,29,6)" fg:x="173667" fg:w="26"/><text x="74.0303%" y="367.50"></text></g><g><title>xas_load (789 samples, 0.34%)</title><rect x="73.8653%" y="341" width="0.3352%" height="15" fill="rgb(221,189,43)" fg:x="173867" fg:w="789"/><text x="74.1153%" y="351.50"></text></g><g><title>xa_get_order (1,062 samples, 0.45%)</title><rect x="73.7977%" y="357" width="0.4512%" height="15" fill="rgb(207,36,27)" fg:x="173708" fg:w="1062"/><text x="74.0477%" y="367.50"></text></g><g><title>xas_start (114 samples, 0.05%)</title><rect x="74.2005%" y="341" width="0.0484%" height="15" fill="rgb(217,90,24)" fg:x="174656" fg:w="114"/><text x="74.4505%" y="351.50"></text></g><g><title>xas_find_conflict (309 samples, 0.13%)</title><rect x="74.2502%" y="357" width="0.1313%" height="15" fill="rgb(224,66,35)" fg:x="174773" fg:w="309"/><text x="74.5002%" y="367.50"></text></g><g><title>xas_load (34 samples, 0.01%)</title><rect x="74.3814%" y="357" width="0.0144%" height="15" fill="rgb(221,13,50)" fg:x="175082" fg:w="34"/><text x="74.6314%" y="367.50"></text></g><g><title>xas_nomem (26 samples, 0.01%)</title><rect x="74.3959%" y="357" width="0.0110%" height="15" fill="rgb(236,68,49)" fg:x="175116" fg:w="26"/><text x="74.6459%" y="367.50"></text></g><g><title>xas_start (43 samples, 0.02%)</title><rect x="74.4069%" y="357" width="0.0183%" height="15" fill="rgb(229,146,28)" fg:x="175142" fg:w="43"/><text x="74.6569%" y="367.50"></text></g><g><title>workingset_update_node (81 samples, 0.03%)</title><rect x="74.5102%" y="341" width="0.0344%" height="15" fill="rgb(225,31,38)" fg:x="175385" fg:w="81"/><text x="74.7602%" y="351.50"></text></g><g><title>list_lru_del (40 samples, 0.02%)</title><rect x="74.5276%" y="325" width="0.0170%" height="15" fill="rgb(250,208,3)" fg:x="175426" fg:w="40"/><text x="74.7776%" y="335.50"></text></g><g><title>__add_to_page_cache_locked (5,322 samples, 2.26%)</title><rect x="72.3087%" y="373" width="2.2610%" height="15" fill="rgb(246,54,23)" fg:x="170203" fg:w="5322"/><text x="72.5587%" y="383.50">_..</text></g><g><title>xas_store (340 samples, 0.14%)</title><rect x="74.4252%" y="357" width="0.1444%" height="15" fill="rgb(243,76,11)" fg:x="175185" fg:w="340"/><text x="74.6752%" y="367.50"></text></g><g><title>xas_create (59 samples, 0.03%)</title><rect x="74.5446%" y="341" width="0.0251%" height="15" fill="rgb(245,21,50)" fg:x="175466" fg:w="59"/><text x="74.7946%" y="351.50"></text></g><g><title>__mod_zone_page_state (27 samples, 0.01%)</title><rect x="74.7209%" y="341" width="0.0115%" height="15" fill="rgb(228,9,43)" fg:x="175881" fg:w="27"/><text x="74.9709%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (31 samples, 0.01%)</title><rect x="75.0450%" y="293" width="0.0132%" height="15" fill="rgb(208,100,47)" fg:x="176644" fg:w="31"/><text x="75.2950%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (126 samples, 0.05%)</title><rect x="75.0081%" y="309" width="0.0535%" height="15" fill="rgb(232,26,8)" fg:x="176557" fg:w="126"/><text x="75.2581%" y="319.50"></text></g><g><title>__mod_lruvec_state (226 samples, 0.10%)</title><rect x="74.9898%" y="325" width="0.0960%" height="15" fill="rgb(216,166,38)" fg:x="176514" fg:w="226"/><text x="75.2398%" y="335.50"></text></g><g><title>__mod_node_page_state (35 samples, 0.01%)</title><rect x="75.0709%" y="309" width="0.0149%" height="15" fill="rgb(251,202,51)" fg:x="176705" fg:w="35"/><text x="75.3209%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (36 samples, 0.02%)</title><rect x="75.1066%" y="325" width="0.0153%" height="15" fill="rgb(254,216,34)" fg:x="176789" fg:w="36"/><text x="75.3566%" y="335.50"></text></g><g><title>page_mapping (112 samples, 0.05%)</title><rect x="75.1219%" y="325" width="0.0476%" height="15" fill="rgb(251,32,27)" fg:x="176825" fg:w="112"/><text x="75.3719%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (1,032 samples, 0.44%)</title><rect x="74.7324%" y="341" width="0.4384%" height="15" fill="rgb(208,127,28)" fg:x="175908" fg:w="1032"/><text x="74.9824%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (52 samples, 0.02%)</title><rect x="75.1784%" y="325" width="0.0221%" height="15" fill="rgb(224,137,22)" fg:x="176958" fg:w="52"/><text x="75.4284%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (29 samples, 0.01%)</title><rect x="75.1882%" y="309" width="0.0123%" height="15" fill="rgb(254,70,32)" fg:x="176981" fg:w="29"/><text x="75.4382%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (29 samples, 0.01%)</title><rect x="75.1882%" y="293" width="0.0123%" height="15" fill="rgb(229,75,37)" fg:x="176981" fg:w="29"/><text x="75.4382%" y="303.50"></text></g><g><title>lock_page_lruvec_irqsave (67 samples, 0.03%)</title><rect x="75.1725%" y="341" width="0.0285%" height="15" fill="rgb(252,64,23)" fg:x="176944" fg:w="67"/><text x="75.4225%" y="351.50"></text></g><g><title>page_mapping (32 samples, 0.01%)</title><rect x="75.2060%" y="341" width="0.0136%" height="15" fill="rgb(232,162,48)" fg:x="177023" fg:w="32"/><text x="75.4560%" y="351.50"></text></g><g><title>__pagevec_lru_add (1,455 samples, 0.62%)</title><rect x="74.6665%" y="357" width="0.6181%" height="15" fill="rgb(246,160,12)" fg:x="175753" fg:w="1455"/><text x="74.9165%" y="367.50"></text></g><g><title>release_pages (146 samples, 0.06%)</title><rect x="75.2226%" y="341" width="0.0620%" height="15" fill="rgb(247,166,0)" fg:x="177062" fg:w="146"/><text x="75.4726%" y="351.50"></text></g><g><title>lru_cache_add (1,658 samples, 0.70%)</title><rect x="74.5832%" y="373" width="0.7044%" height="15" fill="rgb(249,219,21)" fg:x="175557" fg:w="1658"/><text x="74.8332%" y="383.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (28 samples, 0.01%)</title><rect x="75.2961%" y="373" width="0.0119%" height="15" fill="rgb(205,209,3)" fg:x="177235" fg:w="28"/><text x="75.5461%" y="383.50"></text></g><g><title>idr_find (193 samples, 0.08%)</title><rect x="75.4189%" y="341" width="0.0820%" height="15" fill="rgb(243,44,1)" fg:x="177524" fg:w="193"/><text x="75.6689%" y="351.50"></text></g><g><title>radix_tree_lookup (174 samples, 0.07%)</title><rect x="75.4270%" y="325" width="0.0739%" height="15" fill="rgb(206,159,16)" fg:x="177543" fg:w="174"/><text x="75.6770%" y="335.50"></text></g><g><title>__radix_tree_lookup (174 samples, 0.07%)</title><rect x="75.4270%" y="309" width="0.0739%" height="15" fill="rgb(244,77,30)" fg:x="177543" fg:w="174"/><text x="75.6770%" y="319.50"></text></g><g><title>mem_cgroup_from_id (217 samples, 0.09%)</title><rect x="75.4134%" y="357" width="0.0922%" height="15" fill="rgb(218,69,12)" fg:x="177511" fg:w="217"/><text x="75.6634%" y="367.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (102 samples, 0.04%)</title><rect x="75.5056%" y="357" width="0.0433%" height="15" fill="rgb(212,87,7)" fg:x="177728" fg:w="102"/><text x="75.7556%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (30 samples, 0.01%)</title><rect x="75.6322%" y="309" width="0.0127%" height="15" fill="rgb(245,114,25)" fg:x="178026" fg:w="30"/><text x="75.8822%" y="319.50"></text></g><g><title>cgroup_rstat_updated (24 samples, 0.01%)</title><rect x="75.6347%" y="293" width="0.0102%" height="15" fill="rgb(210,61,42)" fg:x="178032" fg:w="24"/><text x="75.8847%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (140 samples, 0.06%)</title><rect x="75.5914%" y="325" width="0.0595%" height="15" fill="rgb(211,52,33)" fg:x="177930" fg:w="140"/><text x="75.8414%" y="335.50"></text></g><g><title>__mod_lruvec_state (233 samples, 0.10%)</title><rect x="75.5778%" y="341" width="0.0990%" height="15" fill="rgb(234,58,33)" fg:x="177898" fg:w="233"/><text x="75.8278%" y="351.50"></text></g><g><title>__mod_node_page_state (40 samples, 0.02%)</title><rect x="75.6598%" y="325" width="0.0170%" height="15" fill="rgb(220,115,36)" fg:x="178091" fg:w="40"/><text x="75.9098%" y="335.50"></text></g><g><title>mod_lruvec_state.constprop.0 (326 samples, 0.14%)</title><rect x="75.5489%" y="357" width="0.1385%" height="15" fill="rgb(243,153,54)" fg:x="177830" fg:w="326"/><text x="75.7989%" y="367.50"></text></g><g><title>workingset_refault (885 samples, 0.38%)</title><rect x="75.3148%" y="373" width="0.3760%" height="15" fill="rgb(251,47,18)" fg:x="177279" fg:w="885"/><text x="75.5648%" y="383.50"></text></g><g><title>xa_get_order (30 samples, 0.01%)</title><rect x="75.6908%" y="373" width="0.0127%" height="15" fill="rgb(242,102,42)" fg:x="178164" fg:w="30"/><text x="75.9408%" y="383.50"></text></g><g><title>xas_find_conflict (52 samples, 0.02%)</title><rect x="75.7035%" y="373" width="0.0221%" height="15" fill="rgb(234,31,38)" fg:x="178194" fg:w="52"/><text x="75.9535%" y="383.50"></text></g><g><title>add_to_page_cache_lru (8,240 samples, 3.50%)</title><rect x="72.2322%" y="389" width="3.5007%" height="15" fill="rgb(221,117,51)" fg:x="170023" fg:w="8240"/><text x="72.4822%" y="399.50">add..</text></g><g><title>__blk_bios_map_sg (28 samples, 0.01%)</title><rect x="75.7609%" y="229" width="0.0119%" height="15" fill="rgb(212,20,18)" fg:x="178329" fg:w="28"/><text x="76.0109%" y="239.50"></text></g><g><title>__blk_rq_map_sg (31 samples, 0.01%)</title><rect x="75.7609%" y="245" width="0.0132%" height="15" fill="rgb(245,133,36)" fg:x="178329" fg:w="31"/><text x="76.0109%" y="255.50"></text></g><g><title>nvme_pci_setup_prps (40 samples, 0.02%)</title><rect x="75.7859%" y="245" width="0.0170%" height="15" fill="rgb(212,6,19)" fg:x="178388" fg:w="40"/><text x="76.0359%" y="255.50"></text></g><g><title>nvme_map_data (109 samples, 0.05%)</title><rect x="75.7592%" y="261" width="0.0463%" height="15" fill="rgb(218,1,36)" fg:x="178325" fg:w="109"/><text x="76.0092%" y="271.50"></text></g><g><title>blk_finish_plug (131 samples, 0.06%)</title><rect x="75.7528%" y="373" width="0.0557%" height="15" fill="rgb(246,84,54)" fg:x="178310" fg:w="131"/><text x="76.0028%" y="383.50"></text></g><g><title>blk_flush_plug_list (131 samples, 0.06%)</title><rect x="75.7528%" y="357" width="0.0557%" height="15" fill="rgb(242,110,6)" fg:x="178310" fg:w="131"/><text x="76.0028%" y="367.50"></text></g><g><title>blk_mq_flush_plug_list (131 samples, 0.06%)</title><rect x="75.7528%" y="341" width="0.0557%" height="15" fill="rgb(214,47,5)" fg:x="178310" fg:w="131"/><text x="76.0028%" y="351.50"></text></g><g><title>blk_mq_sched_insert_requests (130 samples, 0.06%)</title><rect x="75.7532%" y="325" width="0.0552%" height="15" fill="rgb(218,159,25)" fg:x="178311" fg:w="130"/><text x="76.0032%" y="335.50"></text></g><g><title>blk_mq_try_issue_list_directly (128 samples, 0.05%)</title><rect x="75.7541%" y="309" width="0.0544%" height="15" fill="rgb(215,211,28)" fg:x="178313" fg:w="128"/><text x="76.0041%" y="319.50"></text></g><g><title>__blk_mq_try_issue_directly (128 samples, 0.05%)</title><rect x="75.7541%" y="293" width="0.0544%" height="15" fill="rgb(238,59,32)" fg:x="178313" fg:w="128"/><text x="76.0041%" y="303.50"></text></g><g><title>nvme_queue_rq (128 samples, 0.05%)</title><rect x="75.7541%" y="277" width="0.0544%" height="15" fill="rgb(226,82,3)" fg:x="178313" fg:w="128"/><text x="76.0041%" y="287.50"></text></g><g><title>__bio_try_merge_page (103 samples, 0.04%)</title><rect x="76.1853%" y="325" width="0.0438%" height="15" fill="rgb(240,164,32)" fg:x="179328" fg:w="103"/><text x="76.4353%" y="335.50"></text></g><g><title>bio_add_page (171 samples, 0.07%)</title><rect x="76.1568%" y="341" width="0.0726%" height="15" fill="rgb(232,46,7)" fg:x="179261" fg:w="171"/><text x="76.4068%" y="351.50"></text></g><g><title>bvec_alloc (31 samples, 0.01%)</title><rect x="76.2303%" y="325" width="0.0132%" height="15" fill="rgb(229,129,53)" fg:x="179434" fg:w="31"/><text x="76.4803%" y="335.50"></text></g><g><title>bio_alloc_bioset (44 samples, 0.02%)</title><rect x="76.2295%" y="341" width="0.0187%" height="15" fill="rgb(234,188,29)" fg:x="179432" fg:w="44"/><text x="76.4795%" y="351.50"></text></g><g><title>ext4_map_blocks (50 samples, 0.02%)</title><rect x="76.2528%" y="341" width="0.0212%" height="15" fill="rgb(246,141,4)" fg:x="179487" fg:w="50"/><text x="76.5028%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (24 samples, 0.01%)</title><rect x="76.2639%" y="325" width="0.0102%" height="15" fill="rgb(229,23,39)" fg:x="179513" fg:w="24"/><text x="76.5139%" y="335.50"></text></g><g><title>fscrypt_mergeable_bio (38 samples, 0.02%)</title><rect x="76.2741%" y="341" width="0.0161%" height="15" fill="rgb(206,12,3)" fg:x="179537" fg:w="38"/><text x="76.5241%" y="351.50"></text></g><g><title>__blk_mq_alloc_request (28 samples, 0.01%)</title><rect x="76.3047%" y="293" width="0.0119%" height="15" fill="rgb(252,226,20)" fg:x="179609" fg:w="28"/><text x="76.5547%" y="303.50"></text></g><g><title>bio_split (24 samples, 0.01%)</title><rect x="76.3552%" y="261" width="0.0102%" height="15" fill="rgb(216,123,35)" fg:x="179728" fg:w="24"/><text x="76.6052%" y="271.50"></text></g><g><title>blk_bio_segment_split (137 samples, 0.06%)</title><rect x="76.3191%" y="277" width="0.0582%" height="15" fill="rgb(212,68,40)" fg:x="179643" fg:w="137"/><text x="76.5691%" y="287.50"></text></g><g><title>bvec_split_segs (28 samples, 0.01%)</title><rect x="76.3654%" y="261" width="0.0119%" height="15" fill="rgb(254,125,32)" fg:x="179752" fg:w="28"/><text x="76.6154%" y="271.50"></text></g><g><title>__blk_queue_split (147 samples, 0.06%)</title><rect x="76.3174%" y="293" width="0.0625%" height="15" fill="rgb(253,97,22)" fg:x="179639" fg:w="147"/><text x="76.5674%" y="303.50"></text></g><g><title>__blk_bios_map_sg (80 samples, 0.03%)</title><rect x="76.4020%" y="165" width="0.0340%" height="15" fill="rgb(241,101,14)" fg:x="179838" fg:w="80"/><text x="76.6520%" y="175.50"></text></g><g><title>__blk_rq_map_sg (87 samples, 0.04%)</title><rect x="76.4015%" y="181" width="0.0370%" height="15" fill="rgb(238,103,29)" fg:x="179837" fg:w="87"/><text x="76.6515%" y="191.50"></text></g><g><title>dma_direct_map_sg (38 samples, 0.02%)</title><rect x="76.4385%" y="165" width="0.0161%" height="15" fill="rgb(233,195,47)" fg:x="179924" fg:w="38"/><text x="76.6885%" y="175.50"></text></g><g><title>dma_map_sg_attrs (47 samples, 0.02%)</title><rect x="76.4385%" y="181" width="0.0200%" height="15" fill="rgb(246,218,30)" fg:x="179924" fg:w="47"/><text x="76.6885%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (46 samples, 0.02%)</title><rect x="76.4674%" y="181" width="0.0195%" height="15" fill="rgb(219,145,47)" fg:x="179992" fg:w="46"/><text x="76.7174%" y="191.50"></text></g><g><title>nvme_map_data (211 samples, 0.09%)</title><rect x="76.4015%" y="197" width="0.0896%" height="15" fill="rgb(243,12,26)" fg:x="179837" fg:w="211"/><text x="76.6515%" y="207.50"></text></g><g><title>nvme_queue_rq (228 samples, 0.10%)</title><rect x="76.3990%" y="213" width="0.0969%" height="15" fill="rgb(214,87,16)" fg:x="179831" fg:w="228"/><text x="76.6490%" y="223.50"></text></g><g><title>blk_mq_flush_plug_list (238 samples, 0.10%)</title><rect x="76.3952%" y="277" width="0.1011%" height="15" fill="rgb(208,99,42)" fg:x="179822" fg:w="238"/><text x="76.6452%" y="287.50"></text></g><g><title>blk_mq_sched_insert_requests (236 samples, 0.10%)</title><rect x="76.3960%" y="261" width="0.1003%" height="15" fill="rgb(253,99,2)" fg:x="179824" fg:w="236"/><text x="76.6460%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (234 samples, 0.10%)</title><rect x="76.3969%" y="245" width="0.0994%" height="15" fill="rgb(220,168,23)" fg:x="179826" fg:w="234"/><text x="76.6469%" y="255.50"></text></g><g><title>__blk_mq_try_issue_directly (233 samples, 0.10%)</title><rect x="76.3973%" y="229" width="0.0990%" height="15" fill="rgb(242,38,24)" fg:x="179827" fg:w="233"/><text x="76.6473%" y="239.50"></text></g><g><title>blk_mq_submit_bio (458 samples, 0.19%)</title><rect x="76.3021%" y="309" width="0.1946%" height="15" fill="rgb(225,182,9)" fg:x="179603" fg:w="458"/><text x="76.5521%" y="319.50"></text></g><g><title>blk_flush_plug_list (239 samples, 0.10%)</title><rect x="76.3952%" y="293" width="0.1015%" height="15" fill="rgb(243,178,37)" fg:x="179822" fg:w="239"/><text x="76.6452%" y="303.50"></text></g><g><title>submit_bio (503 samples, 0.21%)</title><rect x="76.2936%" y="341" width="0.2137%" height="15" fill="rgb(232,139,19)" fg:x="179583" fg:w="503"/><text x="76.5436%" y="351.50"></text></g><g><title>submit_bio_noacct (498 samples, 0.21%)</title><rect x="76.2958%" y="325" width="0.2116%" height="15" fill="rgb(225,201,24)" fg:x="179588" fg:w="498"/><text x="76.5458%" y="335.50"></text></g><g><title>xas_load (237 samples, 0.10%)</title><rect x="76.5226%" y="325" width="0.1007%" height="15" fill="rgb(221,47,46)" fg:x="180122" fg:w="237"/><text x="76.7726%" y="335.50"></text></g><g><title>xa_load (331 samples, 0.14%)</title><rect x="76.5073%" y="341" width="0.1406%" height="15" fill="rgb(249,23,13)" fg:x="180086" fg:w="331"/><text x="76.7573%" y="351.50"></text></g><g><title>xas_start (58 samples, 0.02%)</title><rect x="76.6233%" y="325" width="0.0246%" height="15" fill="rgb(219,9,5)" fg:x="180359" fg:w="58"/><text x="76.8733%" y="335.50"></text></g><g><title>ext4_mpage_readpages (1,980 samples, 0.84%)</title><rect x="75.8114%" y="357" width="0.8412%" height="15" fill="rgb(254,171,16)" fg:x="178448" fg:w="1980"/><text x="76.0614%" y="367.50"></text></g><g><title>read_pages (2,139 samples, 0.91%)</title><rect x="75.7520%" y="389" width="0.9087%" height="15" fill="rgb(230,171,20)" fg:x="178308" fg:w="2139"/><text x="76.0020%" y="399.50"></text></g><g><title>ext4_readahead (2,006 samples, 0.85%)</title><rect x="75.8085%" y="373" width="0.8522%" height="15" fill="rgb(210,71,41)" fg:x="178441" fg:w="2006"/><text x="76.0585%" y="383.50"></text></g><g><title>xas_load (400 samples, 0.17%)</title><rect x="76.6875%" y="373" width="0.1699%" height="15" fill="rgb(206,173,20)" fg:x="180510" fg:w="400"/><text x="76.9375%" y="383.50"></text></g><g><title>xa_load (515 samples, 0.22%)</title><rect x="76.6641%" y="389" width="0.2188%" height="15" fill="rgb(233,88,34)" fg:x="180455" fg:w="515"/><text x="76.9141%" y="399.50"></text></g><g><title>xas_start (60 samples, 0.03%)</title><rect x="76.8574%" y="373" width="0.0255%" height="15" fill="rgb(223,209,46)" fg:x="180910" fg:w="60"/><text x="77.1074%" y="383.50"></text></g><g><title>page_cache_ra_unbounded (16,748 samples, 7.12%)</title><rect x="69.7753%" y="405" width="7.1152%" height="15" fill="rgb(250,43,18)" fg:x="164240" fg:w="16748"/><text x="70.0253%" y="415.50">page_cache..</text></g><g><title>page_cache_async_ra (16,802 samples, 7.14%)</title><rect x="69.7541%" y="437" width="7.1381%" height="15" fill="rgb(208,13,10)" fg:x="164190" fg:w="16802"/><text x="70.0041%" y="447.50">page_cache..</text></g><g><title>ondemand_readahead (16,792 samples, 7.13%)</title><rect x="69.7584%" y="421" width="7.1339%" height="15" fill="rgb(212,200,36)" fg:x="164200" fg:w="16792"/><text x="70.0084%" y="431.50">ondemand_r..</text></g><g><title>filemap_get_pages (17,866 samples, 7.59%)</title><rect x="69.3042%" y="453" width="7.5902%" height="15" fill="rgb(225,90,30)" fg:x="163131" fg:w="17866"/><text x="69.5542%" y="463.50">filemap_ge..</text></g><g><title>mark_page_accessed (282 samples, 0.12%)</title><rect x="76.8944%" y="453" width="0.1198%" height="15" fill="rgb(236,182,39)" fg:x="180997" fg:w="282"/><text x="77.1444%" y="463.50"></text></g><g><title>filemap_read (50,576 samples, 21.49%)</title><rect x="55.5437%" y="469" width="21.4866%" height="15" fill="rgb(212,144,35)" fg:x="130741" fg:w="50576"/><text x="55.7937%" y="479.50">filemap_read</text></g><g><title>restore_regs_and_return_to_kernel (33 samples, 0.01%)</title><rect x="77.0163%" y="453" width="0.0140%" height="15" fill="rgb(228,63,44)" fg:x="181284" fg:w="33"/><text x="77.2663%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (50,598 samples, 21.50%)</title><rect x="55.5369%" y="597" width="21.4959%" height="15" fill="rgb(228,109,6)" fg:x="130725" fg:w="50598"/><text x="55.7869%" y="607.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (50,598 samples, 21.50%)</title><rect x="55.5369%" y="581" width="21.4959%" height="15" fill="rgb(238,117,24)" fg:x="130725" fg:w="50598"/><text x="55.7869%" y="591.50">do_syscall_64</text></g><g><title>__x64_sys_read (50,598 samples, 21.50%)</title><rect x="55.5369%" y="565" width="21.4959%" height="15" fill="rgb(242,26,26)" fg:x="130725" fg:w="50598"/><text x="55.7869%" y="575.50">__x64_sys_read</text></g><g><title>ksys_read (50,598 samples, 21.50%)</title><rect x="55.5369%" y="549" width="21.4959%" height="15" fill="rgb(221,92,48)" fg:x="130725" fg:w="50598"/><text x="55.7869%" y="559.50">ksys_read</text></g><g><title>vfs_read (50,598 samples, 21.50%)</title><rect x="55.5369%" y="533" width="21.4959%" height="15" fill="rgb(209,209,32)" fg:x="130725" fg:w="50598"/><text x="55.7869%" y="543.50">vfs_read</text></g><g><title>new_sync_read (50,598 samples, 21.50%)</title><rect x="55.5369%" y="517" width="21.4959%" height="15" fill="rgb(221,70,22)" fg:x="130725" fg:w="50598"/><text x="55.7869%" y="527.50">new_sync_read</text></g><g><title>ext4_file_read_iter (50,598 samples, 21.50%)</title><rect x="55.5369%" y="501" width="21.4959%" height="15" fill="rgb(248,145,5)" fg:x="130725" fg:w="50598"/><text x="55.7869%" y="511.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (50,598 samples, 21.50%)</title><rect x="55.5369%" y="485" width="21.4959%" height="15" fill="rgb(226,116,26)" fg:x="130725" fg:w="50598"/><text x="55.7869%" y="495.50">generic_file_read_iter</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (50,618 samples, 21.50%)</title><rect x="55.5361%" y="677" width="21.5044%" height="15" fill="rgb(244,5,17)" fg:x="130723" fg:w="50618"/><text x="55.7861%" y="687.50">&lt;std::io::buffered::bufreader::Buf..</text></g><g><title>std::io::default_read_exact (50,618 samples, 21.50%)</title><rect x="55.5361%" y="661" width="21.5044%" height="15" fill="rgb(252,159,33)" fg:x="130723" fg:w="50618"/><text x="55.7861%" y="671.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (50,618 samples, 21.50%)</title><rect x="55.5361%" y="645" width="21.5044%" height="15" fill="rgb(206,71,0)" fg:x="130723" fg:w="50618"/><text x="55.7861%" y="655.50">&lt;std::io::buffered::bufreader::Buf..</text></g><g><title>std::sys::unix::fd::FileDesc::read (50,618 samples, 21.50%)</title><rect x="55.5361%" y="629" width="21.5044%" height="15" fill="rgb(233,118,54)" fg:x="130723" fg:w="50618"/><text x="55.7861%" y="639.50">std::sys::unix::fd::FileDesc::read</text></g><g><title>__libc_read (50,618 samples, 21.50%)</title><rect x="55.5361%" y="613" width="21.5044%" height="15" fill="rgb(234,83,48)" fg:x="130723" fg:w="50618"/><text x="55.7861%" y="623.50">__libc_read</text></g><g><title>std::panic::catch_unwind (50,652 samples, 21.52%)</title><rect x="55.5361%" y="789" width="21.5189%" height="15" fill="rgb(228,3,54)" fg:x="130723" fg:w="50652"/><text x="55.7861%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (50,652 samples, 21.52%)</title><rect x="55.5361%" y="773" width="21.5189%" height="15" fill="rgb(226,155,13)" fg:x="130723" fg:w="50652"/><text x="55.7861%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (50,652 samples, 21.52%)</title><rect x="55.5361%" y="757" width="21.5189%" height="15" fill="rgb(241,28,37)" fg:x="130723" fg:w="50652"/><text x="55.7861%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50,652 samples, 21.52%)</title><rect x="55.5361%" y="741" width="21.5189%" height="15" fill="rgb(233,93,10)" fg:x="130723" fg:w="50652"/><text x="55.7861%" y="751.50">&lt;core::panic::unwind_safe::AssertU..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (50,652 samples, 21.52%)</title><rect x="55.5361%" y="725" width="21.5189%" height="15" fill="rgb(225,113,19)" fg:x="130723" fg:w="50652"/><text x="55.7861%" y="735.50">std::thread::Builder::spawn_unchec..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50,652 samples, 21.52%)</title><rect x="55.5361%" y="709" width="21.5189%" height="15" fill="rgb(241,2,18)" fg:x="130723" fg:w="50652"/><text x="55.7861%" y="719.50">std::sys_common::backtrace::__rust..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (50,652 samples, 21.52%)</title><rect x="55.5361%" y="693" width="21.5189%" height="15" fill="rgb(228,207,21)" fg:x="130723" fg:w="50652"/><text x="55.7861%" y="703.50">hprof_slurp::prefetch_reader::Pref..</text></g><g><title>__GI___clone (50,653 samples, 21.52%)</title><rect x="55.5361%" y="901" width="21.5193%" height="15" fill="rgb(213,211,35)" fg:x="130723" fg:w="50653"/><text x="55.7861%" y="911.50">__GI___clone</text></g><g><title>start_thread (50,653 samples, 21.52%)</title><rect x="55.5361%" y="885" width="21.5193%" height="15" fill="rgb(209,83,10)" fg:x="130723" fg:w="50653"/><text x="55.7861%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (50,653 samples, 21.52%)</title><rect x="55.5361%" y="869" width="21.5193%" height="15" fill="rgb(209,164,1)" fg:x="130723" fg:w="50653"/><text x="55.7861%" y="879.50">std::sys::unix::thread::Thread::ne..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50,653 samples, 21.52%)</title><rect x="55.5361%" y="853" width="21.5193%" height="15" fill="rgb(213,184,43)" fg:x="130723" fg:w="50653"/><text x="55.7861%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50,653 samples, 21.52%)</title><rect x="55.5361%" y="837" width="21.5193%" height="15" fill="rgb(231,61,34)" fg:x="130723" fg:w="50653"/><text x="55.7861%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::o..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (50,653 samples, 21.52%)</title><rect x="55.5361%" y="821" width="21.5193%" height="15" fill="rgb(235,75,3)" fg:x="130723" fg:w="50653"/><text x="55.7861%" y="831.50">core::ops::function::FnOnce::call_..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (50,653 samples, 21.52%)</title><rect x="55.5361%" y="805" width="21.5193%" height="15" fill="rgb(220,106,47)" fg:x="130723" fg:w="50653"/><text x="55.7861%" y="815.50">std::thread::Builder::spawn_unchec..</text></g><g><title>copy_user_enhanced_fast_string (30 samples, 0.01%)</title><rect x="77.0634%" y="757" width="0.0127%" height="15" fill="rgb(210,196,33)" fg:x="181395" fg:w="30"/><text x="77.3134%" y="767.50"></text></g><g><title>hprof-prefetch (50,720 samples, 21.55%)</title><rect x="55.5356%" y="917" width="21.5478%" height="15" fill="rgb(229,154,42)" fg:x="130722" fg:w="50720"/><text x="55.7856%" y="927.50">hprof-prefetch</text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 0.03%)</title><rect x="77.0558%" y="901" width="0.0276%" height="15" fill="rgb(228,114,26)" fg:x="181377" fg:w="65"/><text x="77.3058%" y="911.50"></text></g><g><title>do_syscall_64 (65 samples, 0.03%)</title><rect x="77.0558%" y="885" width="0.0276%" height="15" fill="rgb(208,144,1)" fg:x="181377" fg:w="65"/><text x="77.3058%" y="895.50"></text></g><g><title>__x64_sys_read (63 samples, 0.03%)</title><rect x="77.0566%" y="869" width="0.0268%" height="15" fill="rgb(239,112,37)" fg:x="181379" fg:w="63"/><text x="77.3066%" y="879.50"></text></g><g><title>ksys_read (63 samples, 0.03%)</title><rect x="77.0566%" y="853" width="0.0268%" height="15" fill="rgb(210,96,50)" fg:x="181379" fg:w="63"/><text x="77.3066%" y="863.50"></text></g><g><title>vfs_read (63 samples, 0.03%)</title><rect x="77.0566%" y="837" width="0.0268%" height="15" fill="rgb(222,178,2)" fg:x="181379" fg:w="63"/><text x="77.3066%" y="847.50"></text></g><g><title>new_sync_read (63 samples, 0.03%)</title><rect x="77.0566%" y="821" width="0.0268%" height="15" fill="rgb(226,74,18)" fg:x="181379" fg:w="63"/><text x="77.3066%" y="831.50"></text></g><g><title>ext4_file_read_iter (63 samples, 0.03%)</title><rect x="77.0566%" y="805" width="0.0268%" height="15" fill="rgb(225,67,54)" fg:x="181379" fg:w="63"/><text x="77.3066%" y="815.50"></text></g><g><title>generic_file_read_iter (63 samples, 0.03%)</title><rect x="77.0566%" y="789" width="0.0268%" height="15" fill="rgb(251,92,32)" fg:x="181379" fg:w="63"/><text x="77.3066%" y="799.50"></text></g><g><title>filemap_read (63 samples, 0.03%)</title><rect x="77.0566%" y="773" width="0.0268%" height="15" fill="rgb(228,149,22)" fg:x="181379" fg:w="63"/><text x="77.3066%" y="783.50"></text></g><g><title>_int_free (36 samples, 0.02%)</title><rect x="77.0838%" y="885" width="0.0153%" height="15" fill="rgb(243,54,13)" fg:x="181443" fg:w="36"/><text x="77.3338%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (601 samples, 0.26%)</title><rect x="77.0991%" y="885" width="0.2553%" height="15" fill="rgb(243,180,28)" fg:x="181479" fg:w="601"/><text x="77.3491%" y="895.50"></text></g><g><title>[anon] (643 samples, 0.27%)</title><rect x="77.0834%" y="901" width="0.2732%" height="15" fill="rgb(208,167,24)" fg:x="181442" fg:w="643"/><text x="77.3334%" y="911.50"></text></g><g><title>_int_free (37 samples, 0.02%)</title><rect x="77.3655%" y="885" width="0.0157%" height="15" fill="rgb(245,73,45)" fg:x="182106" fg:w="37"/><text x="77.6155%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (597 samples, 0.25%)</title><rect x="77.3812%" y="885" width="0.2536%" height="15" fill="rgb(237,203,48)" fg:x="182143" fg:w="597"/><text x="77.6312%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (607 samples, 0.26%)</title><rect x="77.6353%" y="885" width="0.2579%" height="15" fill="rgb(211,197,16)" fg:x="182741" fg:w="607"/><text x="77.8853%" y="895.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (607 samples, 0.26%)</title><rect x="77.6353%" y="869" width="0.2579%" height="15" fill="rgb(243,99,51)" fg:x="182741" fg:w="607"/><text x="77.8853%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (607 samples, 0.26%)</title><rect x="77.6353%" y="853" width="0.2579%" height="15" fill="rgb(215,123,29)" fg:x="182741" fg:w="607"/><text x="77.8853%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (607 samples, 0.26%)</title><rect x="77.6353%" y="837" width="0.2579%" height="15" fill="rgb(239,186,37)" fg:x="182741" fg:w="607"/><text x="77.8853%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (607 samples, 0.26%)</title><rect x="77.6353%" y="821" width="0.2579%" height="15" fill="rgb(252,136,39)" fg:x="182741" fg:w="607"/><text x="77.8853%" y="831.50"></text></g><g><title>[unknown] (1,265 samples, 0.54%)</title><rect x="77.3566%" y="901" width="0.5374%" height="15" fill="rgb(223,213,32)" fg:x="182085" fg:w="1265"/><text x="77.6066%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.03%)</title><rect x="78.1506%" y="629" width="0.0348%" height="15" fill="rgb(233,115,5)" fg:x="183954" fg:w="82"/><text x="78.4006%" y="639.50"></text></g><g><title>__GI___lll_lock_wake_private (24 samples, 0.01%)</title><rect x="78.6532%" y="613" width="0.0102%" height="15" fill="rgb(207,226,44)" fg:x="185137" fg:w="24"/><text x="78.9032%" y="623.50"></text></g><g><title>__GI___munmap (34 samples, 0.01%)</title><rect x="78.6634%" y="613" width="0.0144%" height="15" fill="rgb(208,126,0)" fg:x="185161" fg:w="34"/><text x="78.9134%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.01%)</title><rect x="78.6634%" y="597" width="0.0144%" height="15" fill="rgb(244,66,21)" fg:x="185161" fg:w="34"/><text x="78.9134%" y="607.50"></text></g><g><title>do_syscall_64 (34 samples, 0.01%)</title><rect x="78.6634%" y="581" width="0.0144%" height="15" fill="rgb(222,97,12)" fg:x="185161" fg:w="34"/><text x="78.9134%" y="591.50"></text></g><g><title>__x64_sys_munmap (34 samples, 0.01%)</title><rect x="78.6634%" y="565" width="0.0144%" height="15" fill="rgb(219,213,19)" fg:x="185161" fg:w="34"/><text x="78.9134%" y="575.50"></text></g><g><title>__vm_munmap (34 samples, 0.01%)</title><rect x="78.6634%" y="549" width="0.0144%" height="15" fill="rgb(252,169,30)" fg:x="185161" fg:w="34"/><text x="78.9134%" y="559.50"></text></g><g><title>__do_munmap (34 samples, 0.01%)</title><rect x="78.6634%" y="533" width="0.0144%" height="15" fill="rgb(206,32,51)" fg:x="185161" fg:w="34"/><text x="78.9134%" y="543.50"></text></g><g><title>unmap_region (34 samples, 0.01%)</title><rect x="78.6634%" y="517" width="0.0144%" height="15" fill="rgb(250,172,42)" fg:x="185161" fg:w="34"/><text x="78.9134%" y="527.50"></text></g><g><title>unmap_vmas (31 samples, 0.01%)</title><rect x="78.6647%" y="501" width="0.0132%" height="15" fill="rgb(209,34,43)" fg:x="185164" fg:w="31"/><text x="78.9147%" y="511.50"></text></g><g><title>unmap_single_vma (31 samples, 0.01%)</title><rect x="78.6647%" y="485" width="0.0132%" height="15" fill="rgb(223,11,35)" fg:x="185164" fg:w="31"/><text x="78.9147%" y="495.50"></text></g><g><title>unmap_page_range (31 samples, 0.01%)</title><rect x="78.6647%" y="469" width="0.0132%" height="15" fill="rgb(251,219,26)" fg:x="185164" fg:w="31"/><text x="78.9147%" y="479.50"></text></g><g><title>zap_pmd_range.isra.0 (31 samples, 0.01%)</title><rect x="78.6647%" y="453" width="0.0132%" height="15" fill="rgb(231,119,3)" fg:x="185164" fg:w="31"/><text x="78.9147%" y="463.50"></text></g><g><title>zap_pte_range (31 samples, 0.01%)</title><rect x="78.6647%" y="437" width="0.0132%" height="15" fill="rgb(216,97,11)" fg:x="185164" fg:w="31"/><text x="78.9147%" y="447.50"></text></g><g><title>futex_wait_queue_me (50 samples, 0.02%)</title><rect x="79.3639%" y="501" width="0.0212%" height="15" fill="rgb(223,59,9)" fg:x="186810" fg:w="50"/><text x="79.6139%" y="511.50"></text></g><g><title>schedule (49 samples, 0.02%)</title><rect x="79.3644%" y="485" width="0.0208%" height="15" fill="rgb(233,93,31)" fg:x="186811" fg:w="49"/><text x="79.6144%" y="495.50"></text></g><g><title>__schedule (45 samples, 0.02%)</title><rect x="79.3661%" y="469" width="0.0191%" height="15" fill="rgb(239,81,33)" fg:x="186815" fg:w="45"/><text x="79.6161%" y="479.50"></text></g><g><title>__x64_sys_futex (69 samples, 0.03%)</title><rect x="79.3601%" y="549" width="0.0293%" height="15" fill="rgb(213,120,34)" fg:x="186801" fg:w="69"/><text x="79.6101%" y="559.50"></text></g><g><title>do_futex (69 samples, 0.03%)</title><rect x="79.3601%" y="533" width="0.0293%" height="15" fill="rgb(243,49,53)" fg:x="186801" fg:w="69"/><text x="79.6101%" y="543.50"></text></g><g><title>futex_wait (69 samples, 0.03%)</title><rect x="79.3601%" y="517" width="0.0293%" height="15" fill="rgb(247,216,33)" fg:x="186801" fg:w="69"/><text x="79.6101%" y="527.50"></text></g><g><title>__GI___lll_lock_wait_private (88 samples, 0.04%)</title><rect x="79.3542%" y="597" width="0.0374%" height="15" fill="rgb(226,26,14)" fg:x="186787" fg:w="88"/><text x="79.6042%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (77 samples, 0.03%)</title><rect x="79.3588%" y="581" width="0.0327%" height="15" fill="rgb(215,49,53)" fg:x="186798" fg:w="77"/><text x="79.6088%" y="591.50"></text></g><g><title>do_syscall_64 (75 samples, 0.03%)</title><rect x="79.3597%" y="565" width="0.0319%" height="15" fill="rgb(245,162,40)" fg:x="186800" fg:w="75"/><text x="79.6097%" y="575.50"></text></g><g><title>malloc_consolidate (307 samples, 0.13%)</title><rect x="79.3932%" y="597" width="0.1304%" height="15" fill="rgb(229,68,17)" fg:x="186879" fg:w="307"/><text x="79.6432%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (76 samples, 0.03%)</title><rect x="79.4914%" y="581" width="0.0323%" height="15" fill="rgb(213,182,10)" fg:x="187110" fg:w="76"/><text x="79.7414%" y="591.50"></text></g><g><title>__free (3,175 samples, 1.35%)</title><rect x="78.1854%" y="629" width="1.3489%" height="15" fill="rgb(245,125,30)" fg:x="184036" fg:w="3175"/><text x="78.4354%" y="639.50"></text></g><g><title>_int_free (2,016 samples, 0.86%)</title><rect x="78.6778%" y="613" width="0.8565%" height="15" fill="rgb(232,202,2)" fg:x="185195" fg:w="2016"/><text x="78.9278%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (25 samples, 0.01%)</title><rect x="79.5237%" y="597" width="0.0106%" height="15" fill="rgb(237,140,51)" fg:x="187186" fg:w="25"/><text x="79.7737%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (24 samples, 0.01%)</title><rect x="85.2080%" y="613" width="0.0102%" height="15" fill="rgb(236,157,25)" fg:x="200566" fg:w="24"/><text x="85.4580%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (2,204 samples, 0.94%)</title><rect x="85.2182%" y="613" width="0.9363%" height="15" fill="rgb(219,209,0)" fg:x="200590" fg:w="2204"/><text x="85.4682%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::ArrayValue&gt; (173 samples, 0.07%)</title><rect x="86.0810%" y="597" width="0.0735%" height="15" fill="rgb(240,116,54)" fg:x="202621" fg:w="173"/><text x="86.3310%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (19,447 samples, 8.26%)</title><rect x="77.8940%" y="677" width="8.2618%" height="15" fill="rgb(216,10,36)" fg:x="183350" fg:w="19447"/><text x="78.1440%" y="687.50">alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (19,447 samples, 8.26%)</title><rect x="77.8940%" y="661" width="8.2618%" height="15" fill="rgb(222,72,44)" fg:x="183350" fg:w="19447"/><text x="78.1440%" y="671.50">alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (19,447 samples, 8.26%)</title><rect x="77.8940%" y="645" width="8.2618%" height="15" fill="rgb(232,159,9)" fg:x="183350" fg:w="19447"/><text x="78.1440%" y="655.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (15,545 samples, 6.60%)</title><rect x="79.5517%" y="629" width="6.6041%" height="15" fill="rgb(210,39,32)" fg:x="187252" fg:w="15545"/><text x="79.8017%" y="639.50">core::ptr..</text></g><g><title>__free (27 samples, 0.01%)</title><rect x="86.1558%" y="405" width="0.0115%" height="15" fill="rgb(216,194,45)" fg:x="202797" fg:w="27"/><text x="86.4058%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="86.1558%" y="581" width="0.0119%" height="15" fill="rgb(218,18,35)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (28 samples, 0.01%)</title><rect x="86.1558%" y="565" width="0.0119%" height="15" fill="rgb(207,83,51)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (28 samples, 0.01%)</title><rect x="86.1558%" y="549" width="0.0119%" height="15" fill="rgb(225,63,43)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (28 samples, 0.01%)</title><rect x="86.1558%" y="533" width="0.0119%" height="15" fill="rgb(207,57,36)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (28 samples, 0.01%)</title><rect x="86.1558%" y="517" width="0.0119%" height="15" fill="rgb(216,99,33)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (28 samples, 0.01%)</title><rect x="86.1558%" y="501" width="0.0119%" height="15" fill="rgb(225,42,16)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (28 samples, 0.01%)</title><rect x="86.1558%" y="485" width="0.0119%" height="15" fill="rgb(220,201,45)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (28 samples, 0.01%)</title><rect x="86.1558%" y="469" width="0.0119%" height="15" fill="rgb(225,33,4)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="86.1558%" y="453" width="0.0119%" height="15" fill="rgb(224,33,50)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.01%)</title><rect x="86.1558%" y="437" width="0.0119%" height="15" fill="rgb(246,198,51)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.01%)</title><rect x="86.1558%" y="421" width="0.0119%" height="15" fill="rgb(205,22,4)" fg:x="202797" fg:w="28"/><text x="86.4058%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (29 samples, 0.01%)</title><rect x="86.1558%" y="645" width="0.0123%" height="15" fill="rgb(206,3,8)" fg:x="202797" fg:w="29"/><text x="86.4058%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (29 samples, 0.01%)</title><rect x="86.1558%" y="629" width="0.0123%" height="15" fill="rgb(251,23,15)" fg:x="202797" fg:w="29"/><text x="86.4058%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (29 samples, 0.01%)</title><rect x="86.1558%" y="613" width="0.0123%" height="15" fill="rgb(252,88,28)" fg:x="202797" fg:w="29"/><text x="86.4058%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (29 samples, 0.01%)</title><rect x="86.1558%" y="597" width="0.0123%" height="15" fill="rgb(212,127,14)" fg:x="202797" fg:w="29"/><text x="86.4058%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}&gt; (44 samples, 0.02%)</title><rect x="86.1558%" y="677" width="0.0187%" height="15" fill="rgb(247,145,37)" fg:x="202797" fg:w="44"/><text x="86.4058%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (44 samples, 0.02%)</title><rect x="86.1558%" y="661" width="0.0187%" height="15" fill="rgb(209,117,53)" fg:x="202797" fg:w="44"/><text x="86.4058%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (521 samples, 0.22%)</title><rect x="86.1745%" y="645" width="0.2213%" height="15" fill="rgb(212,90,42)" fg:x="202841" fg:w="521"/><text x="86.4245%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (48 samples, 0.02%)</title><rect x="86.3755%" y="629" width="0.0204%" height="15" fill="rgb(218,164,37)" fg:x="203314" fg:w="48"/><text x="86.6255%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (48 samples, 0.02%)</title><rect x="86.3755%" y="613" width="0.0204%" height="15" fill="rgb(246,65,34)" fg:x="203314" fg:w="48"/><text x="86.6255%" y="623.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (29 samples, 0.01%)</title><rect x="94.1789%" y="629" width="0.0123%" height="15" fill="rgb(231,100,33)" fg:x="221682" fg:w="29"/><text x="94.4289%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (29 samples, 0.01%)</title><rect x="94.1789%" y="613" width="0.0123%" height="15" fill="rgb(228,126,14)" fg:x="221682" fg:w="29"/><text x="94.4289%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (51 samples, 0.02%)</title><rect x="94.1920%" y="629" width="0.0217%" height="15" fill="rgb(215,173,21)" fg:x="221713" fg:w="51"/><text x="94.4420%" y="639.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (1,975 samples, 0.84%)</title><rect x="94.2137%" y="629" width="0.8391%" height="15" fill="rgb(210,6,40)" fg:x="221764" fg:w="1975"/><text x="94.4637%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (954 samples, 0.41%)</title><rect x="95.0532%" y="549" width="0.4053%" height="15" fill="rgb(212,48,18)" fg:x="223740" fg:w="954"/><text x="95.3032%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (688 samples, 0.29%)</title><rect x="95.1662%" y="533" width="0.2923%" height="15" fill="rgb(230,214,11)" fg:x="224006" fg:w="688"/><text x="95.4162%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,500 samples, 0.64%)</title><rect x="95.0532%" y="565" width="0.6373%" height="15" fill="rgb(254,105,39)" fg:x="223740" fg:w="1500"/><text x="95.3032%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (546 samples, 0.23%)</title><rect x="95.4585%" y="549" width="0.2320%" height="15" fill="rgb(245,158,5)" fg:x="224694" fg:w="546"/><text x="95.7085%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,718 samples, 1.15%)</title><rect x="95.0532%" y="597" width="1.1547%" height="15" fill="rgb(249,208,11)" fg:x="223740" fg:w="2718"/><text x="95.3032%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,718 samples, 1.15%)</title><rect x="95.0532%" y="581" width="1.1547%" height="15" fill="rgb(210,39,28)" fg:x="223740" fg:w="2718"/><text x="95.3032%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,218 samples, 0.52%)</title><rect x="95.6904%" y="565" width="0.5175%" height="15" fill="rgb(211,56,53)" fg:x="225240" fg:w="1218"/><text x="95.9404%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1,196 samples, 0.51%)</title><rect x="95.6998%" y="549" width="0.5081%" height="15" fill="rgb(226,201,30)" fg:x="225262" fg:w="1196"/><text x="95.9498%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1,196 samples, 0.51%)</title><rect x="95.6998%" y="533" width="0.5081%" height="15" fill="rgb(239,101,34)" fg:x="225262" fg:w="1196"/><text x="95.9498%" y="543.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1,196 samples, 0.51%)</title><rect x="95.6998%" y="517" width="0.5081%" height="15" fill="rgb(226,209,5)" fg:x="225262" fg:w="1196"/><text x="95.9498%" y="527.50"></text></g><g><title>ahash::operations::folded_multiply (870 samples, 0.37%)</title><rect x="95.8383%" y="501" width="0.3696%" height="15" fill="rgb(250,105,47)" fg:x="225588" fg:w="870"/><text x="96.0883%" y="511.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (664 samples, 0.28%)</title><rect x="95.9258%" y="485" width="0.2821%" height="15" fill="rgb(230,72,3)" fg:x="225794" fg:w="664"/><text x="96.1758%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,456 samples, 0.62%)</title><rect x="96.6871%" y="565" width="0.6186%" height="15" fill="rgb(232,218,39)" fg:x="227586" fg:w="1456"/><text x="96.9371%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,271 samples, 0.54%)</title><rect x="96.7657%" y="549" width="0.5400%" height="15" fill="rgb(248,166,6)" fg:x="227771" fg:w="1271"/><text x="97.0157%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (702 samples, 0.30%)</title><rect x="97.3155%" y="549" width="0.2982%" height="15" fill="rgb(247,89,20)" fg:x="229065" fg:w="702"/><text x="97.5655%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (702 samples, 0.30%)</title><rect x="97.3155%" y="533" width="0.2982%" height="15" fill="rgb(248,130,54)" fg:x="229065" fg:w="702"/><text x="97.5655%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (681 samples, 0.29%)</title><rect x="97.3244%" y="517" width="0.2893%" height="15" fill="rgb(234,196,4)" fg:x="229086" fg:w="681"/><text x="97.5744%" y="527.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (43 samples, 0.02%)</title><rect x="97.6137%" y="533" width="0.0183%" height="15" fill="rgb(250,143,31)" fg:x="229767" fg:w="43"/><text x="97.8637%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,916 samples, 1.24%)</title><rect x="97.3155%" y="565" width="1.2388%" height="15" fill="rgb(211,110,34)" fg:x="229065" fg:w="2916"/><text x="97.5655%" y="575.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2,214 samples, 0.94%)</title><rect x="97.6137%" y="549" width="0.9406%" height="15" fill="rgb(215,124,48)" fg:x="229767" fg:w="2214"/><text x="97.8637%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (2,171 samples, 0.92%)</title><rect x="97.6320%" y="533" width="0.9223%" height="15" fill="rgb(216,46,13)" fg:x="229810" fg:w="2171"/><text x="97.8820%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,481 samples, 0.63%)</title><rect x="98.5543%" y="565" width="0.6292%" height="15" fill="rgb(205,184,25)" fg:x="231981" fg:w="1481"/><text x="98.8043%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (174 samples, 0.07%)</title><rect x="99.1839%" y="565" width="0.0739%" height="15" fill="rgb(228,1,10)" fg:x="233463" fg:w="174"/><text x="99.4339%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (526 samples, 0.22%)</title><rect x="99.2578%" y="565" width="0.2235%" height="15" fill="rgb(213,116,27)" fg:x="233637" fg:w="526"/><text x="99.5078%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (526 samples, 0.22%)</title><rect x="99.2578%" y="549" width="0.2235%" height="15" fill="rgb(241,95,50)" fg:x="233637" fg:w="526"/><text x="99.5078%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (526 samples, 0.22%)</title><rect x="99.2578%" y="533" width="0.2235%" height="15" fill="rgb(238,48,32)" fg:x="233637" fg:w="526"/><text x="99.5078%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (926 samples, 0.39%)</title><rect x="99.4813%" y="565" width="0.3934%" height="15" fill="rgb(235,113,49)" fg:x="234163" fg:w="926"/><text x="99.7313%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (926 samples, 0.39%)</title><rect x="99.4813%" y="549" width="0.3934%" height="15" fill="rgb(205,127,43)" fg:x="234163" fg:w="926"/><text x="99.7313%" y="559.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (32,419 samples, 13.77%)</title><rect x="86.1745%" y="677" width="13.7728%" height="15" fill="rgb(250,162,2)" fg:x="202841" fg:w="32419"/><text x="86.4245%" y="687.50">hprof_slurp::result_r..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (32,419 samples, 13.77%)</title><rect x="86.1745%" y="661" width="13.7728%" height="15" fill="rgb(220,13,41)" fg:x="202841" fg:w="32419"/><text x="86.4245%" y="671.50">&lt;core::slice::iter::I..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (31,898 samples, 13.55%)</title><rect x="86.3958%" y="645" width="13.5515%" height="15" fill="rgb(249,221,25)" fg:x="203362" fg:w="31898"/><text x="86.6458%" y="655.50">hprof_slurp::result_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11,521 samples, 4.89%)</title><rect x="95.0528%" y="629" width="4.8946%" height="15" fill="rgb(215,208,19)" fg:x="223739" fg:w="11521"/><text x="95.3028%" y="639.50">std::c..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11,521 samples, 4.89%)</title><rect x="95.0528%" y="613" width="4.8946%" height="15" fill="rgb(236,175,2)" fg:x="223739" fg:w="11521"/><text x="95.3028%" y="623.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,802 samples, 3.74%)</title><rect x="96.2079%" y="597" width="3.7394%" height="15" fill="rgb(241,52,2)" fg:x="226458" fg:w="8802"/><text x="96.4579%" y="607.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8,802 samples, 3.74%)</title><rect x="96.2079%" y="581" width="3.7394%" height="15" fill="rgb(248,140,14)" fg:x="226458" fg:w="8802"/><text x="96.4579%" y="591.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (171 samples, 0.07%)</title><rect x="99.8747%" y="565" width="0.0726%" height="15" fill="rgb(253,22,42)" fg:x="235089" fg:w="171"/><text x="100.1247%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (171 samples, 0.07%)</title><rect x="99.8747%" y="549" width="0.0726%" height="15" fill="rgb(234,61,47)" fg:x="235089" fg:w="171"/><text x="100.1247%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (171 samples, 0.07%)</title><rect x="99.8747%" y="533" width="0.0726%" height="15" fill="rgb(208,226,15)" fg:x="235089" fg:w="171"/><text x="100.1247%" y="543.50"></text></g><g><title>__GI___clone (51,926 samples, 22.06%)</title><rect x="77.8940%" y="901" width="22.0601%" height="15" fill="rgb(217,221,4)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="911.50">__GI___clone</text></g><g><title>start_thread (51,926 samples, 22.06%)</title><rect x="77.8940%" y="885" width="22.0601%" height="15" fill="rgb(212,174,34)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (51,926 samples, 22.06%)</title><rect x="77.8940%" y="869" width="22.0601%" height="15" fill="rgb(253,83,4)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="879.50">std::sys::unix::thread::Thread::new..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51,926 samples, 22.06%)</title><rect x="77.8940%" y="853" width="22.0601%" height="15" fill="rgb(250,195,49)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::op..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51,926 samples, 22.06%)</title><rect x="77.8940%" y="837" width="22.0601%" height="15" fill="rgb(241,192,25)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::op..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (51,926 samples, 22.06%)</title><rect x="77.8940%" y="821" width="22.0601%" height="15" fill="rgb(208,124,10)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="831.50">core::ops::function::FnOnce::call_o..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (51,926 samples, 22.06%)</title><rect x="77.8940%" y="805" width="22.0601%" height="15" fill="rgb(222,33,0)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="815.50">std::thread::Builder::spawn_uncheck..</text></g><g><title>std::panic::catch_unwind (51,926 samples, 22.06%)</title><rect x="77.8940%" y="789" width="22.0601%" height="15" fill="rgb(234,209,28)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (51,926 samples, 22.06%)</title><rect x="77.8940%" y="773" width="22.0601%" height="15" fill="rgb(224,11,23)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (51,926 samples, 22.06%)</title><rect x="77.8940%" y="757" width="22.0601%" height="15" fill="rgb(232,99,1)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (51,926 samples, 22.06%)</title><rect x="77.8940%" y="741" width="22.0601%" height="15" fill="rgb(237,95,45)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="751.50">&lt;core::panic::unwind_safe::AssertUn..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (51,926 samples, 22.06%)</title><rect x="77.8940%" y="725" width="22.0601%" height="15" fill="rgb(208,109,11)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="735.50">std::thread::Builder::spawn_uncheck..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (51,926 samples, 22.06%)</title><rect x="77.8940%" y="709" width="22.0601%" height="15" fill="rgb(216,190,48)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="719.50">std::sys_common::backtrace::__rust_..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (51,926 samples, 22.06%)</title><rect x="77.8940%" y="693" width="22.0601%" height="15" fill="rgb(251,171,36)" fg:x="183350" fg:w="51926"/><text x="78.1440%" y="703.50">hprof_slurp::result_recorder::Resul..</text></g><g><title>hprof-recorder (53,850 samples, 22.88%)</title><rect x="77.0834%" y="917" width="22.8775%" height="15" fill="rgb(230,62,22)" fg:x="181442" fg:w="53850"/><text x="77.3334%" y="927.50">hprof-recorder</text></g><g><title>indicatif::state::BarState::tick (29 samples, 0.01%)</title><rect x="99.9707%" y="581" width="0.0123%" height="15" fill="rgb(225,114,35)" fg:x="235315" fg:w="29"/><text x="100.2207%" y="591.50"></text></g><g><title>indicatif::state::BarState::draw (29 samples, 0.01%)</title><rect x="99.9707%" y="565" width="0.0123%" height="15" fill="rgb(215,118,42)" fg:x="235315" fg:w="29"/><text x="100.2207%" y="575.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (30 samples, 0.01%)</title><rect x="99.9707%" y="597" width="0.0127%" height="15" fill="rgb(243,119,21)" fg:x="235315" fg:w="30"/><text x="100.2207%" y="607.50"></text></g><g><title>__perf_event_task_sched_in (25 samples, 0.01%)</title><rect x="99.9839%" y="341" width="0.0106%" height="15" fill="rgb(252,177,53)" fg:x="235346" fg:w="25"/><text x="100.2339%" y="351.50"></text></g><g><title>x86_pmu_enable (25 samples, 0.01%)</title><rect x="99.9839%" y="325" width="0.0106%" height="15" fill="rgb(237,209,29)" fg:x="235346" fg:w="25"/><text x="100.2339%" y="335.50"></text></g><g><title>intel_pmu_enable_all (25 samples, 0.01%)</title><rect x="99.9839%" y="309" width="0.0106%" height="15" fill="rgb(212,65,23)" fg:x="235346" fg:w="25"/><text x="100.2339%" y="319.50"></text></g><g><title>native_write_msr (25 samples, 0.01%)</title><rect x="99.9839%" y="293" width="0.0106%" height="15" fill="rgb(230,222,46)" fg:x="235346" fg:w="25"/><text x="100.2339%" y="303.50"></text></g><g><title>finish_task_switch.isra.0 (27 samples, 0.01%)</title><rect x="99.9839%" y="357" width="0.0115%" height="15" fill="rgb(215,135,32)" fg:x="235346" fg:w="27"/><text x="100.2339%" y="367.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (29 samples, 0.01%)</title><rect x="99.9839%" y="565" width="0.0123%" height="15" fill="rgb(246,101,22)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="575.50"></text></g><g><title>std::thread::park (29 samples, 0.01%)</title><rect x="99.9839%" y="549" width="0.0123%" height="15" fill="rgb(206,107,13)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="559.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (29 samples, 0.01%)</title><rect x="99.9839%" y="533" width="0.0123%" height="15" fill="rgb(250,100,44)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (29 samples, 0.01%)</title><rect x="99.9839%" y="517" width="0.0123%" height="15" fill="rgb(231,147,38)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="527.50"></text></g><g><title>syscall (29 samples, 0.01%)</title><rect x="99.9839%" y="501" width="0.0123%" height="15" fill="rgb(229,8,40)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.01%)</title><rect x="99.9839%" y="485" width="0.0123%" height="15" fill="rgb(221,135,30)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="495.50"></text></g><g><title>do_syscall_64 (29 samples, 0.01%)</title><rect x="99.9839%" y="469" width="0.0123%" height="15" fill="rgb(249,193,18)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="479.50"></text></g><g><title>__x64_sys_futex (29 samples, 0.01%)</title><rect x="99.9839%" y="453" width="0.0123%" height="15" fill="rgb(209,133,39)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="463.50"></text></g><g><title>do_futex (29 samples, 0.01%)</title><rect x="99.9839%" y="437" width="0.0123%" height="15" fill="rgb(232,100,14)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="447.50"></text></g><g><title>futex_wait (29 samples, 0.01%)</title><rect x="99.9839%" y="421" width="0.0123%" height="15" fill="rgb(224,185,1)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="431.50"></text></g><g><title>futex_wait_queue_me (29 samples, 0.01%)</title><rect x="99.9839%" y="405" width="0.0123%" height="15" fill="rgb(223,139,8)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="415.50"></text></g><g><title>schedule (29 samples, 0.01%)</title><rect x="99.9839%" y="389" width="0.0123%" height="15" fill="rgb(232,213,38)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="399.50"></text></g><g><title>__schedule (29 samples, 0.01%)</title><rect x="99.9839%" y="373" width="0.0123%" height="15" fill="rgb(207,94,22)" fg:x="235346" fg:w="29"/><text x="100.2339%" y="383.50"></text></g><g><title>_start (61 samples, 0.03%)</title><rect x="99.9707%" y="901" width="0.0259%" height="15" fill="rgb(219,183,54)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="911.50"></text></g><g><title>__libc_start_main_alias_2 (61 samples, 0.03%)</title><rect x="99.9707%" y="885" width="0.0259%" height="15" fill="rgb(216,185,54)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="895.50"></text></g><g><title>__libc_start_call_main (61 samples, 0.03%)</title><rect x="99.9707%" y="869" width="0.0259%" height="15" fill="rgb(254,217,39)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="879.50"></text></g><g><title>main (61 samples, 0.03%)</title><rect x="99.9707%" y="853" width="0.0259%" height="15" fill="rgb(240,178,23)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (61 samples, 0.03%)</title><rect x="99.9707%" y="837" width="0.0259%" height="15" fill="rgb(218,11,47)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="847.50"></text></g><g><title>std::panic::catch_unwind (61 samples, 0.03%)</title><rect x="99.9707%" y="821" width="0.0259%" height="15" fill="rgb(218,51,51)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="831.50"></text></g><g><title>std::panicking::try (61 samples, 0.03%)</title><rect x="99.9707%" y="805" width="0.0259%" height="15" fill="rgb(238,126,27)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="815.50"></text></g><g><title>std::panicking::try::do_call (61 samples, 0.03%)</title><rect x="99.9707%" y="789" width="0.0259%" height="15" fill="rgb(249,202,22)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (61 samples, 0.03%)</title><rect x="99.9707%" y="773" width="0.0259%" height="15" fill="rgb(254,195,49)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="783.50"></text></g><g><title>std::panic::catch_unwind (61 samples, 0.03%)</title><rect x="99.9707%" y="757" width="0.0259%" height="15" fill="rgb(208,123,14)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="767.50"></text></g><g><title>std::panicking::try (61 samples, 0.03%)</title><rect x="99.9707%" y="741" width="0.0259%" height="15" fill="rgb(224,200,8)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="751.50"></text></g><g><title>std::panicking::try::do_call (61 samples, 0.03%)</title><rect x="99.9707%" y="725" width="0.0259%" height="15" fill="rgb(217,61,36)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (61 samples, 0.03%)</title><rect x="99.9707%" y="709" width="0.0259%" height="15" fill="rgb(206,35,45)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (61 samples, 0.03%)</title><rect x="99.9707%" y="693" width="0.0259%" height="15" fill="rgb(217,65,33)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (61 samples, 0.03%)</title><rect x="99.9707%" y="677" width="0.0259%" height="15" fill="rgb(222,158,48)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (61 samples, 0.03%)</title><rect x="99.9707%" y="661" width="0.0259%" height="15" fill="rgb(254,2,54)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="671.50"></text></g><g><title>hprof_slurp::main (61 samples, 0.03%)</title><rect x="99.9707%" y="645" width="0.0259%" height="15" fill="rgb(250,143,38)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="655.50"></text></g><g><title>hprof_slurp::main_result (61 samples, 0.03%)</title><rect x="99.9707%" y="629" width="0.0259%" height="15" fill="rgb(248,25,0)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="639.50"></text></g><g><title>hprof_slurp::slurp::slurp_file (61 samples, 0.03%)</title><rect x="99.9707%" y="613" width="0.0259%" height="15" fill="rgb(206,152,27)" fg:x="235315" fg:w="61"/><text x="100.2207%" y="623.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (31 samples, 0.01%)</title><rect x="99.9834%" y="597" width="0.0132%" height="15" fill="rgb(240,77,30)" fg:x="235345" fg:w="31"/><text x="100.2334%" y="607.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (30 samples, 0.01%)</title><rect x="99.9839%" y="581" width="0.0127%" height="15" fill="rgb(231,5,3)" fg:x="235346" fg:w="30"/><text x="100.2339%" y="591.50"></text></g><g><title>hprof-slurp (87 samples, 0.04%)</title><rect x="99.9609%" y="917" width="0.0370%" height="15" fill="rgb(207,226,32)" fg:x="235292" fg:w="87"/><text x="100.2109%" y="927.50"></text></g><g><title>all (235,384 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(222,207,47)" fg:x="0" fg:w="235384"/><text x="0.2500%" y="943.50"></text></g></svg></svg>