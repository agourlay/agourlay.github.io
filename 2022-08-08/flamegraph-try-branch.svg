<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="159834"><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,204 samples, 0.75%)</title><rect x="0.0000%" y="885" width="0.7533%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1204"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (348 samples, 0.22%)</title><rect x="0.7533%" y="885" width="0.2177%" height="15" fill="rgb(217,0,24)" fg:x="1204" fg:w="348"/><text x="1.0033%" y="895.50"></text></g><g><title>[anon] (1,864 samples, 1.17%)</title><rect x="0.0000%" y="901" width="1.1662%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1864"/><text x="0.2500%" y="911.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (307 samples, 0.19%)</title><rect x="0.9741%" y="885" width="0.1921%" height="15" fill="rgb(248,212,6)" fg:x="1557" fg:w="307"/><text x="1.2241%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (306 samples, 0.19%)</title><rect x="0.9748%" y="869" width="0.1914%" height="15" fill="rgb(208,68,35)" fg:x="1558" fg:w="306"/><text x="1.2248%" y="879.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,353 samples, 0.85%)</title><rect x="1.1662%" y="885" width="0.8465%" height="15" fill="rgb(232,128,0)" fg:x="1864" fg:w="1353"/><text x="1.4162%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20 samples, 0.01%)</title><rect x="2.0002%" y="869" width="0.0125%" height="15" fill="rgb(207,160,47)" fg:x="3197" fg:w="20"/><text x="2.2502%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (20 samples, 0.01%)</title><rect x="2.0002%" y="853" width="0.0125%" height="15" fill="rgb(228,23,34)" fg:x="3197" fg:w="20"/><text x="2.2502%" y="863.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (20 samples, 0.01%)</title><rect x="2.0002%" y="837" width="0.0125%" height="15" fill="rgb(218,30,26)" fg:x="3197" fg:w="20"/><text x="2.2502%" y="847.50"></text></g><g><title>nom::combinator::map::{{closure}} (20 samples, 0.01%)</title><rect x="2.0002%" y="821" width="0.0125%" height="15" fill="rgb(220,122,19)" fg:x="3197" fg:w="20"/><text x="2.2502%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (19 samples, 0.01%)</title><rect x="2.0008%" y="805" width="0.0119%" height="15" fill="rgb(250,228,42)" fg:x="3198" fg:w="19"/><text x="2.2508%" y="815.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (58 samples, 0.04%)</title><rect x="2.5276%" y="837" width="0.0363%" height="15" fill="rgb(240,193,28)" fg:x="4040" fg:w="58"/><text x="2.7776%" y="847.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (58 samples, 0.04%)</title><rect x="2.5276%" y="821" width="0.0363%" height="15" fill="rgb(216,20,37)" fg:x="4040" fg:w="58"/><text x="2.7776%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (58 samples, 0.04%)</title><rect x="2.5276%" y="805" width="0.0363%" height="15" fill="rgb(206,188,39)" fg:x="4040" fg:w="58"/><text x="2.7776%" y="815.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (58 samples, 0.04%)</title><rect x="2.5276%" y="789" width="0.0363%" height="15" fill="rgb(217,207,13)" fg:x="4040" fg:w="58"/><text x="2.7776%" y="799.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (70 samples, 0.04%)</title><rect x="2.5276%" y="869" width="0.0438%" height="15" fill="rgb(231,73,38)" fg:x="4040" fg:w="70"/><text x="2.7776%" y="879.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (70 samples, 0.04%)</title><rect x="2.5276%" y="853" width="0.0438%" height="15" fill="rgb(225,20,46)" fg:x="4040" fg:w="70"/><text x="2.7776%" y="863.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (894 samples, 0.56%)</title><rect x="2.0127%" y="885" width="0.5593%" height="15" fill="rgb(210,31,41)" fg:x="3217" fg:w="894"/><text x="2.2627%" y="895.50"></text></g><g><title>[unknown] (2,249 samples, 1.41%)</title><rect x="1.1662%" y="901" width="1.4071%" height="15" fill="rgb(221,200,47)" fg:x="1864" fg:w="2249"/><text x="1.4162%" y="911.50"></text></g><g><title>__mem_cgroup_charge (18 samples, 0.01%)</title><rect x="7.0886%" y="501" width="0.0113%" height="15" fill="rgb(226,26,5)" fg:x="11330" fg:w="18"/><text x="7.3386%" y="511.50"></text></g><g><title>clear_page_erms (26 samples, 0.02%)</title><rect x="7.1042%" y="453" width="0.0163%" height="15" fill="rgb(249,33,26)" fg:x="11355" fg:w="26"/><text x="7.3542%" y="463.50"></text></g><g><title>alloc_pages_vma (42 samples, 0.03%)</title><rect x="7.1005%" y="501" width="0.0263%" height="15" fill="rgb(235,183,28)" fg:x="11349" fg:w="42"/><text x="7.3505%" y="511.50"></text></g><g><title>__alloc_pages (42 samples, 0.03%)</title><rect x="7.1005%" y="485" width="0.0263%" height="15" fill="rgb(221,5,38)" fg:x="11349" fg:w="42"/><text x="7.3505%" y="495.50"></text></g><g><title>get_page_from_freelist (39 samples, 0.02%)</title><rect x="7.1024%" y="469" width="0.0244%" height="15" fill="rgb(247,18,42)" fg:x="11352" fg:w="39"/><text x="7.3524%" y="479.50"></text></g><g><title>do_anonymous_page (85 samples, 0.05%)</title><rect x="7.0855%" y="517" width="0.0532%" height="15" fill="rgb(241,131,45)" fg:x="11325" fg:w="85"/><text x="7.3355%" y="527.50"></text></g><g><title>handle_pte_fault (88 samples, 0.06%)</title><rect x="7.0842%" y="533" width="0.0551%" height="15" fill="rgb(249,31,29)" fg:x="11323" fg:w="88"/><text x="7.3342%" y="543.50"></text></g><g><title>handle_mm_fault (95 samples, 0.06%)</title><rect x="7.0805%" y="565" width="0.0594%" height="15" fill="rgb(225,111,53)" fg:x="11317" fg:w="95"/><text x="7.3305%" y="575.50"></text></g><g><title>__handle_mm_fault (90 samples, 0.06%)</title><rect x="7.0836%" y="549" width="0.0563%" height="15" fill="rgb(238,160,17)" fg:x="11322" fg:w="90"/><text x="7.3336%" y="559.50"></text></g><g><title>do_user_addr_fault (98 samples, 0.06%)</title><rect x="7.0792%" y="581" width="0.0613%" height="15" fill="rgb(214,148,48)" fg:x="11315" fg:w="98"/><text x="7.3292%" y="591.50"></text></g><g><title>asm_exc_page_fault (103 samples, 0.06%)</title><rect x="7.0780%" y="613" width="0.0644%" height="15" fill="rgb(232,36,49)" fg:x="11313" fg:w="103"/><text x="7.3280%" y="623.50"></text></g><g><title>exc_page_fault (103 samples, 0.06%)</title><rect x="7.0780%" y="597" width="0.0644%" height="15" fill="rgb(209,103,24)" fg:x="11313" fg:w="103"/><text x="7.3280%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (18 samples, 0.01%)</title><rect x="7.1424%" y="613" width="0.0113%" height="15" fill="rgb(229,88,8)" fg:x="11416" fg:w="18"/><text x="7.3924%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (18 samples, 0.01%)</title><rect x="7.1424%" y="597" width="0.0113%" height="15" fill="rgb(213,181,19)" fg:x="11416" fg:w="18"/><text x="7.3924%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (7,334 samples, 4.59%)</title><rect x="2.5739%" y="677" width="4.5885%" height="15" fill="rgb(254,191,54)" fg:x="4114" fg:w="7334"/><text x="2.8239%" y="687.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,334 samples, 4.59%)</title><rect x="2.5739%" y="661" width="4.5885%" height="15" fill="rgb(241,83,37)" fg:x="4114" fg:w="7334"/><text x="2.8239%" y="671.50">alloc..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,329 samples, 4.59%)</title><rect x="2.5770%" y="645" width="4.5854%" height="15" fill="rgb(233,36,39)" fg:x="4119" fg:w="7329"/><text x="2.8270%" y="655.50">core:..</text></g><g><title>__memcpy_avx_unaligned_erms (7,329 samples, 4.59%)</title><rect x="2.5770%" y="629" width="4.5854%" height="15" fill="rgb(226,3,54)" fg:x="4119" fg:w="7329"/><text x="2.8270%" y="639.50">__mem..</text></g><g><title>free_pages_and_swap_cache (18 samples, 0.01%)</title><rect x="7.1718%" y="357" width="0.0113%" height="15" fill="rgb(245,192,40)" fg:x="11463" fg:w="18"/><text x="7.4218%" y="367.50"></text></g><g><title>release_pages (18 samples, 0.01%)</title><rect x="7.1718%" y="341" width="0.0113%" height="15" fill="rgb(238,167,29)" fg:x="11463" fg:w="18"/><text x="7.4218%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to (34 samples, 0.02%)</title><rect x="7.1624%" y="677" width="0.0213%" height="15" fill="rgb(232,182,51)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (34 samples, 0.02%)</title><rect x="7.1624%" y="661" width="0.0213%" height="15" fill="rgb(231,60,39)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (34 samples, 0.02%)</title><rect x="7.1624%" y="645" width="0.0213%" height="15" fill="rgb(208,69,12)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (34 samples, 0.02%)</title><rect x="7.1624%" y="629" width="0.0213%" height="15" fill="rgb(235,93,37)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="639.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.02%)</title><rect x="7.1624%" y="613" width="0.0213%" height="15" fill="rgb(213,116,39)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="623.50"></text></g><g><title>__GI___libc_realloc (34 samples, 0.02%)</title><rect x="7.1624%" y="597" width="0.0213%" height="15" fill="rgb(222,207,29)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="607.50"></text></g><g><title>mremap_chunk (34 samples, 0.02%)</title><rect x="7.1624%" y="581" width="0.0213%" height="15" fill="rgb(206,96,30)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="591.50"></text></g><g><title>__GI___mremap (34 samples, 0.02%)</title><rect x="7.1624%" y="565" width="0.0213%" height="15" fill="rgb(218,138,4)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.02%)</title><rect x="7.1624%" y="549" width="0.0213%" height="15" fill="rgb(250,191,14)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="559.50"></text></g><g><title>do_syscall_64 (34 samples, 0.02%)</title><rect x="7.1624%" y="533" width="0.0213%" height="15" fill="rgb(239,60,40)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="543.50"></text></g><g><title>__x64_sys_mremap (34 samples, 0.02%)</title><rect x="7.1624%" y="517" width="0.0213%" height="15" fill="rgb(206,27,48)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="527.50"></text></g><g><title>__do_sys_mremap (34 samples, 0.02%)</title><rect x="7.1624%" y="501" width="0.0213%" height="15" fill="rgb(225,35,8)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="511.50"></text></g><g><title>__do_munmap (34 samples, 0.02%)</title><rect x="7.1624%" y="485" width="0.0213%" height="15" fill="rgb(250,213,24)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="495.50"></text></g><g><title>unmap_region (34 samples, 0.02%)</title><rect x="7.1624%" y="469" width="0.0213%" height="15" fill="rgb(247,123,22)" fg:x="11448" fg:w="34"/><text x="7.4124%" y="479.50"></text></g><g><title>unmap_vmas (33 samples, 0.02%)</title><rect x="7.1631%" y="453" width="0.0206%" height="15" fill="rgb(231,138,38)" fg:x="11449" fg:w="33"/><text x="7.4131%" y="463.50"></text></g><g><title>unmap_single_vma (33 samples, 0.02%)</title><rect x="7.1631%" y="437" width="0.0206%" height="15" fill="rgb(231,145,46)" fg:x="11449" fg:w="33"/><text x="7.4131%" y="447.50"></text></g><g><title>unmap_page_range (33 samples, 0.02%)</title><rect x="7.1631%" y="421" width="0.0206%" height="15" fill="rgb(251,118,11)" fg:x="11449" fg:w="33"/><text x="7.4131%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (33 samples, 0.02%)</title><rect x="7.1631%" y="405" width="0.0206%" height="15" fill="rgb(217,147,25)" fg:x="11449" fg:w="33"/><text x="7.4131%" y="415.50"></text></g><g><title>zap_pte_range (33 samples, 0.02%)</title><rect x="7.1631%" y="389" width="0.0206%" height="15" fill="rgb(247,81,37)" fg:x="11449" fg:w="33"/><text x="7.4131%" y="399.50"></text></g><g><title>tlb_flush_mmu (19 samples, 0.01%)</title><rect x="7.1718%" y="373" width="0.0119%" height="15" fill="rgb(209,12,38)" fg:x="11463" fg:w="19"/><text x="7.4218%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}&gt; (22 samples, 0.01%)</title><rect x="7.1862%" y="677" width="0.0138%" height="15" fill="rgb(227,1,9)" fg:x="11486" fg:w="22"/><text x="7.4362%" y="687.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (17 samples, 0.01%)</title><rect x="7.2069%" y="677" width="0.0106%" height="15" fill="rgb(248,47,43)" fg:x="11519" fg:w="17"/><text x="7.4569%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (17 samples, 0.01%)</title><rect x="7.2069%" y="661" width="0.0106%" height="15" fill="rgb(221,10,30)" fg:x="11519" fg:w="17"/><text x="7.4569%" y="671.50"></text></g><g><title>__hrtimer_run_queues (18 samples, 0.01%)</title><rect x="40.2568%" y="533" width="0.0113%" height="15" fill="rgb(210,229,1)" fg:x="64344" fg:w="18"/><text x="40.5068%" y="543.50"></text></g><g><title>__sysvec_apic_timer_interrupt (20 samples, 0.01%)</title><rect x="40.2561%" y="565" width="0.0125%" height="15" fill="rgb(222,148,37)" fg:x="64343" fg:w="20"/><text x="40.5061%" y="575.50"></text></g><g><title>hrtimer_interrupt (20 samples, 0.01%)</title><rect x="40.2561%" y="549" width="0.0125%" height="15" fill="rgb(234,67,33)" fg:x="64343" fg:w="20"/><text x="40.5061%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (22 samples, 0.01%)</title><rect x="40.2561%" y="597" width="0.0138%" height="15" fill="rgb(247,98,35)" fg:x="64343" fg:w="22"/><text x="40.5061%" y="607.50"></text></g><g><title>sysvec_apic_timer_interrupt (22 samples, 0.01%)</title><rect x="40.2561%" y="581" width="0.0138%" height="15" fill="rgb(247,138,52)" fg:x="64343" fg:w="22"/><text x="40.5061%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12,752 samples, 7.98%)</title><rect x="32.2929%" y="613" width="7.9783%" height="15" fill="rgb(213,79,30)" fg:x="51615" fg:w="12752"/><text x="32.5429%" y="623.50">&lt;core::resu..</text></g><g><title>tick_sched_handle (26 samples, 0.02%)</title><rect x="40.2849%" y="517" width="0.0163%" height="15" fill="rgb(246,177,23)" fg:x="64389" fg:w="26"/><text x="40.5349%" y="527.50"></text></g><g><title>update_process_times (23 samples, 0.01%)</title><rect x="40.2868%" y="501" width="0.0144%" height="15" fill="rgb(230,62,27)" fg:x="64392" fg:w="23"/><text x="40.5368%" y="511.50"></text></g><g><title>tick_sched_timer (42 samples, 0.03%)</title><rect x="40.2768%" y="533" width="0.0263%" height="15" fill="rgb(216,154,8)" fg:x="64376" fg:w="42"/><text x="40.5268%" y="543.50"></text></g><g><title>__hrtimer_run_queues (48 samples, 0.03%)</title><rect x="40.2737%" y="549" width="0.0300%" height="15" fill="rgb(244,35,45)" fg:x="64371" fg:w="48"/><text x="40.5237%" y="559.50"></text></g><g><title>__sysvec_apic_timer_interrupt (54 samples, 0.03%)</title><rect x="40.2724%" y="581" width="0.0338%" height="15" fill="rgb(251,115,12)" fg:x="64369" fg:w="54"/><text x="40.5224%" y="591.50"></text></g><g><title>hrtimer_interrupt (52 samples, 0.03%)</title><rect x="40.2737%" y="565" width="0.0325%" height="15" fill="rgb(240,54,50)" fg:x="64371" fg:w="52"/><text x="40.5237%" y="575.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (62 samples, 0.04%)</title><rect x="40.2724%" y="613" width="0.0388%" height="15" fill="rgb(233,84,52)" fg:x="64369" fg:w="62"/><text x="40.5224%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (62 samples, 0.04%)</title><rect x="40.2724%" y="597" width="0.0388%" height="15" fill="rgb(207,117,47)" fg:x="64369" fg:w="62"/><text x="40.5224%" y="607.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (1,698 samples, 1.06%)</title><rect x="41.6025%" y="597" width="1.0624%" height="15" fill="rgb(249,43,39)" fg:x="66495" fg:w="1698"/><text x="41.8525%" y="607.50"></text></g><g><title>nom::number::streaming::be_u8 (1,698 samples, 1.06%)</title><rect x="41.6025%" y="581" width="1.0624%" height="15" fill="rgb(209,38,44)" fg:x="66495" fg:w="1698"/><text x="41.8525%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,110 samples, 0.69%)</title><rect x="41.9704%" y="565" width="0.6945%" height="15" fill="rgb(236,212,23)" fg:x="67083" fg:w="1110"/><text x="42.2204%" y="575.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,110 samples, 0.69%)</title><rect x="41.9704%" y="549" width="0.6945%" height="15" fill="rgb(242,79,21)" fg:x="67083" fg:w="1110"/><text x="42.2204%" y="559.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (627 samples, 0.39%)</title><rect x="47.9723%" y="501" width="0.3923%" height="15" fill="rgb(211,96,35)" fg:x="76676" fg:w="627"/><text x="48.2223%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (629 samples, 0.39%)</title><rect x="47.9723%" y="533" width="0.3935%" height="15" fill="rgb(253,215,40)" fg:x="76676" fg:w="629"/><text x="48.2223%" y="543.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (629 samples, 0.39%)</title><rect x="47.9723%" y="517" width="0.3935%" height="15" fill="rgb(211,81,21)" fg:x="76676" fg:w="629"/><text x="48.2223%" y="527.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,824 samples, 1.14%)</title><rect x="47.2265%" y="549" width="1.1412%" height="15" fill="rgb(208,190,38)" fg:x="75484" fg:w="1824"/><text x="47.4765%" y="559.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (1,595 samples, 1.00%)</title><rect x="50.1251%" y="485" width="0.9979%" height="15" fill="rgb(235,213,38)" fg:x="80117" fg:w="1595"/><text x="50.3751%" y="495.50"></text></g><g><title>nom::number::streaming::be_u32 (1,595 samples, 1.00%)</title><rect x="50.1251%" y="469" width="0.9979%" height="15" fill="rgb(237,122,38)" fg:x="80117" fg:w="1595"/><text x="50.3751%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,574 samples, 3.49%)</title><rect x="50.1251%" y="517" width="3.4874%" height="15" fill="rgb(244,218,35)" fg:x="80117" fg:w="5574"/><text x="50.3751%" y="527.50">&lt;F ..</text></g><g><title>core::ops::function::FnMut::call_mut (5,574 samples, 3.49%)</title><rect x="50.1251%" y="501" width="3.4874%" height="15" fill="rgb(240,68,47)" fg:x="80117" fg:w="5574"/><text x="50.3751%" y="511.50">cor..</text></g><g><title>hprof_slurp::parser::record_parser::parse_id (3,979 samples, 2.49%)</title><rect x="51.1230%" y="485" width="2.4895%" height="15" fill="rgb(210,16,53)" fg:x="81712" fg:w="3979"/><text x="51.3730%" y="495.50">hp..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (3,979 samples, 2.49%)</title><rect x="51.1230%" y="469" width="2.4895%" height="15" fill="rgb(235,124,12)" fg:x="81712" fg:w="3979"/><text x="51.3730%" y="479.50">hp..</text></g><g><title>nom::number::streaming::be_u64 (3,979 samples, 2.49%)</title><rect x="51.1230%" y="453" width="2.4895%" height="15" fill="rgb(224,169,11)" fg:x="81712" fg:w="3979"/><text x="51.3730%" y="463.50">no..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (8,383 samples, 5.24%)</title><rect x="48.3739%" y="533" width="5.2448%" height="15" fill="rgb(250,166,2)" fg:x="77318" fg:w="8383"/><text x="48.6239%" y="543.50">&lt;(FnA,..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10,219 samples, 6.39%)</title><rect x="47.2265%" y="565" width="6.3935%" height="15" fill="rgb(242,216,29)" fg:x="75484" fg:w="10219"/><text x="47.4765%" y="575.50">&lt;F as no..</text></g><g><title>nom::sequence::tuple::{{closure}} (8,395 samples, 5.25%)</title><rect x="48.3677%" y="549" width="5.2523%" height="15" fill="rgb(230,116,27)" fg:x="77308" fg:w="8395"/><text x="48.6177%" y="559.50">nom::s..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (735 samples, 0.46%)</title><rect x="53.6200%" y="565" width="0.4599%" height="15" fill="rgb(228,99,48)" fg:x="85703" fg:w="735"/><text x="53.8700%" y="575.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (16 samples, 0.01%)</title><rect x="54.0799%" y="565" width="0.0100%" height="15" fill="rgb(253,11,6)" fg:x="86438" fg:w="16"/><text x="54.3299%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (16 samples, 0.01%)</title><rect x="54.0799%" y="549" width="0.0100%" height="15" fill="rgb(247,143,39)" fg:x="86438" fg:w="16"/><text x="54.3299%" y="559.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (18,257 samples, 11.42%)</title><rect x="42.6680%" y="597" width="11.4225%" height="15" fill="rgb(236,97,10)" fg:x="68198" fg:w="18257"/><text x="42.9180%" y="607.50">hprof_slurp::pars..</text></g><g><title>nom::combinator::flat_map::{{closure}} (18,257 samples, 11.42%)</title><rect x="42.6680%" y="581" width="11.4225%" height="15" fill="rgb(233,208,19)" fg:x="68198" fg:w="18257"/><text x="42.9180%" y="591.50">nom::combinator::..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (16 samples, 0.01%)</title><rect x="54.1118%" y="485" width="0.0100%" height="15" fill="rgb(216,164,2)" fg:x="86489" fg:w="16"/><text x="54.3618%" y="495.50"></text></g><g><title>nom::number::streaming::be_u32 (16 samples, 0.01%)</title><rect x="54.1118%" y="469" width="0.0100%" height="15" fill="rgb(220,129,5)" fg:x="86489" fg:w="16"/><text x="54.3618%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (62 samples, 0.04%)</title><rect x="54.0917%" y="565" width="0.0388%" height="15" fill="rgb(242,17,10)" fg:x="86457" fg:w="62"/><text x="54.3417%" y="575.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (47 samples, 0.03%)</title><rect x="54.1011%" y="549" width="0.0294%" height="15" fill="rgb(242,107,0)" fg:x="86472" fg:w="47"/><text x="54.3511%" y="559.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (47 samples, 0.03%)</title><rect x="54.1011%" y="533" width="0.0294%" height="15" fill="rgb(251,28,31)" fg:x="86472" fg:w="47"/><text x="54.3511%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (30 samples, 0.02%)</title><rect x="54.1118%" y="517" width="0.0188%" height="15" fill="rgb(233,223,10)" fg:x="86489" fg:w="30"/><text x="54.3618%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (30 samples, 0.02%)</title><rect x="54.1118%" y="501" width="0.0188%" height="15" fill="rgb(215,21,27)" fg:x="86489" fg:w="30"/><text x="54.3618%" y="511.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (77 samples, 0.05%)</title><rect x="54.0905%" y="597" width="0.0482%" height="15" fill="rgb(232,23,21)" fg:x="86455" fg:w="77"/><text x="54.3405%" y="607.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (77 samples, 0.05%)</title><rect x="54.0905%" y="581" width="0.0482%" height="15" fill="rgb(244,5,23)" fg:x="86455" fg:w="77"/><text x="54.3405%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (68 samples, 0.04%)</title><rect x="54.1800%" y="533" width="0.0425%" height="15" fill="rgb(226,81,46)" fg:x="86598" fg:w="68"/><text x="54.4300%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::skip_array_value::{{closure}} (58 samples, 0.04%)</title><rect x="54.1862%" y="517" width="0.0363%" height="15" fill="rgb(247,70,30)" fg:x="86608" fg:w="58"/><text x="54.4362%" y="527.50"></text></g><g><title>nom::combinator::map::{{closure}} (230 samples, 0.14%)</title><rect x="54.1474%" y="549" width="0.1439%" height="15" fill="rgb(212,68,19)" fg:x="86546" fg:w="230"/><text x="54.3974%" y="559.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump::{{closure}}::{{closure}} (98 samples, 0.06%)</title><rect x="54.2300%" y="533" width="0.0613%" height="15" fill="rgb(240,187,13)" fg:x="86678" fg:w="98"/><text x="54.4800%" y="543.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (95 samples, 0.06%)</title><rect x="54.3426%" y="485" width="0.0594%" height="15" fill="rgb(223,113,26)" fg:x="86858" fg:w="95"/><text x="54.5926%" y="495.50"></text></g><g><title>nom::number::streaming::be_u32 (95 samples, 0.06%)</title><rect x="54.3426%" y="469" width="0.0594%" height="15" fill="rgb(206,192,2)" fg:x="86858" fg:w="95"/><text x="54.5926%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="54.3871%" y="453" width="0.0150%" height="15" fill="rgb(241,108,4)" fg:x="86929" fg:w="24"/><text x="54.6371%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="54.3871%" y="437" width="0.0150%" height="15" fill="rgb(247,173,49)" fg:x="86929" fg:w="24"/><text x="54.6371%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (24 samples, 0.02%)</title><rect x="54.3871%" y="421" width="0.0150%" height="15" fill="rgb(224,114,35)" fg:x="86929" fg:w="24"/><text x="54.6371%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 0.02%)</title><rect x="54.4021%" y="357" width="0.0213%" height="15" fill="rgb(245,159,27)" fg:x="86953" fg:w="34"/><text x="54.6521%" y="367.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (34 samples, 0.02%)</title><rect x="54.4021%" y="341" width="0.0213%" height="15" fill="rgb(245,172,44)" fg:x="86953" fg:w="34"/><text x="54.6521%" y="351.50"></text></g><g><title>nom::number::streaming::be_u8 (34 samples, 0.02%)</title><rect x="54.4021%" y="325" width="0.0213%" height="15" fill="rgb(236,23,11)" fg:x="86953" fg:w="34"/><text x="54.6521%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (70 samples, 0.04%)</title><rect x="54.4021%" y="453" width="0.0438%" height="15" fill="rgb(205,117,38)" fg:x="86953" fg:w="70"/><text x="54.6521%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (70 samples, 0.04%)</title><rect x="54.4021%" y="437" width="0.0438%" height="15" fill="rgb(237,72,25)" fg:x="86953" fg:w="70"/><text x="54.6521%" y="447.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (70 samples, 0.04%)</title><rect x="54.4021%" y="421" width="0.0438%" height="15" fill="rgb(244,70,9)" fg:x="86953" fg:w="70"/><text x="54.6521%" y="431.50"></text></g><g><title>nom::number::streaming::be_i8 (70 samples, 0.04%)</title><rect x="54.4021%" y="405" width="0.0438%" height="15" fill="rgb(217,125,39)" fg:x="86953" fg:w="70"/><text x="54.6521%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (70 samples, 0.04%)</title><rect x="54.4021%" y="389" width="0.0438%" height="15" fill="rgb(235,36,10)" fg:x="86953" fg:w="70"/><text x="54.6521%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (70 samples, 0.04%)</title><rect x="54.4021%" y="373" width="0.0438%" height="15" fill="rgb(251,123,47)" fg:x="86953" fg:w="70"/><text x="54.6521%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (36 samples, 0.02%)</title><rect x="54.4233%" y="357" width="0.0225%" height="15" fill="rgb(221,13,13)" fg:x="86987" fg:w="36"/><text x="54.6733%" y="367.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (121 samples, 0.08%)</title><rect x="54.4021%" y="485" width="0.0757%" height="15" fill="rgb(238,131,9)" fg:x="86953" fg:w="121"/><text x="54.6521%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (121 samples, 0.08%)</title><rect x="54.4021%" y="469" width="0.0757%" height="15" fill="rgb(211,50,8)" fg:x="86953" fg:w="121"/><text x="54.6521%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (51 samples, 0.03%)</title><rect x="54.4459%" y="453" width="0.0319%" height="15" fill="rgb(245,182,24)" fg:x="87023" fg:w="51"/><text x="54.6959%" y="463.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (51 samples, 0.03%)</title><rect x="54.4459%" y="437" width="0.0319%" height="15" fill="rgb(242,14,37)" fg:x="87023" fg:w="51"/><text x="54.6959%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (530 samples, 0.33%)</title><rect x="54.1468%" y="565" width="0.3316%" height="15" fill="rgb(246,228,12)" fg:x="86545" fg:w="530"/><text x="54.3968%" y="575.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (299 samples, 0.19%)</title><rect x="54.2913%" y="549" width="0.1871%" height="15" fill="rgb(213,55,15)" fg:x="86776" fg:w="299"/><text x="54.5413%" y="559.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (296 samples, 0.19%)</title><rect x="54.2932%" y="533" width="0.1852%" height="15" fill="rgb(209,9,3)" fg:x="86779" fg:w="296"/><text x="54.5432%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (217 samples, 0.14%)</title><rect x="54.3426%" y="517" width="0.1358%" height="15" fill="rgb(230,59,30)" fg:x="86858" fg:w="217"/><text x="54.5926%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (217 samples, 0.14%)</title><rect x="54.3426%" y="501" width="0.1358%" height="15" fill="rgb(209,121,21)" fg:x="86858" fg:w="217"/><text x="54.5926%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.02%)</title><rect x="54.4784%" y="565" width="0.0150%" height="15" fill="rgb(220,109,13)" fg:x="87075" fg:w="24"/><text x="54.7284%" y="575.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (22,677 samples, 14.19%)</title><rect x="40.3124%" y="613" width="14.1878%" height="15" fill="rgb(232,18,1)" fg:x="64433" fg:w="22677"/><text x="40.5624%" y="623.50">hprof_slurp::parser::r..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (578 samples, 0.36%)</title><rect x="54.1387%" y="597" width="0.3616%" height="15" fill="rgb(215,41,42)" fg:x="86532" fg:w="578"/><text x="54.3887%" y="607.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (578 samples, 0.36%)</title><rect x="54.1387%" y="581" width="0.3616%" height="15" fill="rgb(224,123,36)" fg:x="86532" fg:w="578"/><text x="54.3887%" y="591.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string (20 samples, 0.01%)</title><rect x="54.5003%" y="613" width="0.0125%" height="15" fill="rgb(240,125,3)" fg:x="87110" fg:w="20"/><text x="54.7503%" y="623.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (20 samples, 0.01%)</title><rect x="54.5003%" y="597" width="0.0125%" height="15" fill="rgb(205,98,50)" fg:x="87110" fg:w="20"/><text x="54.7503%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20 samples, 0.01%)</title><rect x="54.5003%" y="581" width="0.0125%" height="15" fill="rgb(205,185,37)" fg:x="87110" fg:w="20"/><text x="54.7503%" y="591.50"></text></g><g><title>nom::combinator::map::{{closure}} (20 samples, 0.01%)</title><rect x="54.5003%" y="565" width="0.0125%" height="15" fill="rgb(238,207,15)" fg:x="87110" fg:w="20"/><text x="54.7503%" y="575.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string::{{closure}}::{{closure}} (18 samples, 0.01%)</title><rect x="54.5015%" y="549" width="0.0113%" height="15" fill="rgb(213,199,42)" fg:x="87112" fg:w="18"/><text x="54.7515%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (62,230 samples, 38.93%)</title><rect x="15.5812%" y="645" width="38.9341%" height="15" fill="rgb(235,201,11)" fg:x="24904" fg:w="62230"/><text x="15.8312%" y="655.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (61,532 samples, 38.50%)</title><rect x="16.0179%" y="629" width="38.4974%" height="15" fill="rgb(207,46,11)" fg:x="25602" fg:w="61532"/><text x="16.2679%" y="639.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_hp..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (575 samples, 0.36%)</title><rect x="54.5604%" y="629" width="0.3597%" height="15" fill="rgb(241,35,35)" fg:x="87206" fg:w="575"/><text x="54.8104%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.01%)</title><rect x="54.9214%" y="629" width="0.0106%" height="15" fill="rgb(243,32,47)" fg:x="87783" fg:w="17"/><text x="55.1714%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.01%)</title><rect x="54.9214%" y="613" width="0.0106%" height="15" fill="rgb(247,202,23)" fg:x="87783" fg:w="17"/><text x="55.1714%" y="623.50"></text></g><g><title>__handle_mm_fault (31 samples, 0.02%)</title><rect x="55.8048%" y="549" width="0.0194%" height="15" fill="rgb(219,102,11)" fg:x="89195" fg:w="31"/><text x="56.0548%" y="559.50"></text></g><g><title>handle_pte_fault (30 samples, 0.02%)</title><rect x="55.8054%" y="533" width="0.0188%" height="15" fill="rgb(243,110,44)" fg:x="89196" fg:w="30"/><text x="56.0554%" y="543.50"></text></g><g><title>do_anonymous_page (29 samples, 0.02%)</title><rect x="55.8060%" y="517" width="0.0181%" height="15" fill="rgb(222,74,54)" fg:x="89197" fg:w="29"/><text x="56.0560%" y="527.50"></text></g><g><title>asm_exc_page_fault (35 samples, 0.02%)</title><rect x="55.8029%" y="613" width="0.0219%" height="15" fill="rgb(216,99,12)" fg:x="89192" fg:w="35"/><text x="56.0529%" y="623.50"></text></g><g><title>exc_page_fault (35 samples, 0.02%)</title><rect x="55.8029%" y="597" width="0.0219%" height="15" fill="rgb(226,22,26)" fg:x="89192" fg:w="35"/><text x="56.0529%" y="607.50"></text></g><g><title>do_user_addr_fault (35 samples, 0.02%)</title><rect x="55.8029%" y="581" width="0.0219%" height="15" fill="rgb(217,163,10)" fg:x="89192" fg:w="35"/><text x="56.0529%" y="591.50"></text></g><g><title>handle_mm_fault (34 samples, 0.02%)</title><rect x="55.8035%" y="565" width="0.0213%" height="15" fill="rgb(213,25,53)" fg:x="89193" fg:w="34"/><text x="56.0535%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,102 samples, 1.32%)</title><rect x="54.5153%" y="645" width="1.3151%" height="15" fill="rgb(252,105,26)" fg:x="87134" fg:w="2102"/><text x="54.7653%" y="655.50"></text></g><g><title>core::ptr::write (1,436 samples, 0.90%)</title><rect x="54.9320%" y="629" width="0.8984%" height="15" fill="rgb(220,39,43)" fg:x="87800" fg:w="1436"/><text x="55.1820%" y="639.50"></text></g><g><title>__hrtimer_run_queues (16 samples, 0.01%)</title><rect x="55.8348%" y="581" width="0.0100%" height="15" fill="rgb(229,68,48)" fg:x="89243" fg:w="16"/><text x="56.0848%" y="591.50"></text></g><g><title>__sysvec_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="55.8348%" y="613" width="0.0106%" height="15" fill="rgb(252,8,32)" fg:x="89243" fg:w="17"/><text x="56.0848%" y="623.50"></text></g><g><title>hrtimer_interrupt (17 samples, 0.01%)</title><rect x="55.8348%" y="597" width="0.0106%" height="15" fill="rgb(223,20,43)" fg:x="89243" fg:w="17"/><text x="56.0848%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (26 samples, 0.02%)</title><rect x="55.8348%" y="645" width="0.0163%" height="15" fill="rgb(229,81,49)" fg:x="89243" fg:w="26"/><text x="56.0848%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (26 samples, 0.02%)</title><rect x="55.8348%" y="629" width="0.0163%" height="15" fill="rgb(236,28,36)" fg:x="89243" fg:w="26"/><text x="56.0848%" y="639.50"></text></g><g><title>__clone3 (85,164 samples, 53.28%)</title><rect x="2.5733%" y="901" width="53.2828%" height="15" fill="rgb(249,185,26)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="911.50">__clone3</text></g><g><title>start_thread (85,164 samples, 53.28%)</title><rect x="2.5733%" y="885" width="53.2828%" height="15" fill="rgb(249,174,33)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (85,164 samples, 53.28%)</title><rect x="2.5733%" y="869" width="53.2828%" height="15" fill="rgb(233,201,37)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85,164 samples, 53.28%)</title><rect x="2.5733%" y="853" width="53.2828%" height="15" fill="rgb(221,78,26)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85,164 samples, 53.28%)</title><rect x="2.5733%" y="837" width="53.2828%" height="15" fill="rgb(250,127,30)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (85,164 samples, 53.28%)</title><rect x="2.5733%" y="821" width="53.2828%" height="15" fill="rgb(230,49,44)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="831.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (85,164 samples, 53.28%)</title><rect x="2.5733%" y="805" width="53.2828%" height="15" fill="rgb(229,67,23)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="815.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (85,164 samples, 53.28%)</title><rect x="2.5733%" y="789" width="53.2828%" height="15" fill="rgb(249,83,47)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (85,164 samples, 53.28%)</title><rect x="2.5733%" y="773" width="53.2828%" height="15" fill="rgb(215,43,3)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (85,164 samples, 53.28%)</title><rect x="2.5733%" y="757" width="53.2828%" height="15" fill="rgb(238,154,13)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (85,164 samples, 53.28%)</title><rect x="2.5733%" y="741" width="53.2828%" height="15" fill="rgb(219,56,2)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (85,164 samples, 53.28%)</title><rect x="2.5733%" y="725" width="53.2828%" height="15" fill="rgb(233,0,4)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="735.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (85,164 samples, 53.28%)</title><rect x="2.5733%" y="709" width="53.2828%" height="15" fill="rgb(235,30,7)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (85,164 samples, 53.28%)</title><rect x="2.5733%" y="693" width="53.2828%" height="15" fill="rgb(250,79,13)" fg:x="4113" fg:w="85164"/><text x="2.8233%" y="703.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (77,741 samples, 48.64%)</title><rect x="7.2175%" y="677" width="48.6386%" height="15" fill="rgb(211,146,34)" fg:x="11536" fg:w="77741"/><text x="7.4675%" y="687.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (77,741 samples, 48.64%)</title><rect x="7.2175%" y="661" width="48.6386%" height="15" fill="rgb(228,22,38)" fg:x="11536" fg:w="77741"/><text x="7.4675%" y="671.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>asm_exc_page_fault (51 samples, 0.03%)</title><rect x="55.8567%" y="901" width="0.0319%" height="15" fill="rgb(235,168,5)" fg:x="89278" fg:w="51"/><text x="56.1067%" y="911.50"></text></g><g><title>hprof-parser (89,341 samples, 55.90%)</title><rect x="0.0000%" y="917" width="55.8961%" height="15" fill="rgb(221,155,16)" fg:x="0" fg:w="89341"/><text x="0.2500%" y="927.50">hprof-parser</text></g><g><title>copy_page_to_iter (21 samples, 0.01%)</title><rect x="55.8999%" y="421" width="0.0131%" height="15" fill="rgb(215,215,53)" fg:x="89347" fg:w="21"/><text x="56.1499%" y="431.50"></text></g><g><title>__cond_resched (24 samples, 0.02%)</title><rect x="56.3341%" y="405" width="0.0150%" height="15" fill="rgb(223,4,10)" fg:x="90041" fg:w="24"/><text x="56.5841%" y="415.50"></text></g><g><title>__irqentry_text_start (43 samples, 0.03%)</title><rect x="56.3491%" y="405" width="0.0269%" height="15" fill="rgb(234,103,6)" fg:x="90065" fg:w="43"/><text x="56.5991%" y="415.50"></text></g><g><title>__cond_resched (30 samples, 0.02%)</title><rect x="56.5906%" y="389" width="0.0188%" height="15" fill="rgb(227,97,0)" fg:x="90451" fg:w="30"/><text x="56.8406%" y="399.50"></text></g><g><title>copy_page_to_iter (395 samples, 0.25%)</title><rect x="56.3841%" y="405" width="0.2471%" height="15" fill="rgb(234,150,53)" fg:x="90121" fg:w="395"/><text x="56.6341%" y="415.50"></text></g><g><title>rcu_all_qs (25 samples, 0.02%)</title><rect x="56.6156%" y="389" width="0.0156%" height="15" fill="rgb(228,201,54)" fg:x="90491" fg:w="25"/><text x="56.8656%" y="399.50"></text></g><g><title>blk_update_request (28 samples, 0.02%)</title><rect x="63.7086%" y="213" width="0.0175%" height="15" fill="rgb(222,22,37)" fg:x="101828" fg:w="28"/><text x="63.9586%" y="223.50"></text></g><g><title>bio_endio (20 samples, 0.01%)</title><rect x="63.7136%" y="197" width="0.0125%" height="15" fill="rgb(237,53,32)" fg:x="101836" fg:w="20"/><text x="63.9636%" y="207.50"></text></g><g><title>mpage_end_io (16 samples, 0.01%)</title><rect x="63.7161%" y="181" width="0.0100%" height="15" fill="rgb(233,25,53)" fg:x="101840" fg:w="16"/><text x="63.9661%" y="191.50"></text></g><g><title>blk_mq_end_request (40 samples, 0.03%)</title><rect x="63.7017%" y="229" width="0.0250%" height="15" fill="rgb(210,40,34)" fg:x="101817" fg:w="40"/><text x="63.9517%" y="239.50"></text></g><g><title>nvme_complete_rq (41 samples, 0.03%)</title><rect x="63.7017%" y="245" width="0.0257%" height="15" fill="rgb(241,220,44)" fg:x="101817" fg:w="41"/><text x="63.9517%" y="255.50"></text></g><g><title>dma_unmap_sg_attrs (21 samples, 0.01%)</title><rect x="63.7280%" y="229" width="0.0131%" height="15" fill="rgb(235,28,35)" fg:x="101859" fg:w="21"/><text x="63.9780%" y="239.50"></text></g><g><title>nvme_irq (80 samples, 0.05%)</title><rect x="63.6961%" y="293" width="0.0501%" height="15" fill="rgb(210,56,17)" fg:x="101808" fg:w="80"/><text x="63.9461%" y="303.50"></text></g><g><title>nvme_process_cq (80 samples, 0.05%)</title><rect x="63.6961%" y="277" width="0.0501%" height="15" fill="rgb(224,130,29)" fg:x="101808" fg:w="80"/><text x="63.9461%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (71 samples, 0.04%)</title><rect x="63.7017%" y="261" width="0.0444%" height="15" fill="rgb(235,212,8)" fg:x="101817" fg:w="71"/><text x="63.9517%" y="271.50"></text></g><g><title>nvme_unmap_data (29 samples, 0.02%)</title><rect x="63.7280%" y="245" width="0.0181%" height="15" fill="rgb(223,33,50)" fg:x="101859" fg:w="29"/><text x="63.9780%" y="255.50"></text></g><g><title>__handle_irq_event_percpu (81 samples, 0.05%)</title><rect x="63.6961%" y="309" width="0.0507%" height="15" fill="rgb(219,149,13)" fg:x="101808" fg:w="81"/><text x="63.9461%" y="319.50"></text></g><g><title>handle_irq_event (87 samples, 0.05%)</title><rect x="63.6948%" y="325" width="0.0544%" height="15" fill="rgb(250,156,29)" fg:x="101806" fg:w="87"/><text x="63.9448%" y="335.50"></text></g><g><title>__common_interrupt (97 samples, 0.06%)</title><rect x="63.6917%" y="357" width="0.0607%" height="15" fill="rgb(216,193,19)" fg:x="101801" fg:w="97"/><text x="63.9417%" y="367.50"></text></g><g><title>handle_edge_irq (95 samples, 0.06%)</title><rect x="63.6930%" y="341" width="0.0594%" height="15" fill="rgb(216,135,14)" fg:x="101803" fg:w="95"/><text x="63.9430%" y="351.50"></text></g><g><title>common_interrupt (107 samples, 0.07%)</title><rect x="63.6905%" y="373" width="0.0669%" height="15" fill="rgb(241,47,5)" fg:x="101799" fg:w="107"/><text x="63.9405%" y="383.50"></text></g><g><title>asm_common_interrupt (108 samples, 0.07%)</title><rect x="63.6905%" y="389" width="0.0676%" height="15" fill="rgb(233,42,35)" fg:x="101799" fg:w="108"/><text x="63.9405%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="63.7580%" y="357" width="0.0106%" height="15" fill="rgb(231,13,6)" fg:x="101907" fg:w="17"/><text x="64.0080%" y="367.50"></text></g><g><title>hrtimer_interrupt (17 samples, 0.01%)</title><rect x="63.7580%" y="341" width="0.0106%" height="15" fill="rgb(207,181,40)" fg:x="101907" fg:w="17"/><text x="64.0080%" y="351.50"></text></g><g><title>copy_user_enhanced_fast_string (11,410 samples, 7.14%)</title><rect x="56.6313%" y="405" width="7.1387%" height="15" fill="rgb(254,173,49)" fg:x="90516" fg:w="11410"/><text x="56.8813%" y="415.50">copy_user_..</text></g><g><title>asm_sysvec_apic_timer_interrupt (19 samples, 0.01%)</title><rect x="63.7580%" y="389" width="0.0119%" height="15" fill="rgb(221,1,38)" fg:x="101907" fg:w="19"/><text x="64.0080%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (19 samples, 0.01%)</title><rect x="63.7580%" y="373" width="0.0119%" height="15" fill="rgb(206,124,46)" fg:x="101907" fg:w="19"/><text x="64.0080%" y="383.50"></text></g><g><title>__remove_mapping (19 samples, 0.01%)</title><rect x="63.7824%" y="213" width="0.0119%" height="15" fill="rgb(249,21,11)" fg:x="101946" fg:w="19"/><text x="64.0324%" y="223.50"></text></g><g><title>shrink_page_list (21 samples, 0.01%)</title><rect x="63.7818%" y="229" width="0.0131%" height="15" fill="rgb(222,201,40)" fg:x="101945" fg:w="21"/><text x="64.0318%" y="239.50"></text></g><g><title>shrink_lruvec (27 samples, 0.02%)</title><rect x="63.7787%" y="261" width="0.0169%" height="15" fill="rgb(235,61,29)" fg:x="101940" fg:w="27"/><text x="64.0287%" y="271.50"></text></g><g><title>shrink_inactive_list (26 samples, 0.02%)</title><rect x="63.7793%" y="245" width="0.0163%" height="15" fill="rgb(219,207,3)" fg:x="101941" fg:w="26"/><text x="64.0293%" y="255.50"></text></g><g><title>shrink_node_memcgs (28 samples, 0.02%)</title><rect x="63.7787%" y="277" width="0.0175%" height="15" fill="rgb(222,56,46)" fg:x="101940" fg:w="28"/><text x="64.0287%" y="287.50"></text></g><g><title>__page_cache_alloc (29 samples, 0.02%)</title><rect x="63.7787%" y="389" width="0.0181%" height="15" fill="rgb(239,76,54)" fg:x="101940" fg:w="29"/><text x="64.0287%" y="399.50"></text></g><g><title>alloc_pages (29 samples, 0.02%)</title><rect x="63.7787%" y="373" width="0.0181%" height="15" fill="rgb(231,124,27)" fg:x="101940" fg:w="29"/><text x="64.0287%" y="383.50"></text></g><g><title>__alloc_pages (29 samples, 0.02%)</title><rect x="63.7787%" y="357" width="0.0181%" height="15" fill="rgb(249,195,6)" fg:x="101940" fg:w="29"/><text x="64.0287%" y="367.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (29 samples, 0.02%)</title><rect x="63.7787%" y="341" width="0.0181%" height="15" fill="rgb(237,174,47)" fg:x="101940" fg:w="29"/><text x="64.0287%" y="351.50"></text></g><g><title>try_to_free_pages (29 samples, 0.02%)</title><rect x="63.7787%" y="325" width="0.0181%" height="15" fill="rgb(206,201,31)" fg:x="101940" fg:w="29"/><text x="64.0287%" y="335.50"></text></g><g><title>do_try_to_free_pages (29 samples, 0.02%)</title><rect x="63.7787%" y="309" width="0.0181%" height="15" fill="rgb(231,57,52)" fg:x="101940" fg:w="29"/><text x="64.0287%" y="319.50"></text></g><g><title>shrink_node (29 samples, 0.02%)</title><rect x="63.7787%" y="293" width="0.0181%" height="15" fill="rgb(248,177,22)" fg:x="101940" fg:w="29"/><text x="64.0287%" y="303.50"></text></g><g><title>__xas_next (16 samples, 0.01%)</title><rect x="64.1466%" y="373" width="0.0100%" height="15" fill="rgb(215,211,37)" fg:x="102528" fg:w="16"/><text x="64.3966%" y="383.50"></text></g><g><title>xas_load (105 samples, 0.07%)</title><rect x="64.1584%" y="373" width="0.0657%" height="15" fill="rgb(241,128,51)" fg:x="102547" fg:w="105"/><text x="64.4084%" y="383.50"></text></g><g><title>filemap_get_read_batch (683 samples, 0.43%)</title><rect x="63.7974%" y="389" width="0.4273%" height="15" fill="rgb(227,165,31)" fg:x="101970" fg:w="683"/><text x="64.0474%" y="399.50"></text></g><g><title>__schedule (36 samples, 0.02%)</title><rect x="64.2254%" y="325" width="0.0225%" height="15" fill="rgb(228,167,24)" fg:x="102654" fg:w="36"/><text x="64.4754%" y="335.50"></text></g><g><title>filemap_update_page (38 samples, 0.02%)</title><rect x="64.2248%" y="389" width="0.0238%" height="15" fill="rgb(228,143,12)" fg:x="102653" fg:w="38"/><text x="64.4748%" y="399.50"></text></g><g><title>wait_on_page_bit_common (38 samples, 0.02%)</title><rect x="64.2248%" y="373" width="0.0238%" height="15" fill="rgb(249,149,8)" fg:x="102653" fg:w="38"/><text x="64.4748%" y="383.50"></text></g><g><title>io_schedule (37 samples, 0.02%)</title><rect x="64.2254%" y="357" width="0.0231%" height="15" fill="rgb(243,35,44)" fg:x="102654" fg:w="37"/><text x="64.4754%" y="367.50"></text></g><g><title>schedule (37 samples, 0.02%)</title><rect x="64.2254%" y="341" width="0.0231%" height="15" fill="rgb(246,89,9)" fg:x="102654" fg:w="37"/><text x="64.4754%" y="351.50"></text></g><g><title>__page_cache_alloc (20 samples, 0.01%)</title><rect x="64.2592%" y="357" width="0.0125%" height="15" fill="rgb(233,213,13)" fg:x="102708" fg:w="20"/><text x="64.5092%" y="367.50"></text></g><g><title>add_to_page_cache_lru (17 samples, 0.01%)</title><rect x="64.2717%" y="357" width="0.0106%" height="15" fill="rgb(233,141,41)" fg:x="102728" fg:w="17"/><text x="64.5217%" y="367.50"></text></g><g><title>__add_to_page_cache_locked (16 samples, 0.01%)</title><rect x="64.4606%" y="341" width="0.0100%" height="15" fill="rgb(239,167,4)" fg:x="103030" fg:w="16"/><text x="64.7106%" y="351.50"></text></g><g><title>_find_first_bit (25 samples, 0.02%)</title><rect x="64.5007%" y="325" width="0.0156%" height="15" fill="rgb(209,217,16)" fg:x="103094" fg:w="25"/><text x="64.7507%" y="335.50"></text></g><g><title>clear_page_erms (88 samples, 0.06%)</title><rect x="64.8160%" y="261" width="0.0551%" height="15" fill="rgb(219,88,35)" fg:x="103598" fg:w="88"/><text x="65.0660%" y="271.50"></text></g><g><title>get_page_from_freelist (139 samples, 0.09%)</title><rect x="64.8097%" y="277" width="0.0870%" height="15" fill="rgb(220,193,23)" fg:x="103588" fg:w="139"/><text x="65.0597%" y="287.50"></text></g><g><title>rmqueue (41 samples, 0.03%)</title><rect x="64.8711%" y="261" width="0.0257%" height="15" fill="rgb(230,90,52)" fg:x="103686" fg:w="41"/><text x="65.1211%" y="271.50"></text></g><g><title>rmqueue_bulk (24 samples, 0.02%)</title><rect x="64.8817%" y="245" width="0.0150%" height="15" fill="rgb(252,106,19)" fg:x="103703" fg:w="24"/><text x="65.1317%" y="255.50"></text></g><g><title>__remove_mapping (18 samples, 0.01%)</title><rect x="64.9080%" y="165" width="0.0113%" height="15" fill="rgb(206,74,20)" fg:x="103745" fg:w="18"/><text x="65.1580%" y="175.50"></text></g><g><title>shrink_page_list (25 samples, 0.02%)</title><rect x="64.9073%" y="181" width="0.0156%" height="15" fill="rgb(230,138,44)" fg:x="103744" fg:w="25"/><text x="65.1573%" y="191.50"></text></g><g><title>shrink_lruvec (39 samples, 0.02%)</title><rect x="64.8998%" y="213" width="0.0244%" height="15" fill="rgb(235,182,43)" fg:x="103732" fg:w="39"/><text x="65.1498%" y="223.50"></text></g><g><title>shrink_inactive_list (35 samples, 0.02%)</title><rect x="64.9023%" y="197" width="0.0219%" height="15" fill="rgb(242,16,51)" fg:x="103736" fg:w="35"/><text x="65.1523%" y="207.50"></text></g><g><title>try_to_free_pages (45 samples, 0.03%)</title><rect x="64.8973%" y="277" width="0.0282%" height="15" fill="rgb(248,9,4)" fg:x="103728" fg:w="45"/><text x="65.1473%" y="287.50"></text></g><g><title>do_try_to_free_pages (45 samples, 0.03%)</title><rect x="64.8973%" y="261" width="0.0282%" height="15" fill="rgb(210,31,22)" fg:x="103728" fg:w="45"/><text x="65.1473%" y="271.50"></text></g><g><title>shrink_node (45 samples, 0.03%)</title><rect x="64.8973%" y="245" width="0.0282%" height="15" fill="rgb(239,54,39)" fg:x="103728" fg:w="45"/><text x="65.1473%" y="255.50"></text></g><g><title>shrink_node_memcgs (42 samples, 0.03%)</title><rect x="64.8992%" y="229" width="0.0263%" height="15" fill="rgb(230,99,41)" fg:x="103731" fg:w="42"/><text x="65.1492%" y="239.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (215 samples, 0.13%)</title><rect x="64.7991%" y="293" width="0.1345%" height="15" fill="rgb(253,106,12)" fg:x="103571" fg:w="215"/><text x="65.0491%" y="303.50"></text></g><g><title>__cond_resched (18 samples, 0.01%)</title><rect x="64.9336%" y="293" width="0.0113%" height="15" fill="rgb(213,46,41)" fg:x="103786" fg:w="18"/><text x="65.1836%" y="303.50"></text></g><g><title>__next_zones_zonelist (79 samples, 0.05%)</title><rect x="64.9449%" y="293" width="0.0494%" height="15" fill="rgb(215,133,35)" fg:x="103804" fg:w="79"/><text x="65.1949%" y="303.50"></text></g><g><title>__next_zones_zonelist (25 samples, 0.02%)</title><rect x="65.2052%" y="277" width="0.0156%" height="15" fill="rgb(213,28,5)" fg:x="104220" fg:w="25"/><text x="65.4552%" y="287.50"></text></g><g><title>__zone_watermark_ok (28 samples, 0.02%)</title><rect x="65.2208%" y="277" width="0.0175%" height="15" fill="rgb(215,77,49)" fg:x="104245" fg:w="28"/><text x="65.4708%" y="287.50"></text></g><g><title>asm_common_interrupt (18 samples, 0.01%)</title><rect x="65.2383%" y="277" width="0.0113%" height="15" fill="rgb(248,100,22)" fg:x="104273" fg:w="18"/><text x="65.4883%" y="287.50"></text></g><g><title>common_interrupt (16 samples, 0.01%)</title><rect x="65.2396%" y="261" width="0.0100%" height="15" fill="rgb(208,67,9)" fg:x="104275" fg:w="16"/><text x="65.4896%" y="271.50"></text></g><g><title>__common_interrupt (16 samples, 0.01%)</title><rect x="65.2396%" y="245" width="0.0100%" height="15" fill="rgb(219,133,21)" fg:x="104275" fg:w="16"/><text x="65.4896%" y="255.50"></text></g><g><title>handle_edge_irq (16 samples, 0.01%)</title><rect x="65.2396%" y="229" width="0.0100%" height="15" fill="rgb(246,46,29)" fg:x="104275" fg:w="16"/><text x="65.4896%" y="239.50"></text></g><g><title>__read_end_io (67 samples, 0.04%)</title><rect x="67.1922%" y="37" width="0.0419%" height="15" fill="rgb(246,185,52)" fg:x="107396" fg:w="67"/><text x="67.4422%" y="47.50"></text></g><g><title>nvme_complete_rq (96 samples, 0.06%)</title><rect x="67.1878%" y="117" width="0.0601%" height="15" fill="rgb(252,136,11)" fg:x="107389" fg:w="96"/><text x="67.4378%" y="127.50"></text></g><g><title>blk_mq_end_request (96 samples, 0.06%)</title><rect x="67.1878%" y="101" width="0.0601%" height="15" fill="rgb(219,138,53)" fg:x="107389" fg:w="96"/><text x="67.4378%" y="111.50"></text></g><g><title>blk_update_request (92 samples, 0.06%)</title><rect x="67.1903%" y="85" width="0.0576%" height="15" fill="rgb(211,51,23)" fg:x="107393" fg:w="92"/><text x="67.4403%" y="95.50"></text></g><g><title>bio_endio (89 samples, 0.06%)</title><rect x="67.1922%" y="69" width="0.0557%" height="15" fill="rgb(247,221,28)" fg:x="107396" fg:w="89"/><text x="67.4422%" y="79.50"></text></g><g><title>mpage_end_io (89 samples, 0.06%)</title><rect x="67.1922%" y="53" width="0.0557%" height="15" fill="rgb(251,222,45)" fg:x="107396" fg:w="89"/><text x="67.4422%" y="63.50"></text></g><g><title>unlock_page (22 samples, 0.01%)</title><rect x="67.2341%" y="37" width="0.0138%" height="15" fill="rgb(217,162,53)" fg:x="107463" fg:w="22"/><text x="67.4841%" y="47.50"></text></g><g><title>handle_irq_event (117 samples, 0.07%)</title><rect x="67.1847%" y="197" width="0.0732%" height="15" fill="rgb(229,93,14)" fg:x="107384" fg:w="117"/><text x="67.4347%" y="207.50"></text></g><g><title>__handle_irq_event_percpu (117 samples, 0.07%)</title><rect x="67.1847%" y="181" width="0.0732%" height="15" fill="rgb(209,67,49)" fg:x="107384" fg:w="117"/><text x="67.4347%" y="191.50"></text></g><g><title>nvme_irq (116 samples, 0.07%)</title><rect x="67.1853%" y="165" width="0.0726%" height="15" fill="rgb(213,87,29)" fg:x="107385" fg:w="116"/><text x="67.4353%" y="175.50"></text></g><g><title>nvme_process_cq (116 samples, 0.07%)</title><rect x="67.1853%" y="149" width="0.0726%" height="15" fill="rgb(205,151,52)" fg:x="107385" fg:w="116"/><text x="67.4353%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (112 samples, 0.07%)</title><rect x="67.1878%" y="133" width="0.0701%" height="15" fill="rgb(253,215,39)" fg:x="107389" fg:w="112"/><text x="67.4378%" y="143.50"></text></g><g><title>handle_edge_irq (119 samples, 0.07%)</title><rect x="67.1841%" y="213" width="0.0745%" height="15" fill="rgb(221,220,41)" fg:x="107383" fg:w="119"/><text x="67.4341%" y="223.50"></text></g><g><title>__common_interrupt (121 samples, 0.08%)</title><rect x="67.1835%" y="229" width="0.0757%" height="15" fill="rgb(218,133,21)" fg:x="107382" fg:w="121"/><text x="67.4335%" y="239.50"></text></g><g><title>asm_common_interrupt (123 samples, 0.08%)</title><rect x="67.1835%" y="261" width="0.0770%" height="15" fill="rgb(221,193,43)" fg:x="107382" fg:w="123"/><text x="67.4335%" y="271.50"></text></g><g><title>common_interrupt (123 samples, 0.08%)</title><rect x="67.1835%" y="245" width="0.0770%" height="15" fill="rgb(240,128,52)" fg:x="107382" fg:w="123"/><text x="67.4335%" y="255.50"></text></g><g><title>clear_page_erms (3,220 samples, 2.01%)</title><rect x="65.2502%" y="277" width="2.0146%" height="15" fill="rgb(253,114,12)" fg:x="104292" fg:w="3220"/><text x="65.5002%" y="287.50">c..</text></g><g><title>kernel_init_free_pages.part.0 (56 samples, 0.04%)</title><rect x="67.2648%" y="277" width="0.0350%" height="15" fill="rgb(215,223,47)" fg:x="107512" fg:w="56"/><text x="67.5148%" y="287.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.01%)</title><rect x="67.5751%" y="261" width="0.0100%" height="15" fill="rgb(248,225,23)" fg:x="108008" fg:w="16"/><text x="67.8251%" y="271.50"></text></g><g><title>__read_end_io (28 samples, 0.02%)</title><rect x="67.5920%" y="37" width="0.0175%" height="15" fill="rgb(250,108,0)" fg:x="108035" fg:w="28"/><text x="67.8420%" y="47.50"></text></g><g><title>blk_update_request (51 samples, 0.03%)</title><rect x="67.5876%" y="85" width="0.0319%" height="15" fill="rgb(228,208,7)" fg:x="108028" fg:w="51"/><text x="67.8376%" y="95.50"></text></g><g><title>bio_endio (47 samples, 0.03%)</title><rect x="67.5901%" y="69" width="0.0294%" height="15" fill="rgb(244,45,10)" fg:x="108032" fg:w="47"/><text x="67.8401%" y="79.50"></text></g><g><title>mpage_end_io (44 samples, 0.03%)</title><rect x="67.5920%" y="53" width="0.0275%" height="15" fill="rgb(207,125,25)" fg:x="108035" fg:w="44"/><text x="67.8420%" y="63.50"></text></g><g><title>nvme_complete_rq (54 samples, 0.03%)</title><rect x="67.5864%" y="117" width="0.0338%" height="15" fill="rgb(210,195,18)" fg:x="108026" fg:w="54"/><text x="67.8364%" y="127.50"></text></g><g><title>blk_mq_end_request (54 samples, 0.03%)</title><rect x="67.5864%" y="101" width="0.0338%" height="15" fill="rgb(249,80,12)" fg:x="108026" fg:w="54"/><text x="67.8364%" y="111.50"></text></g><g><title>__handle_irq_event_percpu (62 samples, 0.04%)</title><rect x="67.5851%" y="181" width="0.0388%" height="15" fill="rgb(221,65,9)" fg:x="108024" fg:w="62"/><text x="67.8351%" y="191.50"></text></g><g><title>nvme_irq (61 samples, 0.04%)</title><rect x="67.5857%" y="165" width="0.0382%" height="15" fill="rgb(235,49,36)" fg:x="108025" fg:w="61"/><text x="67.8357%" y="175.50"></text></g><g><title>nvme_process_cq (61 samples, 0.04%)</title><rect x="67.5857%" y="149" width="0.0382%" height="15" fill="rgb(225,32,20)" fg:x="108025" fg:w="61"/><text x="67.8357%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (60 samples, 0.04%)</title><rect x="67.5864%" y="133" width="0.0375%" height="15" fill="rgb(215,141,46)" fg:x="108026" fg:w="60"/><text x="67.8364%" y="143.50"></text></g><g><title>handle_irq_event (63 samples, 0.04%)</title><rect x="67.5851%" y="197" width="0.0394%" height="15" fill="rgb(250,160,47)" fg:x="108024" fg:w="63"/><text x="67.8351%" y="207.50"></text></g><g><title>asm_common_interrupt (64 samples, 0.04%)</title><rect x="67.5851%" y="261" width="0.0400%" height="15" fill="rgb(216,222,40)" fg:x="108024" fg:w="64"/><text x="67.8351%" y="271.50"></text></g><g><title>common_interrupt (64 samples, 0.04%)</title><rect x="67.5851%" y="245" width="0.0400%" height="15" fill="rgb(234,217,39)" fg:x="108024" fg:w="64"/><text x="67.8351%" y="255.50"></text></g><g><title>__common_interrupt (64 samples, 0.04%)</title><rect x="67.5851%" y="229" width="0.0400%" height="15" fill="rgb(207,178,40)" fg:x="108024" fg:w="64"/><text x="67.8351%" y="239.50"></text></g><g><title>handle_edge_irq (64 samples, 0.04%)</title><rect x="67.5851%" y="213" width="0.0400%" height="15" fill="rgb(221,136,13)" fg:x="108024" fg:w="64"/><text x="67.8351%" y="223.50"></text></g><g><title>__mod_zone_page_state (16 samples, 0.01%)</title><rect x="68.3684%" y="245" width="0.0100%" height="15" fill="rgb(249,199,10)" fg:x="109276" fg:w="16"/><text x="68.6184%" y="255.50"></text></g><g><title>rmqueue_bulk (1,246 samples, 0.78%)</title><rect x="67.6270%" y="261" width="0.7796%" height="15" fill="rgb(249,222,13)" fg:x="108091" fg:w="1246"/><text x="67.8770%" y="271.50"></text></g><g><title>_raw_spin_lock (45 samples, 0.03%)</title><rect x="68.3784%" y="245" width="0.0282%" height="15" fill="rgb(244,185,38)" fg:x="109292" fg:w="45"/><text x="68.6284%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (45 samples, 0.03%)</title><rect x="68.3784%" y="229" width="0.0282%" height="15" fill="rgb(236,202,9)" fg:x="109292" fg:w="45"/><text x="68.6284%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (45 samples, 0.03%)</title><rect x="68.3784%" y="213" width="0.0282%" height="15" fill="rgb(250,229,37)" fg:x="109292" fg:w="45"/><text x="68.6284%" y="223.50"></text></g><g><title>rmqueue (1,769 samples, 1.11%)</title><rect x="67.3004%" y="277" width="1.1068%" height="15" fill="rgb(206,174,23)" fg:x="107569" fg:w="1769"/><text x="67.5504%" y="287.50"></text></g><g><title>get_page_from_freelist (5,438 samples, 3.40%)</title><rect x="65.0056%" y="293" width="3.4023%" height="15" fill="rgb(211,33,43)" fg:x="103901" fg:w="5438"/><text x="65.2556%" y="303.50">get..</text></g><g><title>rcu_all_qs (26 samples, 0.02%)</title><rect x="68.4166%" y="293" width="0.0163%" height="15" fill="rgb(245,58,50)" fg:x="109353" fg:w="26"/><text x="68.6666%" y="303.50"></text></g><g><title>__alloc_pages (6,138 samples, 3.84%)</title><rect x="64.5970%" y="309" width="3.8402%" height="15" fill="rgb(244,68,36)" fg:x="103248" fg:w="6138"/><text x="64.8470%" y="319.50">__al..</text></g><g><title>__cond_resched (16 samples, 0.01%)</title><rect x="68.4373%" y="309" width="0.0100%" height="15" fill="rgb(232,229,15)" fg:x="109386" fg:w="16"/><text x="68.6873%" y="319.50"></text></g><g><title>__next_zones_zonelist (22 samples, 0.01%)</title><rect x="68.4473%" y="309" width="0.0138%" height="15" fill="rgb(254,30,23)" fg:x="109402" fg:w="22"/><text x="68.6973%" y="319.50"></text></g><g><title>policy_nodemask (45 samples, 0.03%)</title><rect x="68.4710%" y="309" width="0.0282%" height="15" fill="rgb(235,160,14)" fg:x="109440" fg:w="45"/><text x="68.7210%" y="319.50"></text></g><g><title>alloc_pages (6,387 samples, 4.00%)</title><rect x="64.5163%" y="325" width="3.9960%" height="15" fill="rgb(212,155,44)" fg:x="103119" fg:w="6387"/><text x="64.7663%" y="335.50">allo..</text></g><g><title>should_fail_alloc_page (21 samples, 0.01%)</title><rect x="68.4992%" y="309" width="0.0131%" height="15" fill="rgb(226,2,50)" fg:x="109485" fg:w="21"/><text x="68.7492%" y="319.50"></text></g><g><title>__page_cache_alloc (6,470 samples, 4.05%)</title><rect x="64.4706%" y="341" width="4.0479%" height="15" fill="rgb(234,177,6)" fg:x="103046" fg:w="6470"/><text x="64.7206%" y="351.50">__pa..</text></g><g><title>PageHuge (35 samples, 0.02%)</title><rect x="68.6099%" y="325" width="0.0219%" height="15" fill="rgb(217,24,9)" fg:x="109662" fg:w="35"/><text x="68.8599%" y="335.50"></text></g><g><title>PageHuge (31 samples, 0.02%)</title><rect x="69.9726%" y="309" width="0.0194%" height="15" fill="rgb(220,13,46)" fg:x="111840" fg:w="31"/><text x="70.2226%" y="319.50"></text></g><g><title>asm_common_interrupt (20 samples, 0.01%)</title><rect x="70.1109%" y="277" width="0.0125%" height="15" fill="rgb(239,221,27)" fg:x="112061" fg:w="20"/><text x="70.3609%" y="287.50"></text></g><g><title>common_interrupt (20 samples, 0.01%)</title><rect x="70.1109%" y="261" width="0.0125%" height="15" fill="rgb(222,198,25)" fg:x="112061" fg:w="20"/><text x="70.3609%" y="271.50"></text></g><g><title>__common_interrupt (20 samples, 0.01%)</title><rect x="70.1109%" y="245" width="0.0125%" height="15" fill="rgb(211,99,13)" fg:x="112061" fg:w="20"/><text x="70.3609%" y="255.50"></text></g><g><title>handle_edge_irq (20 samples, 0.01%)</title><rect x="70.1109%" y="229" width="0.0125%" height="15" fill="rgb(232,111,31)" fg:x="112061" fg:w="20"/><text x="70.3609%" y="239.50"></text></g><g><title>handle_irq_event (20 samples, 0.01%)</title><rect x="70.1109%" y="213" width="0.0125%" height="15" fill="rgb(245,82,37)" fg:x="112061" fg:w="20"/><text x="70.3609%" y="223.50"></text></g><g><title>__handle_irq_event_percpu (20 samples, 0.01%)</title><rect x="70.1109%" y="197" width="0.0125%" height="15" fill="rgb(227,149,46)" fg:x="112061" fg:w="20"/><text x="70.3609%" y="207.50"></text></g><g><title>nvme_irq (20 samples, 0.01%)</title><rect x="70.1109%" y="181" width="0.0125%" height="15" fill="rgb(218,36,50)" fg:x="112061" fg:w="20"/><text x="70.3609%" y="191.50"></text></g><g><title>nvme_process_cq (20 samples, 0.01%)</title><rect x="70.1109%" y="165" width="0.0125%" height="15" fill="rgb(226,80,48)" fg:x="112061" fg:w="20"/><text x="70.3609%" y="175.50"></text></g><g><title>nvme_pci_complete_rq (17 samples, 0.01%)</title><rect x="70.1127%" y="149" width="0.0106%" height="15" fill="rgb(238,224,15)" fg:x="112064" fg:w="17"/><text x="70.3627%" y="159.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (160 samples, 0.10%)</title><rect x="70.1321%" y="277" width="0.1001%" height="15" fill="rgb(241,136,10)" fg:x="112095" fg:w="160"/><text x="70.3821%" y="287.50"></text></g><g><title>cgroup_rstat_updated (57 samples, 0.04%)</title><rect x="70.1966%" y="261" width="0.0357%" height="15" fill="rgb(208,32,45)" fg:x="112198" fg:w="57"/><text x="70.4466%" y="271.50"></text></g><g><title>page_counter_try_charge (57 samples, 0.04%)</title><rect x="70.3611%" y="261" width="0.0357%" height="15" fill="rgb(207,135,9)" fg:x="112461" fg:w="57"/><text x="70.6111%" y="271.50"></text></g><g><title>charge_memcg (601 samples, 0.38%)</title><rect x="70.0252%" y="293" width="0.3760%" height="15" fill="rgb(206,86,44)" fg:x="111924" fg:w="601"/><text x="70.2752%" y="303.50"></text></g><g><title>try_charge_memcg (251 samples, 0.16%)</title><rect x="70.2441%" y="277" width="0.1570%" height="15" fill="rgb(245,177,15)" fg:x="112274" fg:w="251"/><text x="70.4941%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (119 samples, 0.07%)</title><rect x="70.4012%" y="293" width="0.0745%" height="15" fill="rgb(206,64,50)" fg:x="112525" fg:w="119"/><text x="70.6512%" y="303.50"></text></g><g><title>rcu_read_unlock_strict (16 samples, 0.01%)</title><rect x="70.4656%" y="277" width="0.0100%" height="15" fill="rgb(234,36,40)" fg:x="112628" fg:w="16"/><text x="70.7156%" y="287.50"></text></g><g><title>rcu_read_unlock_strict (34 samples, 0.02%)</title><rect x="70.4906%" y="293" width="0.0213%" height="15" fill="rgb(213,64,8)" fg:x="112668" fg:w="34"/><text x="70.7406%" y="303.50"></text></g><g><title>__mem_cgroup_charge (840 samples, 0.53%)</title><rect x="69.9920%" y="309" width="0.5255%" height="15" fill="rgb(210,75,36)" fg:x="111871" fg:w="840"/><text x="70.2420%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (172 samples, 0.11%)</title><rect x="70.6058%" y="277" width="0.1076%" height="15" fill="rgb(229,88,21)" fg:x="112852" fg:w="172"/><text x="70.8558%" y="287.50"></text></g><g><title>cgroup_rstat_updated (63 samples, 0.04%)</title><rect x="70.6739%" y="261" width="0.0394%" height="15" fill="rgb(252,204,47)" fg:x="112961" fg:w="63"/><text x="70.9239%" y="271.50"></text></g><g><title>__mod_node_page_state (141 samples, 0.09%)</title><rect x="70.7134%" y="277" width="0.0882%" height="15" fill="rgb(208,77,27)" fg:x="113024" fg:w="141"/><text x="70.9634%" y="287.50"></text></g><g><title>__mod_lruvec_state (360 samples, 0.23%)</title><rect x="70.5820%" y="293" width="0.2252%" height="15" fill="rgb(221,76,26)" fg:x="112814" fg:w="360"/><text x="70.8320%" y="303.50"></text></g><g><title>__mod_node_page_state (17 samples, 0.01%)</title><rect x="70.8116%" y="293" width="0.0106%" height="15" fill="rgb(225,139,18)" fg:x="113181" fg:w="17"/><text x="71.0616%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (496 samples, 0.31%)</title><rect x="70.5175%" y="309" width="0.3103%" height="15" fill="rgb(230,137,11)" fg:x="112711" fg:w="496"/><text x="70.7675%" y="319.50"></text></g><g><title>_raw_spin_lock_irq (551 samples, 0.34%)</title><rect x="70.8366%" y="309" width="0.3447%" height="15" fill="rgb(212,28,1)" fg:x="113221" fg:w="551"/><text x="71.0866%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (287 samples, 0.18%)</title><rect x="71.0018%" y="293" width="0.1796%" height="15" fill="rgb(248,164,17)" fg:x="113485" fg:w="287"/><text x="71.2518%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (287 samples, 0.18%)</title><rect x="71.0018%" y="277" width="0.1796%" height="15" fill="rgb(222,171,42)" fg:x="113485" fg:w="287"/><text x="71.2518%" y="287.50"></text></g><g><title>__read_end_io (101 samples, 0.06%)</title><rect x="71.1964%" y="85" width="0.0632%" height="15" fill="rgb(243,84,45)" fg:x="113796" fg:w="101"/><text x="71.4464%" y="95.50"></text></g><g><title>bio_endio (158 samples, 0.10%)</title><rect x="71.1945%" y="117" width="0.0989%" height="15" fill="rgb(252,49,23)" fg:x="113793" fg:w="158"/><text x="71.4445%" y="127.50"></text></g><g><title>mpage_end_io (155 samples, 0.10%)</title><rect x="71.1964%" y="101" width="0.0970%" height="15" fill="rgb(215,19,7)" fg:x="113796" fg:w="155"/><text x="71.4464%" y="111.50"></text></g><g><title>unlock_page (54 samples, 0.03%)</title><rect x="71.2596%" y="85" width="0.0338%" height="15" fill="rgb(238,81,41)" fg:x="113897" fg:w="54"/><text x="71.5096%" y="95.50"></text></g><g><title>nvme_complete_rq (171 samples, 0.11%)</title><rect x="71.1870%" y="165" width="0.1070%" height="15" fill="rgb(210,199,37)" fg:x="113781" fg:w="171"/><text x="71.4370%" y="175.50"></text></g><g><title>blk_mq_end_request (170 samples, 0.11%)</title><rect x="71.1876%" y="149" width="0.1064%" height="15" fill="rgb(244,192,49)" fg:x="113782" fg:w="170"/><text x="71.4376%" y="159.50"></text></g><g><title>blk_update_request (163 samples, 0.10%)</title><rect x="71.1920%" y="133" width="0.1020%" height="15" fill="rgb(226,211,11)" fg:x="113789" fg:w="163"/><text x="71.4420%" y="143.50"></text></g><g><title>nvme_irq (190 samples, 0.12%)</title><rect x="71.1864%" y="213" width="0.1189%" height="15" fill="rgb(236,162,54)" fg:x="113780" fg:w="190"/><text x="71.4364%" y="223.50"></text></g><g><title>nvme_process_cq (190 samples, 0.12%)</title><rect x="71.1864%" y="197" width="0.1189%" height="15" fill="rgb(220,229,9)" fg:x="113780" fg:w="190"/><text x="71.4364%" y="207.50"></text></g><g><title>nvme_pci_complete_rq (189 samples, 0.12%)</title><rect x="71.1870%" y="181" width="0.1182%" height="15" fill="rgb(250,87,22)" fg:x="113781" fg:w="189"/><text x="71.4370%" y="191.50"></text></g><g><title>nvme_unmap_data (18 samples, 0.01%)</title><rect x="71.2940%" y="165" width="0.0113%" height="15" fill="rgb(239,43,17)" fg:x="113952" fg:w="18"/><text x="71.5440%" y="175.50"></text></g><g><title>__handle_irq_event_percpu (192 samples, 0.12%)</title><rect x="71.1857%" y="229" width="0.1201%" height="15" fill="rgb(231,177,25)" fg:x="113779" fg:w="192"/><text x="71.4357%" y="239.50"></text></g><g><title>handle_irq_event (195 samples, 0.12%)</title><rect x="71.1851%" y="245" width="0.1220%" height="15" fill="rgb(219,179,1)" fg:x="113778" fg:w="195"/><text x="71.4351%" y="255.50"></text></g><g><title>handle_edge_irq (200 samples, 0.13%)</title><rect x="71.1826%" y="261" width="0.1251%" height="15" fill="rgb(238,219,53)" fg:x="113774" fg:w="200"/><text x="71.4326%" y="271.50"></text></g><g><title>asm_common_interrupt (203 samples, 0.13%)</title><rect x="71.1814%" y="309" width="0.1270%" height="15" fill="rgb(232,167,36)" fg:x="113772" fg:w="203"/><text x="71.4314%" y="319.50"></text></g><g><title>common_interrupt (203 samples, 0.13%)</title><rect x="71.1814%" y="293" width="0.1270%" height="15" fill="rgb(244,19,51)" fg:x="113772" fg:w="203"/><text x="71.4314%" y="303.50"></text></g><g><title>__common_interrupt (202 samples, 0.13%)</title><rect x="71.1820%" y="277" width="0.1264%" height="15" fill="rgb(224,6,22)" fg:x="113773" fg:w="202"/><text x="71.4320%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (16 samples, 0.01%)</title><rect x="71.3209%" y="309" width="0.0100%" height="15" fill="rgb(224,145,5)" fg:x="113995" fg:w="16"/><text x="71.5709%" y="319.50"></text></g><g><title>rcu_read_unlock_strict (39 samples, 0.02%)</title><rect x="71.3340%" y="309" width="0.0244%" height="15" fill="rgb(234,130,49)" fg:x="114016" fg:w="39"/><text x="71.5840%" y="319.50"></text></g><g><title>workingset_update_node (17 samples, 0.01%)</title><rect x="71.3584%" y="309" width="0.0106%" height="15" fill="rgb(254,6,2)" fg:x="114055" fg:w="17"/><text x="71.6084%" y="319.50"></text></g><g><title>asm_common_interrupt (17 samples, 0.01%)</title><rect x="72.2012%" y="277" width="0.0106%" height="15" fill="rgb(208,96,46)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="287.50"></text></g><g><title>common_interrupt (17 samples, 0.01%)</title><rect x="72.2012%" y="261" width="0.0106%" height="15" fill="rgb(239,3,39)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="271.50"></text></g><g><title>__common_interrupt (17 samples, 0.01%)</title><rect x="72.2012%" y="245" width="0.0106%" height="15" fill="rgb(233,210,1)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="255.50"></text></g><g><title>handle_edge_irq (17 samples, 0.01%)</title><rect x="72.2012%" y="229" width="0.0106%" height="15" fill="rgb(244,137,37)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="239.50"></text></g><g><title>handle_irq_event (17 samples, 0.01%)</title><rect x="72.2012%" y="213" width="0.0106%" height="15" fill="rgb(240,136,2)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="223.50"></text></g><g><title>__handle_irq_event_percpu (17 samples, 0.01%)</title><rect x="72.2012%" y="197" width="0.0106%" height="15" fill="rgb(239,18,37)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="207.50"></text></g><g><title>nvme_irq (17 samples, 0.01%)</title><rect x="72.2012%" y="181" width="0.0106%" height="15" fill="rgb(218,185,22)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="191.50"></text></g><g><title>nvme_process_cq (17 samples, 0.01%)</title><rect x="72.2012%" y="165" width="0.0106%" height="15" fill="rgb(225,218,4)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="175.50"></text></g><g><title>nvme_pci_complete_rq (17 samples, 0.01%)</title><rect x="72.2012%" y="149" width="0.0106%" height="15" fill="rgb(230,182,32)" fg:x="115402" fg:w="17"/><text x="72.4512%" y="159.50"></text></g><g><title>xas_load (1,286 samples, 0.80%)</title><rect x="71.5649%" y="293" width="0.8046%" height="15" fill="rgb(242,56,43)" fg:x="114385" fg:w="1286"/><text x="71.8149%" y="303.50"></text></g><g><title>xas_start (250 samples, 0.16%)</title><rect x="72.2130%" y="277" width="0.1564%" height="15" fill="rgb(233,99,24)" fg:x="115421" fg:w="250"/><text x="72.4630%" y="287.50"></text></g><g><title>xa_get_order (1,626 samples, 1.02%)</title><rect x="71.3690%" y="309" width="1.0173%" height="15" fill="rgb(234,209,42)" fg:x="114072" fg:w="1626"/><text x="71.6190%" y="319.50"></text></g><g><title>xas_start (27 samples, 0.02%)</title><rect x="72.3695%" y="293" width="0.0169%" height="15" fill="rgb(227,7,12)" fg:x="115671" fg:w="27"/><text x="72.6195%" y="303.50"></text></g><g><title>xas_descend (49 samples, 0.03%)</title><rect x="72.3907%" y="309" width="0.0307%" height="15" fill="rgb(245,203,43)" fg:x="115705" fg:w="49"/><text x="72.6407%" y="319.50"></text></g><g><title>xas_descend (390 samples, 0.24%)</title><rect x="72.5578%" y="293" width="0.2440%" height="15" fill="rgb(238,205,33)" fg:x="115972" fg:w="390"/><text x="72.8078%" y="303.50"></text></g><g><title>xas_find_conflict (696 samples, 0.44%)</title><rect x="72.4214%" y="309" width="0.4355%" height="15" fill="rgb(231,56,7)" fg:x="115754" fg:w="696"/><text x="72.6714%" y="319.50"></text></g><g><title>xas_start (88 samples, 0.06%)</title><rect x="72.8018%" y="293" width="0.0551%" height="15" fill="rgb(244,186,29)" fg:x="116362" fg:w="88"/><text x="73.0518%" y="303.50"></text></g><g><title>xas_load (19 samples, 0.01%)</title><rect x="72.8568%" y="309" width="0.0119%" height="15" fill="rgb(234,111,31)" fg:x="116450" fg:w="19"/><text x="73.1068%" y="319.50"></text></g><g><title>xas_nomem (16 samples, 0.01%)</title><rect x="72.8687%" y="309" width="0.0100%" height="15" fill="rgb(241,149,10)" fg:x="116469" fg:w="16"/><text x="73.1187%" y="319.50"></text></g><g><title>workingset_update_node (70 samples, 0.04%)</title><rect x="73.0226%" y="293" width="0.0438%" height="15" fill="rgb(249,206,44)" fg:x="116715" fg:w="70"/><text x="73.2726%" y="303.50"></text></g><g><title>list_lru_del (39 samples, 0.02%)</title><rect x="73.0420%" y="277" width="0.0244%" height="15" fill="rgb(251,153,30)" fg:x="116746" fg:w="39"/><text x="73.2920%" y="287.50"></text></g><g><title>__add_to_page_cache_locked (7,157 samples, 4.48%)</title><rect x="68.6318%" y="325" width="4.4778%" height="15" fill="rgb(239,152,38)" fg:x="109697" fg:w="7157"/><text x="68.8818%" y="335.50">__add..</text></g><g><title>xas_store (359 samples, 0.22%)</title><rect x="72.8850%" y="309" width="0.2246%" height="15" fill="rgb(249,139,47)" fg:x="116495" fg:w="359"/><text x="73.1350%" y="319.50"></text></g><g><title>xas_create (69 samples, 0.04%)</title><rect x="73.0664%" y="293" width="0.0432%" height="15" fill="rgb(244,64,35)" fg:x="116785" fg:w="69"/><text x="73.3164%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (22 samples, 0.01%)</title><rect x="73.1215%" y="325" width="0.0138%" height="15" fill="rgb(216,46,15)" fg:x="116873" fg:w="22"/><text x="73.3715%" y="335.50"></text></g><g><title>_raw_spin_lock_irq (21 samples, 0.01%)</title><rect x="73.1415%" y="325" width="0.0131%" height="15" fill="rgb(250,74,19)" fg:x="116905" fg:w="21"/><text x="73.3915%" y="335.50"></text></g><g><title>__read_end_io (34 samples, 0.02%)</title><rect x="73.3786%" y="53" width="0.0213%" height="15" fill="rgb(249,42,33)" fg:x="117284" fg:w="34"/><text x="73.6286%" y="63.50"></text></g><g><title>nvme_complete_rq (57 samples, 0.04%)</title><rect x="73.3730%" y="133" width="0.0357%" height="15" fill="rgb(242,149,17)" fg:x="117275" fg:w="57"/><text x="73.6230%" y="143.50"></text></g><g><title>blk_mq_end_request (57 samples, 0.04%)</title><rect x="73.3730%" y="117" width="0.0357%" height="15" fill="rgb(244,29,21)" fg:x="117275" fg:w="57"/><text x="73.6230%" y="127.50"></text></g><g><title>blk_update_request (56 samples, 0.04%)</title><rect x="73.3736%" y="101" width="0.0350%" height="15" fill="rgb(220,130,37)" fg:x="117276" fg:w="56"/><text x="73.6236%" y="111.50"></text></g><g><title>bio_endio (52 samples, 0.03%)</title><rect x="73.3761%" y="85" width="0.0325%" height="15" fill="rgb(211,67,2)" fg:x="117280" fg:w="52"/><text x="73.6261%" y="95.50"></text></g><g><title>mpage_end_io (48 samples, 0.03%)</title><rect x="73.3786%" y="69" width="0.0300%" height="15" fill="rgb(235,68,52)" fg:x="117284" fg:w="48"/><text x="73.6286%" y="79.50"></text></g><g><title>nvme_irq (70 samples, 0.04%)</title><rect x="73.3699%" y="181" width="0.0438%" height="15" fill="rgb(246,142,3)" fg:x="117270" fg:w="70"/><text x="73.6199%" y="191.50"></text></g><g><title>nvme_process_cq (70 samples, 0.04%)</title><rect x="73.3699%" y="165" width="0.0438%" height="15" fill="rgb(241,25,7)" fg:x="117270" fg:w="70"/><text x="73.6199%" y="175.50"></text></g><g><title>nvme_pci_complete_rq (65 samples, 0.04%)</title><rect x="73.3730%" y="149" width="0.0407%" height="15" fill="rgb(242,119,39)" fg:x="117275" fg:w="65"/><text x="73.6230%" y="159.50"></text></g><g><title>__handle_irq_event_percpu (71 samples, 0.04%)</title><rect x="73.3699%" y="197" width="0.0444%" height="15" fill="rgb(241,98,45)" fg:x="117270" fg:w="71"/><text x="73.6199%" y="207.50"></text></g><g><title>handle_irq_event (73 samples, 0.05%)</title><rect x="73.3692%" y="213" width="0.0457%" height="15" fill="rgb(254,28,30)" fg:x="117269" fg:w="73"/><text x="73.6192%" y="223.50"></text></g><g><title>asm_common_interrupt (77 samples, 0.05%)</title><rect x="73.3674%" y="277" width="0.0482%" height="15" fill="rgb(241,142,54)" fg:x="117266" fg:w="77"/><text x="73.6174%" y="287.50"></text></g><g><title>common_interrupt (77 samples, 0.05%)</title><rect x="73.3674%" y="261" width="0.0482%" height="15" fill="rgb(222,85,15)" fg:x="117266" fg:w="77"/><text x="73.6174%" y="271.50"></text></g><g><title>__common_interrupt (76 samples, 0.05%)</title><rect x="73.3680%" y="245" width="0.0475%" height="15" fill="rgb(210,85,47)" fg:x="117267" fg:w="76"/><text x="73.6180%" y="255.50"></text></g><g><title>handle_edge_irq (74 samples, 0.05%)</title><rect x="73.3692%" y="229" width="0.0463%" height="15" fill="rgb(224,206,25)" fg:x="117269" fg:w="74"/><text x="73.6192%" y="239.50"></text></g><g><title>__lock_text_start (86 samples, 0.05%)</title><rect x="73.3636%" y="293" width="0.0538%" height="15" fill="rgb(243,201,19)" fg:x="117260" fg:w="86"/><text x="73.6136%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (143 samples, 0.09%)</title><rect x="73.9267%" y="261" width="0.0895%" height="15" fill="rgb(236,59,4)" fg:x="118160" fg:w="143"/><text x="74.1767%" y="271.50"></text></g><g><title>cgroup_rstat_updated (37 samples, 0.02%)</title><rect x="73.9930%" y="245" width="0.0231%" height="15" fill="rgb(254,179,45)" fg:x="118266" fg:w="37"/><text x="74.2430%" y="255.50"></text></g><g><title>__mod_node_page_state (73 samples, 0.05%)</title><rect x="74.0162%" y="261" width="0.0457%" height="15" fill="rgb(226,14,10)" fg:x="118303" fg:w="73"/><text x="74.2662%" y="271.50"></text></g><g><title>__mod_lruvec_state (246 samples, 0.15%)</title><rect x="73.9104%" y="277" width="0.1539%" height="15" fill="rgb(244,27,41)" fg:x="118134" fg:w="246"/><text x="74.1604%" y="287.50"></text></g><g><title>__mod_node_page_state (30 samples, 0.02%)</title><rect x="74.0693%" y="277" width="0.0188%" height="15" fill="rgb(235,35,32)" fg:x="118388" fg:w="30"/><text x="74.3193%" y="287.50"></text></g><g><title>__mod_zone_page_state (67 samples, 0.04%)</title><rect x="74.0881%" y="277" width="0.0419%" height="15" fill="rgb(218,68,31)" fg:x="118418" fg:w="67"/><text x="74.3381%" y="287.50"></text></g><g><title>mem_cgroup_update_lru_size (56 samples, 0.04%)</title><rect x="74.1300%" y="277" width="0.0350%" height="15" fill="rgb(207,120,37)" fg:x="118485" fg:w="56"/><text x="74.3800%" y="287.50"></text></g><g><title>page_mapping (135 samples, 0.08%)</title><rect x="74.1651%" y="277" width="0.0845%" height="15" fill="rgb(227,98,0)" fg:x="118541" fg:w="135"/><text x="74.4151%" y="287.50"></text></g><g><title>__pagevec_lru_add_fn (1,317 samples, 0.82%)</title><rect x="73.4274%" y="293" width="0.8240%" height="15" fill="rgb(207,7,3)" fg:x="117362" fg:w="1317"/><text x="73.6774%" y="303.50"></text></g><g><title>lock_page_lruvec_irqsave (135 samples, 0.08%)</title><rect x="74.2527%" y="293" width="0.0845%" height="15" fill="rgb(206,98,19)" fg:x="118681" fg:w="135"/><text x="74.5027%" y="303.50"></text></g><g><title>_raw_spin_lock_irqsave (120 samples, 0.08%)</title><rect x="74.2620%" y="277" width="0.0751%" height="15" fill="rgb(217,5,26)" fg:x="118696" fg:w="120"/><text x="74.5120%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath (81 samples, 0.05%)</title><rect x="74.2864%" y="261" width="0.0507%" height="15" fill="rgb(235,190,38)" fg:x="118735" fg:w="81"/><text x="74.5364%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (81 samples, 0.05%)</title><rect x="74.2864%" y="245" width="0.0507%" height="15" fill="rgb(247,86,24)" fg:x="118735" fg:w="81"/><text x="74.5364%" y="255.50"></text></g><g><title>page_mapping (20 samples, 0.01%)</title><rect x="74.3403%" y="293" width="0.0125%" height="15" fill="rgb(205,101,16)" fg:x="118821" fg:w="20"/><text x="74.5903%" y="303.50"></text></g><g><title>__pagevec_lru_add (1,884 samples, 1.18%)</title><rect x="73.3029%" y="309" width="1.1787%" height="15" fill="rgb(246,168,33)" fg:x="117163" fg:w="1884"/><text x="73.5529%" y="319.50"></text></g><g><title>release_pages (200 samples, 0.13%)</title><rect x="74.3565%" y="293" width="0.1251%" height="15" fill="rgb(231,114,1)" fg:x="118847" fg:w="200"/><text x="74.6065%" y="303.50"></text></g><g><title>lru_cache_add (2,130 samples, 1.33%)</title><rect x="73.1590%" y="325" width="1.3326%" height="15" fill="rgb(207,184,53)" fg:x="116933" fg:w="2130"/><text x="73.4090%" y="335.50"></text></g><g><title>mem_cgroup_flush_stats_delayed (43 samples, 0.03%)</title><rect x="74.4917%" y="325" width="0.0269%" height="15" fill="rgb(224,95,51)" fg:x="119063" fg:w="43"/><text x="74.7417%" y="335.50"></text></g><g><title>mem_cgroup_from_id (22 samples, 0.01%)</title><rect x="74.5186%" y="325" width="0.0138%" height="15" fill="rgb(212,188,45)" fg:x="119106" fg:w="22"/><text x="74.7686%" y="335.50"></text></g><g><title>__mod_lruvec_state (17 samples, 0.01%)</title><rect x="74.7569%" y="309" width="0.0106%" height="15" fill="rgb(223,154,38)" fg:x="119487" fg:w="17"/><text x="75.0069%" y="319.50"></text></g><g><title>asm_common_interrupt (17 samples, 0.01%)</title><rect x="74.7676%" y="309" width="0.0106%" height="15" fill="rgb(251,22,52)" fg:x="119504" fg:w="17"/><text x="75.0176%" y="319.50"></text></g><g><title>common_interrupt (16 samples, 0.01%)</title><rect x="74.7682%" y="293" width="0.0100%" height="15" fill="rgb(229,209,22)" fg:x="119505" fg:w="16"/><text x="75.0182%" y="303.50"></text></g><g><title>__common_interrupt (16 samples, 0.01%)</title><rect x="74.7682%" y="277" width="0.0100%" height="15" fill="rgb(234,138,34)" fg:x="119505" fg:w="16"/><text x="75.0182%" y="287.50"></text></g><g><title>handle_edge_irq (16 samples, 0.01%)</title><rect x="74.7682%" y="261" width="0.0100%" height="15" fill="rgb(212,95,11)" fg:x="119505" fg:w="16"/><text x="75.0182%" y="271.50"></text></g><g><title>handle_irq_event (16 samples, 0.01%)</title><rect x="74.7682%" y="245" width="0.0100%" height="15" fill="rgb(240,179,47)" fg:x="119505" fg:w="16"/><text x="75.0182%" y="255.50"></text></g><g><title>__handle_irq_event_percpu (16 samples, 0.01%)</title><rect x="74.7682%" y="229" width="0.0100%" height="15" fill="rgb(240,163,11)" fg:x="119505" fg:w="16"/><text x="75.0182%" y="239.50"></text></g><g><title>nvme_irq (16 samples, 0.01%)</title><rect x="74.7682%" y="213" width="0.0100%" height="15" fill="rgb(236,37,12)" fg:x="119505" fg:w="16"/><text x="75.0182%" y="223.50"></text></g><g><title>nvme_process_cq (16 samples, 0.01%)</title><rect x="74.7682%" y="197" width="0.0100%" height="15" fill="rgb(232,164,16)" fg:x="119505" fg:w="16"/><text x="75.0182%" y="207.50"></text></g><g><title>nvme_pci_complete_rq (16 samples, 0.01%)</title><rect x="74.7682%" y="181" width="0.0100%" height="15" fill="rgb(244,205,15)" fg:x="119505" fg:w="16"/><text x="75.0182%" y="191.50"></text></g><g><title>__radix_tree_lookup (18 samples, 0.01%)</title><rect x="74.7976%" y="277" width="0.0113%" height="15" fill="rgb(223,117,47)" fg:x="119552" fg:w="18"/><text x="75.0476%" y="287.50"></text></g><g><title>asm_common_interrupt (23 samples, 0.01%)</title><rect x="74.9878%" y="245" width="0.0144%" height="15" fill="rgb(244,107,35)" fg:x="119856" fg:w="23"/><text x="75.2378%" y="255.50"></text></g><g><title>common_interrupt (23 samples, 0.01%)</title><rect x="74.9878%" y="229" width="0.0144%" height="15" fill="rgb(205,140,8)" fg:x="119856" fg:w="23"/><text x="75.2378%" y="239.50"></text></g><g><title>__common_interrupt (23 samples, 0.01%)</title><rect x="74.9878%" y="213" width="0.0144%" height="15" fill="rgb(228,84,46)" fg:x="119856" fg:w="23"/><text x="75.2378%" y="223.50"></text></g><g><title>handle_edge_irq (23 samples, 0.01%)</title><rect x="74.9878%" y="197" width="0.0144%" height="15" fill="rgb(254,188,9)" fg:x="119856" fg:w="23"/><text x="75.2378%" y="207.50"></text></g><g><title>handle_irq_event (23 samples, 0.01%)</title><rect x="74.9878%" y="181" width="0.0144%" height="15" fill="rgb(206,112,54)" fg:x="119856" fg:w="23"/><text x="75.2378%" y="191.50"></text></g><g><title>__handle_irq_event_percpu (23 samples, 0.01%)</title><rect x="74.9878%" y="165" width="0.0144%" height="15" fill="rgb(216,84,49)" fg:x="119856" fg:w="23"/><text x="75.2378%" y="175.50"></text></g><g><title>nvme_irq (23 samples, 0.01%)</title><rect x="74.9878%" y="149" width="0.0144%" height="15" fill="rgb(214,194,35)" fg:x="119856" fg:w="23"/><text x="75.2378%" y="159.50"></text></g><g><title>nvme_process_cq (23 samples, 0.01%)</title><rect x="74.9878%" y="133" width="0.0144%" height="15" fill="rgb(249,28,3)" fg:x="119856" fg:w="23"/><text x="75.2378%" y="143.50"></text></g><g><title>nvme_pci_complete_rq (22 samples, 0.01%)</title><rect x="74.9884%" y="117" width="0.0138%" height="15" fill="rgb(222,56,52)" fg:x="119857" fg:w="22"/><text x="75.2384%" y="127.50"></text></g><g><title>nvme_complete_rq (22 samples, 0.01%)</title><rect x="74.9884%" y="101" width="0.0138%" height="15" fill="rgb(245,217,50)" fg:x="119857" fg:w="22"/><text x="75.2384%" y="111.50"></text></g><g><title>blk_mq_end_request (22 samples, 0.01%)</title><rect x="74.9884%" y="85" width="0.0138%" height="15" fill="rgb(213,201,24)" fg:x="119857" fg:w="22"/><text x="75.2384%" y="95.50"></text></g><g><title>blk_update_request (21 samples, 0.01%)</title><rect x="74.9891%" y="69" width="0.0131%" height="15" fill="rgb(248,116,28)" fg:x="119858" fg:w="21"/><text x="75.2391%" y="79.50"></text></g><g><title>bio_endio (19 samples, 0.01%)</title><rect x="74.9903%" y="53" width="0.0119%" height="15" fill="rgb(219,72,43)" fg:x="119860" fg:w="19"/><text x="75.2403%" y="63.50"></text></g><g><title>mpage_end_io (19 samples, 0.01%)</title><rect x="74.9903%" y="37" width="0.0119%" height="15" fill="rgb(209,138,14)" fg:x="119860" fg:w="19"/><text x="75.2403%" y="47.50"></text></g><g><title>idr_find (340 samples, 0.21%)</title><rect x="74.7901%" y="293" width="0.2127%" height="15" fill="rgb(222,18,33)" fg:x="119540" fg:w="340"/><text x="75.0401%" y="303.50"></text></g><g><title>radix_tree_lookup (309 samples, 0.19%)</title><rect x="74.8095%" y="277" width="0.1933%" height="15" fill="rgb(213,199,7)" fg:x="119571" fg:w="309"/><text x="75.0595%" y="287.50"></text></g><g><title>__radix_tree_lookup (304 samples, 0.19%)</title><rect x="74.8126%" y="261" width="0.1902%" height="15" fill="rgb(250,110,10)" fg:x="119576" fg:w="304"/><text x="75.0626%" y="271.50"></text></g><g><title>mem_cgroup_from_id (362 samples, 0.23%)</title><rect x="74.7832%" y="309" width="0.2265%" height="15" fill="rgb(248,123,6)" fg:x="119529" fg:w="362"/><text x="75.0332%" y="319.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (168 samples, 0.11%)</title><rect x="75.0097%" y="309" width="0.1051%" height="15" fill="rgb(206,91,31)" fg:x="119891" fg:w="168"/><text x="75.2597%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (161 samples, 0.10%)</title><rect x="75.1930%" y="277" width="0.1007%" height="15" fill="rgb(211,154,13)" fg:x="120184" fg:w="161"/><text x="75.4430%" y="287.50"></text></g><g><title>cgroup_rstat_updated (51 samples, 0.03%)</title><rect x="75.2618%" y="261" width="0.0319%" height="15" fill="rgb(225,148,7)" fg:x="120294" fg:w="51"/><text x="75.5118%" y="271.50"></text></g><g><title>__mod_node_page_state (56 samples, 0.04%)</title><rect x="75.2937%" y="277" width="0.0350%" height="15" fill="rgb(220,160,43)" fg:x="120345" fg:w="56"/><text x="75.5437%" y="287.50"></text></g><g><title>__mod_lruvec_state (271 samples, 0.17%)</title><rect x="75.1655%" y="293" width="0.1696%" height="15" fill="rgb(213,52,39)" fg:x="120140" fg:w="271"/><text x="75.4155%" y="303.50"></text></g><g><title>__mod_node_page_state (18 samples, 0.01%)</title><rect x="75.3388%" y="293" width="0.0113%" height="15" fill="rgb(243,137,7)" fg:x="120417" fg:w="18"/><text x="75.5888%" y="303.50"></text></g><g><title>nvme_complete_rq (16 samples, 0.01%)</title><rect x="75.3507%" y="149" width="0.0100%" height="15" fill="rgb(230,79,13)" fg:x="120436" fg:w="16"/><text x="75.6007%" y="159.50"></text></g><g><title>blk_mq_end_request (16 samples, 0.01%)</title><rect x="75.3507%" y="133" width="0.0100%" height="15" fill="rgb(247,105,23)" fg:x="120436" fg:w="16"/><text x="75.6007%" y="143.50"></text></g><g><title>blk_update_request (16 samples, 0.01%)</title><rect x="75.3507%" y="117" width="0.0100%" height="15" fill="rgb(223,179,41)" fg:x="120436" fg:w="16"/><text x="75.6007%" y="127.50"></text></g><g><title>mod_lruvec_state.constprop.0 (394 samples, 0.25%)</title><rect x="75.1148%" y="309" width="0.2465%" height="15" fill="rgb(218,9,34)" fg:x="120059" fg:w="394"/><text x="75.3648%" y="319.50"></text></g><g><title>asm_common_interrupt (18 samples, 0.01%)</title><rect x="75.3501%" y="293" width="0.0113%" height="15" fill="rgb(222,106,8)" fg:x="120435" fg:w="18"/><text x="75.6001%" y="303.50"></text></g><g><title>common_interrupt (18 samples, 0.01%)</title><rect x="75.3501%" y="277" width="0.0113%" height="15" fill="rgb(211,220,0)" fg:x="120435" fg:w="18"/><text x="75.6001%" y="287.50"></text></g><g><title>__common_interrupt (18 samples, 0.01%)</title><rect x="75.3501%" y="261" width="0.0113%" height="15" fill="rgb(229,52,16)" fg:x="120435" fg:w="18"/><text x="75.6001%" y="271.50"></text></g><g><title>handle_edge_irq (18 samples, 0.01%)</title><rect x="75.3501%" y="245" width="0.0113%" height="15" fill="rgb(212,155,18)" fg:x="120435" fg:w="18"/><text x="75.6001%" y="255.50"></text></g><g><title>handle_irq_event (18 samples, 0.01%)</title><rect x="75.3501%" y="229" width="0.0113%" height="15" fill="rgb(242,21,14)" fg:x="120435" fg:w="18"/><text x="75.6001%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (18 samples, 0.01%)</title><rect x="75.3501%" y="213" width="0.0113%" height="15" fill="rgb(222,19,48)" fg:x="120435" fg:w="18"/><text x="75.6001%" y="223.50"></text></g><g><title>nvme_irq (18 samples, 0.01%)</title><rect x="75.3501%" y="197" width="0.0113%" height="15" fill="rgb(232,45,27)" fg:x="120435" fg:w="18"/><text x="75.6001%" y="207.50"></text></g><g><title>nvme_process_cq (18 samples, 0.01%)</title><rect x="75.3501%" y="181" width="0.0113%" height="15" fill="rgb(249,103,42)" fg:x="120435" fg:w="18"/><text x="75.6001%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (17 samples, 0.01%)</title><rect x="75.3507%" y="165" width="0.0106%" height="15" fill="rgb(246,81,33)" fg:x="120436" fg:w="17"/><text x="75.6007%" y="175.50"></text></g><g><title>workingset_refault (1,297 samples, 0.81%)</title><rect x="74.5523%" y="325" width="0.8115%" height="15" fill="rgb(252,33,42)" fg:x="119160" fg:w="1297"/><text x="74.8023%" y="335.50"></text></g><g><title>xa_get_order (17 samples, 0.01%)</title><rect x="75.3638%" y="325" width="0.0106%" height="15" fill="rgb(209,212,41)" fg:x="120457" fg:w="17"/><text x="75.6138%" y="335.50"></text></g><g><title>xas_find_conflict (33 samples, 0.02%)</title><rect x="75.3745%" y="325" width="0.0206%" height="15" fill="rgb(207,154,6)" fg:x="120474" fg:w="33"/><text x="75.6245%" y="335.50"></text></g><g><title>add_to_page_cache_lru (11,016 samples, 6.89%)</title><rect x="68.5186%" y="341" width="6.8922%" height="15" fill="rgb(223,64,47)" fg:x="109516" fg:w="11016"/><text x="68.7686%" y="351.50">add_to_pa..</text></g><g><title>alloc_pages (19 samples, 0.01%)</title><rect x="75.4107%" y="341" width="0.0119%" height="15" fill="rgb(211,161,38)" fg:x="120532" fg:w="19"/><text x="75.6607%" y="351.50"></text></g><g><title>lru_cache_add (26 samples, 0.02%)</title><rect x="75.4301%" y="341" width="0.0163%" height="15" fill="rgb(219,138,40)" fg:x="120563" fg:w="26"/><text x="75.6801%" y="351.50"></text></g><g><title>__blk_bios_map_sg (31 samples, 0.02%)</title><rect x="75.4689%" y="181" width="0.0194%" height="15" fill="rgb(241,228,46)" fg:x="120625" fg:w="31"/><text x="75.7189%" y="191.50"></text></g><g><title>__blk_rq_map_sg (34 samples, 0.02%)</title><rect x="75.4689%" y="197" width="0.0213%" height="15" fill="rgb(223,209,38)" fg:x="120625" fg:w="34"/><text x="75.7189%" y="207.50"></text></g><g><title>dma_direct_map_sg (27 samples, 0.02%)</title><rect x="75.4933%" y="165" width="0.0169%" height="15" fill="rgb(236,164,45)" fg:x="120664" fg:w="27"/><text x="75.7433%" y="175.50"></text></g><g><title>dma_direct_map_page (17 samples, 0.01%)</title><rect x="75.4996%" y="149" width="0.0106%" height="15" fill="rgb(231,15,5)" fg:x="120674" fg:w="17"/><text x="75.7496%" y="159.50"></text></g><g><title>dma_map_sg_attrs (34 samples, 0.02%)</title><rect x="75.4914%" y="197" width="0.0213%" height="15" fill="rgb(252,35,15)" fg:x="120661" fg:w="34"/><text x="75.7414%" y="207.50"></text></g><g><title>__dma_map_sg_attrs (34 samples, 0.02%)</title><rect x="75.4914%" y="181" width="0.0213%" height="15" fill="rgb(248,181,18)" fg:x="120661" fg:w="34"/><text x="75.7414%" y="191.50"></text></g><g><title>mempool_alloc (17 samples, 0.01%)</title><rect x="75.5127%" y="197" width="0.0106%" height="15" fill="rgb(233,39,42)" fg:x="120695" fg:w="17"/><text x="75.7627%" y="207.50"></text></g><g><title>mempool_kmalloc (17 samples, 0.01%)</title><rect x="75.5127%" y="181" width="0.0106%" height="15" fill="rgb(238,110,33)" fg:x="120695" fg:w="17"/><text x="75.7627%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (33 samples, 0.02%)</title><rect x="75.5259%" y="197" width="0.0206%" height="15" fill="rgb(233,195,10)" fg:x="120716" fg:w="33"/><text x="75.7759%" y="207.50"></text></g><g><title>nvme_map_data (132 samples, 0.08%)</title><rect x="75.4683%" y="213" width="0.0826%" height="15" fill="rgb(254,105,3)" fg:x="120624" fg:w="132"/><text x="75.7183%" y="223.50"></text></g><g><title>blk_finish_plug (155 samples, 0.10%)</title><rect x="75.4570%" y="325" width="0.0970%" height="15" fill="rgb(221,225,9)" fg:x="120606" fg:w="155"/><text x="75.7070%" y="335.50"></text></g><g><title>blk_flush_plug_list (155 samples, 0.10%)</title><rect x="75.4570%" y="309" width="0.0970%" height="15" fill="rgb(224,227,45)" fg:x="120606" fg:w="155"/><text x="75.7070%" y="319.50"></text></g><g><title>blk_mq_flush_plug_list (155 samples, 0.10%)</title><rect x="75.4570%" y="293" width="0.0970%" height="15" fill="rgb(229,198,43)" fg:x="120606" fg:w="155"/><text x="75.7070%" y="303.50"></text></g><g><title>blk_mq_sched_insert_requests (151 samples, 0.09%)</title><rect x="75.4595%" y="277" width="0.0945%" height="15" fill="rgb(206,209,35)" fg:x="120610" fg:w="151"/><text x="75.7095%" y="287.50"></text></g><g><title>blk_mq_try_issue_list_directly (151 samples, 0.09%)</title><rect x="75.4595%" y="261" width="0.0945%" height="15" fill="rgb(245,195,53)" fg:x="120610" fg:w="151"/><text x="75.7095%" y="271.50"></text></g><g><title>__blk_mq_try_issue_directly (147 samples, 0.09%)</title><rect x="75.4620%" y="245" width="0.0920%" height="15" fill="rgb(240,92,26)" fg:x="120614" fg:w="147"/><text x="75.7120%" y="255.50"></text></g><g><title>nvme_queue_rq (144 samples, 0.09%)</title><rect x="75.4639%" y="229" width="0.0901%" height="15" fill="rgb(207,40,23)" fg:x="120617" fg:w="144"/><text x="75.7139%" y="239.50"></text></g><g><title>nvme_complete_rq (16 samples, 0.01%)</title><rect x="76.2185%" y="149" width="0.0100%" height="15" fill="rgb(223,111,35)" fg:x="121823" fg:w="16"/><text x="76.4685%" y="159.50"></text></g><g><title>blk_mq_end_request (16 samples, 0.01%)</title><rect x="76.2185%" y="133" width="0.0100%" height="15" fill="rgb(229,147,28)" fg:x="121823" fg:w="16"/><text x="76.4685%" y="143.50"></text></g><g><title>blk_update_request (16 samples, 0.01%)</title><rect x="76.2185%" y="117" width="0.0100%" height="15" fill="rgb(211,29,28)" fg:x="121823" fg:w="16"/><text x="76.4685%" y="127.50"></text></g><g><title>asm_common_interrupt (20 samples, 0.01%)</title><rect x="76.2178%" y="293" width="0.0125%" height="15" fill="rgb(228,72,33)" fg:x="121822" fg:w="20"/><text x="76.4678%" y="303.50"></text></g><g><title>common_interrupt (20 samples, 0.01%)</title><rect x="76.2178%" y="277" width="0.0125%" height="15" fill="rgb(205,214,31)" fg:x="121822" fg:w="20"/><text x="76.4678%" y="287.50"></text></g><g><title>__common_interrupt (20 samples, 0.01%)</title><rect x="76.2178%" y="261" width="0.0125%" height="15" fill="rgb(224,111,15)" fg:x="121822" fg:w="20"/><text x="76.4678%" y="271.50"></text></g><g><title>handle_edge_irq (20 samples, 0.01%)</title><rect x="76.2178%" y="245" width="0.0125%" height="15" fill="rgb(253,21,26)" fg:x="121822" fg:w="20"/><text x="76.4678%" y="255.50"></text></g><g><title>handle_irq_event (19 samples, 0.01%)</title><rect x="76.2185%" y="229" width="0.0119%" height="15" fill="rgb(245,139,43)" fg:x="121823" fg:w="19"/><text x="76.4685%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (19 samples, 0.01%)</title><rect x="76.2185%" y="213" width="0.0119%" height="15" fill="rgb(252,170,7)" fg:x="121823" fg:w="19"/><text x="76.4685%" y="223.50"></text></g><g><title>nvme_irq (19 samples, 0.01%)</title><rect x="76.2185%" y="197" width="0.0119%" height="15" fill="rgb(231,118,14)" fg:x="121823" fg:w="19"/><text x="76.4685%" y="207.50"></text></g><g><title>nvme_process_cq (19 samples, 0.01%)</title><rect x="76.2185%" y="181" width="0.0119%" height="15" fill="rgb(238,83,0)" fg:x="121823" fg:w="19"/><text x="76.4685%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (19 samples, 0.01%)</title><rect x="76.2185%" y="165" width="0.0119%" height="15" fill="rgb(221,39,39)" fg:x="121823" fg:w="19"/><text x="76.4685%" y="175.50"></text></g><g><title>__bio_add_page (48 samples, 0.03%)</title><rect x="76.2766%" y="277" width="0.0300%" height="15" fill="rgb(222,119,46)" fg:x="121916" fg:w="48"/><text x="76.5266%" y="287.50"></text></g><g><title>__bio_try_merge_page (124 samples, 0.08%)</title><rect x="76.3067%" y="277" width="0.0776%" height="15" fill="rgb(222,165,49)" fg:x="121964" fg:w="124"/><text x="76.5567%" y="287.50"></text></g><g><title>bio_add_page (245 samples, 0.15%)</title><rect x="76.2328%" y="293" width="0.1533%" height="15" fill="rgb(219,113,52)" fg:x="121846" fg:w="245"/><text x="76.4828%" y="303.50"></text></g><g><title>bvec_alloc (20 samples, 0.01%)</title><rect x="76.3886%" y="277" width="0.0125%" height="15" fill="rgb(214,7,15)" fg:x="122095" fg:w="20"/><text x="76.6386%" y="287.50"></text></g><g><title>bio_alloc_bioset (35 samples, 0.02%)</title><rect x="76.3861%" y="293" width="0.0219%" height="15" fill="rgb(235,32,4)" fg:x="122091" fg:w="35"/><text x="76.6361%" y="303.50"></text></g><g><title>__check_block_validity.constprop.0 (23 samples, 0.01%)</title><rect x="76.4162%" y="277" width="0.0144%" height="15" fill="rgb(238,90,54)" fg:x="122139" fg:w="23"/><text x="76.6662%" y="287.50"></text></g><g><title>ext4_inode_block_valid (21 samples, 0.01%)</title><rect x="76.4174%" y="261" width="0.0131%" height="15" fill="rgb(213,208,19)" fg:x="122141" fg:w="21"/><text x="76.6674%" y="271.50"></text></g><g><title>ext4_map_blocks (49 samples, 0.03%)</title><rect x="76.4143%" y="293" width="0.0307%" height="15" fill="rgb(233,156,4)" fg:x="122136" fg:w="49"/><text x="76.6643%" y="303.50"></text></g><g><title>ext4_es_lookup_extent (23 samples, 0.01%)</title><rect x="76.4305%" y="277" width="0.0144%" height="15" fill="rgb(207,194,5)" fg:x="122162" fg:w="23"/><text x="76.6805%" y="287.50"></text></g><g><title>fscrypt_mergeable_bio (81 samples, 0.05%)</title><rect x="76.4449%" y="293" width="0.0507%" height="15" fill="rgb(206,111,30)" fg:x="122185" fg:w="81"/><text x="76.6949%" y="303.50"></text></g><g><title>__blk_mq_alloc_request (28 samples, 0.02%)</title><rect x="76.5156%" y="229" width="0.0175%" height="15" fill="rgb(243,70,54)" fg:x="122298" fg:w="28"/><text x="76.7656%" y="239.50"></text></g><g><title>bio_split (27 samples, 0.02%)</title><rect x="76.6114%" y="197" width="0.0169%" height="15" fill="rgb(242,28,8)" fg:x="122451" fg:w="27"/><text x="76.8614%" y="207.50"></text></g><g><title>blk_bio_segment_split (162 samples, 0.10%)</title><rect x="76.5382%" y="213" width="0.1014%" height="15" fill="rgb(219,106,18)" fg:x="122334" fg:w="162"/><text x="76.7882%" y="223.50"></text></g><g><title>bvec_split_segs (18 samples, 0.01%)</title><rect x="76.6283%" y="197" width="0.0113%" height="15" fill="rgb(244,222,10)" fg:x="122478" fg:w="18"/><text x="76.8783%" y="207.50"></text></g><g><title>__blk_queue_split (172 samples, 0.11%)</title><rect x="76.5344%" y="229" width="0.1076%" height="15" fill="rgb(236,179,52)" fg:x="122328" fg:w="172"/><text x="76.7844%" y="239.50"></text></g><g><title>blk_attempt_plug_merge (18 samples, 0.01%)</title><rect x="76.6633%" y="229" width="0.0113%" height="15" fill="rgb(213,23,39)" fg:x="122534" fg:w="18"/><text x="76.9133%" y="239.50"></text></g><g><title>__blk_bios_map_sg (95 samples, 0.06%)</title><rect x="76.6883%" y="101" width="0.0594%" height="15" fill="rgb(238,48,10)" fg:x="122574" fg:w="95"/><text x="76.9383%" y="111.50"></text></g><g><title>__blk_rq_map_sg (115 samples, 0.07%)</title><rect x="76.6883%" y="117" width="0.0719%" height="15" fill="rgb(251,196,23)" fg:x="122574" fg:w="115"/><text x="76.9383%" y="127.50"></text></g><g><title>sg_next (20 samples, 0.01%)</title><rect x="76.7478%" y="101" width="0.0125%" height="15" fill="rgb(250,152,24)" fg:x="122669" fg:w="20"/><text x="76.9978%" y="111.50"></text></g><g><title>dma_direct_map_sg (121 samples, 0.08%)</title><rect x="76.7640%" y="85" width="0.0757%" height="15" fill="rgb(209,150,17)" fg:x="122695" fg:w="121"/><text x="77.0140%" y="95.50"></text></g><g><title>dma_direct_map_page (78 samples, 0.05%)</title><rect x="76.7909%" y="69" width="0.0488%" height="15" fill="rgb(234,202,34)" fg:x="122738" fg:w="78"/><text x="77.0409%" y="79.50"></text></g><g><title>dma_map_sg_attrs (141 samples, 0.09%)</title><rect x="76.7603%" y="117" width="0.0882%" height="15" fill="rgb(253,148,53)" fg:x="122689" fg:w="141"/><text x="77.0103%" y="127.50"></text></g><g><title>__dma_map_sg_attrs (141 samples, 0.09%)</title><rect x="76.7603%" y="101" width="0.0882%" height="15" fill="rgb(218,129,16)" fg:x="122689" fg:w="141"/><text x="77.0103%" y="111.50"></text></g><g><title>mempool_alloc (22 samples, 0.01%)</title><rect x="76.8485%" y="117" width="0.0138%" height="15" fill="rgb(216,85,19)" fg:x="122830" fg:w="22"/><text x="77.0985%" y="127.50"></text></g><g><title>mempool_kmalloc (19 samples, 0.01%)</title><rect x="76.8504%" y="101" width="0.0119%" height="15" fill="rgb(235,228,7)" fg:x="122833" fg:w="19"/><text x="77.1004%" y="111.50"></text></g><g><title>nvme_pci_setup_prps (63 samples, 0.04%)</title><rect x="76.8666%" y="117" width="0.0394%" height="15" fill="rgb(245,175,0)" fg:x="122859" fg:w="63"/><text x="77.1166%" y="127.50"></text></g><g><title>nvme_map_data (376 samples, 0.24%)</title><rect x="76.6871%" y="133" width="0.2352%" height="15" fill="rgb(208,168,36)" fg:x="122572" fg:w="376"/><text x="76.9371%" y="143.50"></text></g><g><title>sg_next (26 samples, 0.02%)</title><rect x="76.9060%" y="117" width="0.0163%" height="15" fill="rgb(246,171,24)" fg:x="122922" fg:w="26"/><text x="77.1560%" y="127.50"></text></g><g><title>__blk_mq_try_issue_directly (400 samples, 0.25%)</title><rect x="76.6789%" y="165" width="0.2503%" height="15" fill="rgb(215,142,24)" fg:x="122559" fg:w="400"/><text x="76.9289%" y="175.50"></text></g><g><title>nvme_queue_rq (397 samples, 0.25%)</title><rect x="76.6808%" y="149" width="0.2484%" height="15" fill="rgb(250,187,7)" fg:x="122562" fg:w="397"/><text x="76.9308%" y="159.50"></text></g><g><title>blk_flush_plug_list (409 samples, 0.26%)</title><rect x="76.6745%" y="229" width="0.2559%" height="15" fill="rgb(228,66,33)" fg:x="122552" fg:w="409"/><text x="76.9245%" y="239.50"></text></g><g><title>blk_mq_flush_plug_list (408 samples, 0.26%)</title><rect x="76.6752%" y="213" width="0.2553%" height="15" fill="rgb(234,215,21)" fg:x="122553" fg:w="408"/><text x="76.9252%" y="223.50"></text></g><g><title>blk_mq_sched_insert_requests (408 samples, 0.26%)</title><rect x="76.6752%" y="197" width="0.2553%" height="15" fill="rgb(222,191,20)" fg:x="122553" fg:w="408"/><text x="76.9252%" y="207.50"></text></g><g><title>blk_mq_try_issue_list_directly (406 samples, 0.25%)</title><rect x="76.6764%" y="181" width="0.2540%" height="15" fill="rgb(245,79,54)" fg:x="122555" fg:w="406"/><text x="76.9264%" y="191.50"></text></g><g><title>blk_mq_submit_bio (672 samples, 0.42%)</title><rect x="76.5125%" y="245" width="0.4204%" height="15" fill="rgb(240,10,37)" fg:x="122293" fg:w="672"/><text x="76.7625%" y="255.50"></text></g><g><title>__submit_bio (716 samples, 0.45%)</title><rect x="76.5075%" y="261" width="0.4480%" height="15" fill="rgb(214,192,32)" fg:x="122285" fg:w="716"/><text x="76.7575%" y="271.50"></text></g><g><title>submit_bio_checks (32 samples, 0.02%)</title><rect x="76.9354%" y="245" width="0.0200%" height="15" fill="rgb(209,36,54)" fg:x="122969" fg:w="32"/><text x="77.1854%" y="255.50"></text></g><g><title>submit_bio (724 samples, 0.45%)</title><rect x="76.5037%" y="293" width="0.4530%" height="15" fill="rgb(220,10,11)" fg:x="122279" fg:w="724"/><text x="76.7537%" y="303.50"></text></g><g><title>submit_bio_noacct (721 samples, 0.45%)</title><rect x="76.5056%" y="277" width="0.4511%" height="15" fill="rgb(221,106,17)" fg:x="122282" fg:w="721"/><text x="76.7556%" y="287.50"></text></g><g><title>xas_load (447 samples, 0.28%)</title><rect x="76.9849%" y="277" width="0.2797%" height="15" fill="rgb(251,142,44)" fg:x="123048" fg:w="447"/><text x="77.2349%" y="287.50"></text></g><g><title>xas_start (95 samples, 0.06%)</title><rect x="77.2051%" y="261" width="0.0594%" height="15" fill="rgb(238,13,15)" fg:x="123400" fg:w="95"/><text x="77.4551%" y="271.50"></text></g><g><title>xa_load (500 samples, 0.31%)</title><rect x="76.9567%" y="293" width="0.3128%" height="15" fill="rgb(208,107,27)" fg:x="123003" fg:w="500"/><text x="77.2067%" y="303.50"></text></g><g><title>ext4_mpage_readpages (2,736 samples, 1.71%)</title><rect x="75.5621%" y="309" width="1.7118%" height="15" fill="rgb(205,136,37)" fg:x="120774" fg:w="2736"/><text x="75.8121%" y="319.50"></text></g><g><title>read_pages (2,936 samples, 1.84%)</title><rect x="75.4558%" y="341" width="1.8369%" height="15" fill="rgb(250,205,27)" fg:x="120604" fg:w="2936"/><text x="75.7058%" y="351.50">r..</text></g><g><title>ext4_readahead (2,779 samples, 1.74%)</title><rect x="75.5540%" y="325" width="1.7387%" height="15" fill="rgb(210,80,43)" fg:x="120761" fg:w="2779"/><text x="75.8040%" y="335.50"></text></g><g><title>xa_load (16 samples, 0.01%)</title><rect x="77.2827%" y="309" width="0.0100%" height="15" fill="rgb(247,160,36)" fg:x="123524" fg:w="16"/><text x="77.5327%" y="319.50"></text></g><g><title>__read_end_io (16 samples, 0.01%)</title><rect x="77.6474%" y="85" width="0.0100%" height="15" fill="rgb(234,13,49)" fg:x="124107" fg:w="16"/><text x="77.8974%" y="95.50"></text></g><g><title>handle_irq_event (22 samples, 0.01%)</title><rect x="77.6468%" y="245" width="0.0138%" height="15" fill="rgb(234,122,0)" fg:x="124106" fg:w="22"/><text x="77.8968%" y="255.50"></text></g><g><title>__handle_irq_event_percpu (22 samples, 0.01%)</title><rect x="77.6468%" y="229" width="0.0138%" height="15" fill="rgb(207,146,38)" fg:x="124106" fg:w="22"/><text x="77.8968%" y="239.50"></text></g><g><title>nvme_irq (22 samples, 0.01%)</title><rect x="77.6468%" y="213" width="0.0138%" height="15" fill="rgb(207,177,25)" fg:x="124106" fg:w="22"/><text x="77.8968%" y="223.50"></text></g><g><title>nvme_process_cq (22 samples, 0.01%)</title><rect x="77.6468%" y="197" width="0.0138%" height="15" fill="rgb(211,178,42)" fg:x="124106" fg:w="22"/><text x="77.8968%" y="207.50"></text></g><g><title>nvme_pci_complete_rq (22 samples, 0.01%)</title><rect x="77.6468%" y="181" width="0.0138%" height="15" fill="rgb(230,69,54)" fg:x="124106" fg:w="22"/><text x="77.8968%" y="191.50"></text></g><g><title>nvme_complete_rq (22 samples, 0.01%)</title><rect x="77.6468%" y="165" width="0.0138%" height="15" fill="rgb(214,135,41)" fg:x="124106" fg:w="22"/><text x="77.8968%" y="175.50"></text></g><g><title>blk_mq_end_request (22 samples, 0.01%)</title><rect x="77.6468%" y="149" width="0.0138%" height="15" fill="rgb(237,67,25)" fg:x="124106" fg:w="22"/><text x="77.8968%" y="159.50"></text></g><g><title>blk_update_request (22 samples, 0.01%)</title><rect x="77.6468%" y="133" width="0.0138%" height="15" fill="rgb(222,189,50)" fg:x="124106" fg:w="22"/><text x="77.8968%" y="143.50"></text></g><g><title>bio_endio (21 samples, 0.01%)</title><rect x="77.6474%" y="117" width="0.0131%" height="15" fill="rgb(245,148,34)" fg:x="124107" fg:w="21"/><text x="77.8974%" y="127.50"></text></g><g><title>mpage_end_io (21 samples, 0.01%)</title><rect x="77.6474%" y="101" width="0.0131%" height="15" fill="rgb(222,29,6)" fg:x="124107" fg:w="21"/><text x="77.8974%" y="111.50"></text></g><g><title>asm_common_interrupt (23 samples, 0.01%)</title><rect x="77.6468%" y="309" width="0.0144%" height="15" fill="rgb(221,189,43)" fg:x="124106" fg:w="23"/><text x="77.8968%" y="319.50"></text></g><g><title>common_interrupt (23 samples, 0.01%)</title><rect x="77.6468%" y="293" width="0.0144%" height="15" fill="rgb(207,36,27)" fg:x="124106" fg:w="23"/><text x="77.8968%" y="303.50"></text></g><g><title>__common_interrupt (23 samples, 0.01%)</title><rect x="77.6468%" y="277" width="0.0144%" height="15" fill="rgb(217,90,24)" fg:x="124106" fg:w="23"/><text x="77.8968%" y="287.50"></text></g><g><title>handle_edge_irq (23 samples, 0.01%)</title><rect x="77.6468%" y="261" width="0.0144%" height="15" fill="rgb(224,66,35)" fg:x="124106" fg:w="23"/><text x="77.8968%" y="271.50"></text></g><g><title>xas_load (615 samples, 0.38%)</title><rect x="77.3477%" y="325" width="0.3848%" height="15" fill="rgb(221,13,50)" fg:x="123628" fg:w="615"/><text x="77.5977%" y="335.50"></text></g><g><title>xas_start (110 samples, 0.07%)</title><rect x="77.6637%" y="309" width="0.0688%" height="15" fill="rgb(236,68,49)" fg:x="124133" fg:w="110"/><text x="77.9137%" y="319.50"></text></g><g><title>xa_load (709 samples, 0.44%)</title><rect x="77.2958%" y="341" width="0.4436%" height="15" fill="rgb(229,146,28)" fg:x="123545" fg:w="709"/><text x="77.5458%" y="351.50"></text></g><g><title>page_cache_ra_unbounded (21,521 samples, 13.46%)</title><rect x="64.2823%" y="357" width="13.4646%" height="15" fill="rgb(225,31,38)" fg:x="102745" fg:w="21521"/><text x="64.5323%" y="367.50">page_cache_ra_unboun..</text></g><g><title>page_cache_async_ra (21,597 samples, 13.51%)</title><rect x="64.2485%" y="389" width="13.5121%" height="15" fill="rgb(250,208,3)" fg:x="102691" fg:w="21597"/><text x="64.4985%" y="399.50">page_cache_async_ra</text></g><g><title>ondemand_readahead (21,587 samples, 13.51%)</title><rect x="64.2548%" y="373" width="13.5059%" height="15" fill="rgb(246,54,23)" fg:x="102701" fg:w="21587"/><text x="64.5048%" y="383.50">ondemand_readahead</text></g><g><title>xa_load (20 samples, 0.01%)</title><rect x="77.7482%" y="357" width="0.0125%" height="15" fill="rgb(243,76,11)" fg:x="124268" fg:w="20"/><text x="77.9982%" y="367.50"></text></g><g><title>shrink_lruvec (17 samples, 0.01%)</title><rect x="77.7632%" y="213" width="0.0106%" height="15" fill="rgb(245,21,50)" fg:x="124292" fg:w="17"/><text x="78.0132%" y="223.50"></text></g><g><title>shrink_inactive_list (17 samples, 0.01%)</title><rect x="77.7632%" y="197" width="0.0106%" height="15" fill="rgb(228,9,43)" fg:x="124292" fg:w="17"/><text x="78.0132%" y="207.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (18 samples, 0.01%)</title><rect x="77.7632%" y="293" width="0.0113%" height="15" fill="rgb(208,100,47)" fg:x="124292" fg:w="18"/><text x="78.0132%" y="303.50"></text></g><g><title>try_to_free_pages (18 samples, 0.01%)</title><rect x="77.7632%" y="277" width="0.0113%" height="15" fill="rgb(232,26,8)" fg:x="124292" fg:w="18"/><text x="78.0132%" y="287.50"></text></g><g><title>do_try_to_free_pages (18 samples, 0.01%)</title><rect x="77.7632%" y="261" width="0.0113%" height="15" fill="rgb(216,166,38)" fg:x="124292" fg:w="18"/><text x="78.0132%" y="271.50"></text></g><g><title>shrink_node (18 samples, 0.01%)</title><rect x="77.7632%" y="245" width="0.0113%" height="15" fill="rgb(251,202,51)" fg:x="124292" fg:w="18"/><text x="78.0132%" y="255.50"></text></g><g><title>shrink_node_memcgs (18 samples, 0.01%)</title><rect x="77.7632%" y="229" width="0.0113%" height="15" fill="rgb(254,216,34)" fg:x="124292" fg:w="18"/><text x="78.0132%" y="239.50"></text></g><g><title>__alloc_pages (32 samples, 0.02%)</title><rect x="77.7632%" y="309" width="0.0200%" height="15" fill="rgb(251,32,27)" fg:x="124292" fg:w="32"/><text x="78.0132%" y="319.50"></text></g><g><title>__page_cache_alloc (37 samples, 0.02%)</title><rect x="77.7613%" y="341" width="0.0231%" height="15" fill="rgb(208,127,28)" fg:x="124289" fg:w="37"/><text x="78.0113%" y="351.50"></text></g><g><title>alloc_pages (35 samples, 0.02%)</title><rect x="77.7626%" y="325" width="0.0219%" height="15" fill="rgb(224,137,22)" fg:x="124291" fg:w="35"/><text x="78.0126%" y="335.50"></text></g><g><title>__add_to_page_cache_locked (21 samples, 0.01%)</title><rect x="77.7845%" y="325" width="0.0131%" height="15" fill="rgb(254,70,32)" fg:x="124326" fg:w="21"/><text x="78.0345%" y="335.50"></text></g><g><title>add_to_page_cache_lru (30 samples, 0.02%)</title><rect x="77.7845%" y="341" width="0.0188%" height="15" fill="rgb(229,75,37)" fg:x="124326" fg:w="30"/><text x="78.0345%" y="351.50"></text></g><g><title>read_pages (38 samples, 0.02%)</title><rect x="77.8038%" y="341" width="0.0238%" height="15" fill="rgb(252,64,23)" fg:x="124357" fg:w="38"/><text x="78.0538%" y="351.50"></text></g><g><title>ext4_readahead (27 samples, 0.02%)</title><rect x="77.8107%" y="325" width="0.0169%" height="15" fill="rgb(232,162,48)" fg:x="124368" fg:w="27"/><text x="78.0607%" y="335.50"></text></g><g><title>ext4_mpage_readpages (27 samples, 0.02%)</title><rect x="77.8107%" y="309" width="0.0169%" height="15" fill="rgb(246,160,12)" fg:x="124368" fg:w="27"/><text x="78.0607%" y="319.50"></text></g><g><title>page_cache_ra_unbounded (121 samples, 0.08%)</title><rect x="77.7607%" y="357" width="0.0757%" height="15" fill="rgb(247,166,0)" fg:x="124288" fg:w="121"/><text x="78.0107%" y="367.50"></text></g><g><title>page_cache_sync_ra (122 samples, 0.08%)</title><rect x="77.7607%" y="389" width="0.0763%" height="15" fill="rgb(249,219,21)" fg:x="124288" fg:w="122"/><text x="78.0107%" y="399.50"></text></g><g><title>ondemand_readahead (122 samples, 0.08%)</title><rect x="77.7607%" y="373" width="0.0763%" height="15" fill="rgb(205,209,3)" fg:x="124288" fg:w="122"/><text x="78.0107%" y="383.50"></text></g><g><title>filemap_get_pages (22,487 samples, 14.07%)</title><rect x="63.7705%" y="405" width="14.0690%" height="15" fill="rgb(243,44,1)" fg:x="101927" fg:w="22487"/><text x="64.0205%" y="415.50">filemap_get_pages</text></g><g><title>asm_common_interrupt (25 samples, 0.02%)</title><rect x="79.2610%" y="389" width="0.0156%" height="15" fill="rgb(206,159,16)" fg:x="126686" fg:w="25"/><text x="79.5110%" y="399.50"></text></g><g><title>common_interrupt (25 samples, 0.02%)</title><rect x="79.2610%" y="373" width="0.0156%" height="15" fill="rgb(244,77,30)" fg:x="126686" fg:w="25"/><text x="79.5110%" y="383.50"></text></g><g><title>__common_interrupt (25 samples, 0.02%)</title><rect x="79.2610%" y="357" width="0.0156%" height="15" fill="rgb(218,69,12)" fg:x="126686" fg:w="25"/><text x="79.5110%" y="367.50"></text></g><g><title>handle_edge_irq (24 samples, 0.02%)</title><rect x="79.2616%" y="341" width="0.0150%" height="15" fill="rgb(212,87,7)" fg:x="126687" fg:w="24"/><text x="79.5116%" y="351.50"></text></g><g><title>handle_irq_event (23 samples, 0.01%)</title><rect x="79.2622%" y="325" width="0.0144%" height="15" fill="rgb(245,114,25)" fg:x="126688" fg:w="23"/><text x="79.5122%" y="335.50"></text></g><g><title>__handle_irq_event_percpu (23 samples, 0.01%)</title><rect x="79.2622%" y="309" width="0.0144%" height="15" fill="rgb(210,61,42)" fg:x="126688" fg:w="23"/><text x="79.5122%" y="319.50"></text></g><g><title>nvme_irq (23 samples, 0.01%)</title><rect x="79.2622%" y="293" width="0.0144%" height="15" fill="rgb(211,52,33)" fg:x="126688" fg:w="23"/><text x="79.5122%" y="303.50"></text></g><g><title>nvme_process_cq (23 samples, 0.01%)</title><rect x="79.2622%" y="277" width="0.0144%" height="15" fill="rgb(234,58,33)" fg:x="126688" fg:w="23"/><text x="79.5122%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (22 samples, 0.01%)</title><rect x="79.2629%" y="261" width="0.0138%" height="15" fill="rgb(220,115,36)" fg:x="126689" fg:w="22"/><text x="79.5129%" y="271.50"></text></g><g><title>mark_page_accessed (2,297 samples, 1.44%)</title><rect x="77.8408%" y="405" width="1.4371%" height="15" fill="rgb(243,153,54)" fg:x="124416" fg:w="2297"/><text x="78.0908%" y="415.50"></text></g><g><title>filemap_read (37,345 samples, 23.36%)</title><rect x="55.9136%" y="421" width="23.3649%" height="15" fill="rgb(251,47,18)" fg:x="89369" fg:w="37345"/><text x="56.1636%" y="431.50">filemap_read</text></g><g><title>__GI___libc_read (37,381 samples, 23.39%)</title><rect x="55.8974%" y="581" width="23.3874%" height="15" fill="rgb(242,102,42)" fg:x="89343" fg:w="37381"/><text x="56.1474%" y="591.50">__GI___libc_read</text></g><g><title>__GI___libc_read (37,381 samples, 23.39%)</title><rect x="55.8974%" y="565" width="23.3874%" height="15" fill="rgb(234,31,38)" fg:x="89343" fg:w="37381"/><text x="56.1474%" y="575.50">__GI___libc_read</text></g><g><title>entry_SYSCALL_64_after_hwframe (37,381 samples, 23.39%)</title><rect x="55.8974%" y="549" width="23.3874%" height="15" fill="rgb(221,117,51)" fg:x="89343" fg:w="37381"/><text x="56.1474%" y="559.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (37,381 samples, 23.39%)</title><rect x="55.8974%" y="533" width="23.3874%" height="15" fill="rgb(212,20,18)" fg:x="89343" fg:w="37381"/><text x="56.1474%" y="543.50">do_syscall_64</text></g><g><title>__x64_sys_read (37,381 samples, 23.39%)</title><rect x="55.8974%" y="517" width="23.3874%" height="15" fill="rgb(245,133,36)" fg:x="89343" fg:w="37381"/><text x="56.1474%" y="527.50">__x64_sys_read</text></g><g><title>ksys_read (37,381 samples, 23.39%)</title><rect x="55.8974%" y="501" width="23.3874%" height="15" fill="rgb(212,6,19)" fg:x="89343" fg:w="37381"/><text x="56.1474%" y="511.50">ksys_read</text></g><g><title>vfs_read (37,380 samples, 23.39%)</title><rect x="55.8980%" y="485" width="23.3868%" height="15" fill="rgb(218,1,36)" fg:x="89344" fg:w="37380"/><text x="56.1480%" y="495.50">vfs_read</text></g><g><title>new_sync_read (37,380 samples, 23.39%)</title><rect x="55.8980%" y="469" width="23.3868%" height="15" fill="rgb(246,84,54)" fg:x="89344" fg:w="37380"/><text x="56.1480%" y="479.50">new_sync_read</text></g><g><title>ext4_file_read_iter (37,380 samples, 23.39%)</title><rect x="55.8980%" y="453" width="23.3868%" height="15" fill="rgb(242,110,6)" fg:x="89344" fg:w="37380"/><text x="56.1480%" y="463.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (37,380 samples, 23.39%)</title><rect x="55.8980%" y="437" width="23.3868%" height="15" fill="rgb(214,47,5)" fg:x="89344" fg:w="37380"/><text x="56.1480%" y="447.50">generic_file_read_iter</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (37,382 samples, 23.39%)</title><rect x="55.8974%" y="677" width="23.3880%" height="15" fill="rgb(218,159,25)" fg:x="89343" fg:w="37382"/><text x="56.1474%" y="687.50">&lt;std::io::buffered::bufreader::BufRea..</text></g><g><title>std::io::default_read_exact (37,382 samples, 23.39%)</title><rect x="55.8974%" y="661" width="23.3880%" height="15" fill="rgb(215,211,28)" fg:x="89343" fg:w="37382"/><text x="56.1474%" y="671.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (37,382 samples, 23.39%)</title><rect x="55.8974%" y="645" width="23.3880%" height="15" fill="rgb(238,59,32)" fg:x="89343" fg:w="37382"/><text x="56.1474%" y="655.50">&lt;std::io::buffered::bufreader::BufRea..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (37,382 samples, 23.39%)</title><rect x="55.8974%" y="629" width="23.3880%" height="15" fill="rgb(226,82,3)" fg:x="89343" fg:w="37382"/><text x="56.1474%" y="639.50">&lt;std::fs::File as std::io::Read&gt;::read</text></g><g><title>std::sys::unix::fs::File::read (37,382 samples, 23.39%)</title><rect x="55.8974%" y="613" width="23.3880%" height="15" fill="rgb(240,164,32)" fg:x="89343" fg:w="37382"/><text x="56.1474%" y="623.50">std::sys::unix::fs::File::read</text></g><g><title>std::sys::unix::fd::FileDesc::read (37,382 samples, 23.39%)</title><rect x="55.8974%" y="597" width="23.3880%" height="15" fill="rgb(232,46,7)" fg:x="89343" fg:w="37382"/><text x="56.1474%" y="607.50">std::sys::unix::fd::FileDesc::read</text></g><g><title>__memset_avx2_unaligned_erms (866 samples, 0.54%)</title><rect x="79.2854%" y="629" width="0.5418%" height="15" fill="rgb(229,129,53)" fg:x="126725" fg:w="866"/><text x="79.5354%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (872 samples, 0.55%)</title><rect x="79.2854%" y="677" width="0.5456%" height="15" fill="rgb(234,188,29)" fg:x="126725" fg:w="872"/><text x="79.5354%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (872 samples, 0.55%)</title><rect x="79.2854%" y="661" width="0.5456%" height="15" fill="rgb(246,141,4)" fg:x="126725" fg:w="872"/><text x="79.5354%" y="671.50"></text></g><g><title>core::ptr::write (872 samples, 0.55%)</title><rect x="79.2854%" y="645" width="0.5456%" height="15" fill="rgb(229,23,39)" fg:x="126725" fg:w="872"/><text x="79.5354%" y="655.50"></text></g><g><title>crossbeam_channel::context::Context::with (26 samples, 0.02%)</title><rect x="79.8322%" y="645" width="0.0163%" height="15" fill="rgb(206,12,3)" fg:x="127599" fg:w="26"/><text x="80.0822%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.02%)</title><rect x="79.8322%" y="629" width="0.0163%" height="15" fill="rgb(252,226,20)" fg:x="127599" fg:w="26"/><text x="80.0822%" y="639.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (26 samples, 0.02%)</title><rect x="79.8322%" y="613" width="0.0163%" height="15" fill="rgb(216,123,35)" fg:x="127599" fg:w="26"/><text x="80.0822%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (26 samples, 0.02%)</title><rect x="79.8322%" y="597" width="0.0163%" height="15" fill="rgb(212,68,40)" fg:x="127599" fg:w="26"/><text x="80.0822%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (26 samples, 0.02%)</title><rect x="79.8322%" y="581" width="0.0163%" height="15" fill="rgb(254,125,32)" fg:x="127599" fg:w="26"/><text x="80.0822%" y="591.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (26 samples, 0.02%)</title><rect x="79.8322%" y="565" width="0.0163%" height="15" fill="rgb(253,97,22)" fg:x="127599" fg:w="26"/><text x="80.0822%" y="575.50"></text></g><g><title>std::thread::park (16 samples, 0.01%)</title><rect x="79.8385%" y="549" width="0.0100%" height="15" fill="rgb(241,101,14)" fg:x="127609" fg:w="16"/><text x="80.0885%" y="559.50"></text></g><g><title>std::panic::catch_unwind (38,291 samples, 23.96%)</title><rect x="55.8974%" y="789" width="23.9567%" height="15" fill="rgb(238,103,29)" fg:x="89343" fg:w="38291"/><text x="56.1474%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (38,291 samples, 23.96%)</title><rect x="55.8974%" y="773" width="23.9567%" height="15" fill="rgb(233,195,47)" fg:x="89343" fg:w="38291"/><text x="56.1474%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (38,291 samples, 23.96%)</title><rect x="55.8974%" y="757" width="23.9567%" height="15" fill="rgb(246,218,30)" fg:x="89343" fg:w="38291"/><text x="56.1474%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (38,291 samples, 23.96%)</title><rect x="55.8974%" y="741" width="23.9567%" height="15" fill="rgb(219,145,47)" fg:x="89343" fg:w="38291"/><text x="56.1474%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwin..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (38,291 samples, 23.96%)</title><rect x="55.8974%" y="725" width="23.9567%" height="15" fill="rgb(243,12,26)" fg:x="89343" fg:w="38291"/><text x="56.1474%" y="735.50">std::thread::Builder::spawn_unchecked_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (38,291 samples, 23.96%)</title><rect x="55.8974%" y="709" width="23.9567%" height="15" fill="rgb(214,87,16)" fg:x="89343" fg:w="38291"/><text x="56.1474%" y="719.50">std::sys_common::backtrace::__rust_beg..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (38,291 samples, 23.96%)</title><rect x="55.8974%" y="693" width="23.9567%" height="15" fill="rgb(208,99,42)" fg:x="89343" fg:w="38291"/><text x="56.1474%" y="703.50">hprof_slurp::prefetch_reader::Prefetch..</text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (37 samples, 0.02%)</title><rect x="79.8309%" y="677" width="0.0231%" height="15" fill="rgb(253,99,2)" fg:x="127597" fg:w="37"/><text x="80.0809%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (35 samples, 0.02%)</title><rect x="79.8322%" y="661" width="0.0219%" height="15" fill="rgb(220,168,23)" fg:x="127599" fg:w="35"/><text x="80.0822%" y="671.50"></text></g><g><title>__clone3 (38,292 samples, 23.96%)</title><rect x="55.8974%" y="901" width="23.9574%" height="15" fill="rgb(242,38,24)" fg:x="89343" fg:w="38292"/><text x="56.1474%" y="911.50">__clone3</text></g><g><title>start_thread (38,292 samples, 23.96%)</title><rect x="55.8974%" y="885" width="23.9574%" height="15" fill="rgb(225,182,9)" fg:x="89343" fg:w="38292"/><text x="56.1474%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (38,292 samples, 23.96%)</title><rect x="55.8974%" y="869" width="23.9574%" height="15" fill="rgb(243,178,37)" fg:x="89343" fg:w="38292"/><text x="56.1474%" y="879.50">std::sys::unix::thread::Thread::new::t..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (38,292 samples, 23.96%)</title><rect x="55.8974%" y="853" width="23.9574%" height="15" fill="rgb(232,139,19)" fg:x="89343" fg:w="38292"/><text x="56.1474%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (38,292 samples, 23.96%)</title><rect x="55.8974%" y="837" width="23.9574%" height="15" fill="rgb(225,201,24)" fg:x="89343" fg:w="38292"/><text x="56.1474%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (38,292 samples, 23.96%)</title><rect x="55.8974%" y="821" width="23.9574%" height="15" fill="rgb(221,47,46)" fg:x="89343" fg:w="38292"/><text x="56.1474%" y="831.50">core::ops::function::FnOnce::call_once..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (38,292 samples, 23.96%)</title><rect x="55.8974%" y="805" width="23.9574%" height="15" fill="rgb(249,23,13)" fg:x="89343" fg:w="38292"/><text x="56.1474%" y="815.50">std::thread::Builder::spawn_unchecked_..</text></g><g><title>__irqentry_text_start (83 samples, 0.05%)</title><rect x="79.8547%" y="901" width="0.0519%" height="15" fill="rgb(219,9,5)" fg:x="127635" fg:w="83"/><text x="80.1047%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003 samples, 0.63%)</title><rect x="79.9079%" y="901" width="0.6275%" height="15" fill="rgb(254,171,16)" fg:x="127720" fg:w="1003"/><text x="80.1579%" y="911.50"></text></g><g><title>asm_sysvec_reschedule_ipi (21 samples, 0.01%)</title><rect x="80.5461%" y="901" width="0.0131%" height="15" fill="rgb(230,171,20)" fg:x="128740" fg:w="21"/><text x="80.7961%" y="911.50"></text></g><g><title>filemap_get_pages (20 samples, 0.01%)</title><rect x="80.5667%" y="757" width="0.0125%" height="15" fill="rgb(210,71,41)" fg:x="128773" fg:w="20"/><text x="80.8167%" y="767.50"></text></g><g><title>page_cache_async_ra (20 samples, 0.01%)</title><rect x="80.5667%" y="741" width="0.0125%" height="15" fill="rgb(206,173,20)" fg:x="128773" fg:w="20"/><text x="80.8167%" y="751.50"></text></g><g><title>ondemand_readahead (20 samples, 0.01%)</title><rect x="80.5667%" y="725" width="0.0125%" height="15" fill="rgb(233,88,34)" fg:x="128773" fg:w="20"/><text x="80.8167%" y="735.50"></text></g><g><title>page_cache_ra_unbounded (20 samples, 0.01%)</title><rect x="80.5667%" y="709" width="0.0125%" height="15" fill="rgb(223,209,46)" fg:x="128773" fg:w="20"/><text x="80.8167%" y="719.50"></text></g><g><title>hprof-prefetch (39,456 samples, 24.69%)</title><rect x="55.8961%" y="917" width="24.6856%" height="15" fill="rgb(250,43,18)" fg:x="89341" fg:w="39456"/><text x="56.1461%" y="927.50">hprof-prefetch</text></g><g><title>entry_SYSCALL_64_after_hwframe (36 samples, 0.02%)</title><rect x="80.5592%" y="901" width="0.0225%" height="15" fill="rgb(208,13,10)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="911.50"></text></g><g><title>do_syscall_64 (36 samples, 0.02%)</title><rect x="80.5592%" y="885" width="0.0225%" height="15" fill="rgb(212,200,36)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="895.50"></text></g><g><title>__x64_sys_read (36 samples, 0.02%)</title><rect x="80.5592%" y="869" width="0.0225%" height="15" fill="rgb(225,90,30)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="879.50"></text></g><g><title>ksys_read (36 samples, 0.02%)</title><rect x="80.5592%" y="853" width="0.0225%" height="15" fill="rgb(236,182,39)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="863.50"></text></g><g><title>vfs_read (36 samples, 0.02%)</title><rect x="80.5592%" y="837" width="0.0225%" height="15" fill="rgb(212,144,35)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="847.50"></text></g><g><title>new_sync_read (36 samples, 0.02%)</title><rect x="80.5592%" y="821" width="0.0225%" height="15" fill="rgb(228,63,44)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="831.50"></text></g><g><title>ext4_file_read_iter (36 samples, 0.02%)</title><rect x="80.5592%" y="805" width="0.0225%" height="15" fill="rgb(228,109,6)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="815.50"></text></g><g><title>generic_file_read_iter (36 samples, 0.02%)</title><rect x="80.5592%" y="789" width="0.0225%" height="15" fill="rgb(238,117,24)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="799.50"></text></g><g><title>filemap_read (36 samples, 0.02%)</title><rect x="80.5592%" y="773" width="0.0225%" height="15" fill="rgb(242,26,26)" fg:x="128761" fg:w="36"/><text x="80.8092%" y="783.50"></text></g><g><title>[anon] (16 samples, 0.01%)</title><rect x="80.5817%" y="901" width="0.0100%" height="15" fill="rgb(221,92,48)" fg:x="128797" fg:w="16"/><text x="80.8317%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (1,654 samples, 1.03%)</title><rect x="80.5917%" y="885" width="1.0348%" height="15" fill="rgb(209,209,32)" fg:x="128813" fg:w="1654"/><text x="80.8417%" y="895.50"></text></g><g><title>[unknown] (1,709 samples, 1.07%)</title><rect x="80.5917%" y="901" width="1.0692%" height="15" fill="rgb(221,70,22)" fg:x="128813" fg:w="1709"/><text x="80.8417%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24 samples, 0.02%)</title><rect x="81.6460%" y="885" width="0.0150%" height="15" fill="rgb(248,145,5)" fg:x="130498" fg:w="24"/><text x="81.8960%" y="895.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (24 samples, 0.02%)</title><rect x="81.6460%" y="869" width="0.0150%" height="15" fill="rgb(226,116,26)" fg:x="130498" fg:w="24"/><text x="81.8960%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (24 samples, 0.02%)</title><rect x="81.6460%" y="853" width="0.0150%" height="15" fill="rgb(244,5,17)" fg:x="130498" fg:w="24"/><text x="81.8960%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (24 samples, 0.02%)</title><rect x="81.6460%" y="837" width="0.0150%" height="15" fill="rgb(252,159,33)" fg:x="130498" fg:w="24"/><text x="81.8960%" y="847.50"></text></g><g><title>__malloc_arena_thread_freeres (25 samples, 0.02%)</title><rect x="81.6610%" y="869" width="0.0156%" height="15" fill="rgb(206,71,0)" fg:x="130522" fg:w="25"/><text x="81.9110%" y="879.50"></text></g><g><title>tcache_thread_shutdown (25 samples, 0.02%)</title><rect x="81.6610%" y="853" width="0.0156%" height="15" fill="rgb(233,118,54)" fg:x="130522" fg:w="25"/><text x="81.9110%" y="863.50"></text></g><g><title>__GI___libc_free (25 samples, 0.02%)</title><rect x="81.6610%" y="837" width="0.0156%" height="15" fill="rgb(234,83,48)" fg:x="130522" fg:w="25"/><text x="81.9110%" y="847.50"></text></g><g><title>_int_free (25 samples, 0.02%)</title><rect x="81.6610%" y="821" width="0.0156%" height="15" fill="rgb(228,3,54)" fg:x="130522" fg:w="25"/><text x="81.9110%" y="831.50"></text></g><g><title>malloc_consolidate (25 samples, 0.02%)</title><rect x="81.6610%" y="805" width="0.0156%" height="15" fill="rgb(226,155,13)" fg:x="130522" fg:w="25"/><text x="81.9110%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (6,749 samples, 4.22%)</title><rect x="82.4906%" y="645" width="4.2225%" height="15" fill="rgb(241,28,37)" fg:x="131848" fg:w="6749"/><text x="82.7406%" y="655.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (1,032 samples, 0.65%)</title><rect x="86.0674%" y="629" width="0.6457%" height="15" fill="rgb(233,93,10)" fg:x="137565" fg:w="1032"/><text x="86.3174%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (8,050 samples, 5.04%)</title><rect x="81.6772%" y="677" width="5.0365%" height="15" fill="rgb(225,113,19)" fg:x="130548" fg:w="8050"/><text x="81.9272%" y="687.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (8,050 samples, 5.04%)</title><rect x="81.6772%" y="661" width="5.0365%" height="15" fill="rgb(241,2,18)" fg:x="130548" fg:w="8050"/><text x="81.9272%" y="671.50">core::..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="86.7137%" y="581" width="0.0138%" height="15" fill="rgb(228,207,21)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (22 samples, 0.01%)</title><rect x="86.7137%" y="565" width="0.0138%" height="15" fill="rgb(213,211,35)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (22 samples, 0.01%)</title><rect x="86.7137%" y="549" width="0.0138%" height="15" fill="rgb(209,83,10)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (22 samples, 0.01%)</title><rect x="86.7137%" y="533" width="0.0138%" height="15" fill="rgb(209,164,1)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::boxed::Box&lt;str&gt;)&gt; (22 samples, 0.01%)</title><rect x="86.7137%" y="517" width="0.0138%" height="15" fill="rgb(213,184,43)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (22 samples, 0.01%)</title><rect x="86.7137%" y="501" width="0.0138%" height="15" fill="rgb(231,61,34)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="511.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.01%)</title><rect x="86.7137%" y="485" width="0.0138%" height="15" fill="rgb(235,75,3)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.01%)</title><rect x="86.7137%" y="469" width="0.0138%" height="15" fill="rgb(220,106,47)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.01%)</title><rect x="86.7137%" y="453" width="0.0138%" height="15" fill="rgb(210,196,33)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="463.50"></text></g><g><title>__GI___libc_free (22 samples, 0.01%)</title><rect x="86.7137%" y="437" width="0.0138%" height="15" fill="rgb(229,154,42)" fg:x="138598" fg:w="22"/><text x="86.9637%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}&gt; (23 samples, 0.01%)</title><rect x="86.7137%" y="677" width="0.0144%" height="15" fill="rgb(228,114,26)" fg:x="138598" fg:w="23"/><text x="86.9637%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (23 samples, 0.01%)</title><rect x="86.7137%" y="661" width="0.0144%" height="15" fill="rgb(208,144,1)" fg:x="138598" fg:w="23"/><text x="86.9637%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::boxed::Box&lt;str&gt;&gt;&gt; (23 samples, 0.01%)</title><rect x="86.7137%" y="645" width="0.0144%" height="15" fill="rgb(239,112,37)" fg:x="138598" fg:w="23"/><text x="86.9637%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::boxed::Box&lt;str&gt;,ahash::random_state::RandomState&gt;&gt; (23 samples, 0.01%)</title><rect x="86.7137%" y="629" width="0.0144%" height="15" fill="rgb(210,96,50)" fg:x="138598" fg:w="23"/><text x="86.9637%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::boxed::Box&lt;str&gt;,ahash::random_state::RandomState&gt;&gt; (23 samples, 0.01%)</title><rect x="86.7137%" y="613" width="0.0144%" height="15" fill="rgb(222,178,2)" fg:x="138598" fg:w="23"/><text x="86.9637%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::boxed::Box&lt;str&gt;)&gt;&gt; (23 samples, 0.01%)</title><rect x="86.7137%" y="597" width="0.0144%" height="15" fill="rgb(226,74,18)" fg:x="138598" fg:w="23"/><text x="86.9637%" y="607.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.01%)</title><rect x="86.7375%" y="453" width="0.0106%" height="15" fill="rgb(225,67,54)" fg:x="138636" fg:w="17"/><text x="86.9875%" y="463.50"></text></g><g><title>do_futex (17 samples, 0.01%)</title><rect x="86.7375%" y="437" width="0.0106%" height="15" fill="rgb(251,92,32)" fg:x="138636" fg:w="17"/><text x="86.9875%" y="447.50"></text></g><g><title>futex_wait (17 samples, 0.01%)</title><rect x="86.7375%" y="421" width="0.0106%" height="15" fill="rgb(228,149,22)" fg:x="138636" fg:w="17"/><text x="86.9875%" y="431.50"></text></g><g><title>futex_wait_queue_me (17 samples, 0.01%)</title><rect x="86.7375%" y="405" width="0.0106%" height="15" fill="rgb(243,54,13)" fg:x="138636" fg:w="17"/><text x="86.9875%" y="415.50"></text></g><g><title>schedule (17 samples, 0.01%)</title><rect x="86.7375%" y="389" width="0.0106%" height="15" fill="rgb(243,180,28)" fg:x="138636" fg:w="17"/><text x="86.9875%" y="399.50"></text></g><g><title>__schedule (17 samples, 0.01%)</title><rect x="86.7375%" y="373" width="0.0106%" height="15" fill="rgb(208,167,24)" fg:x="138636" fg:w="17"/><text x="86.9875%" y="383.50"></text></g><g><title>crossbeam_channel::context::Context::with (34 samples, 0.02%)</title><rect x="86.7281%" y="645" width="0.0213%" height="15" fill="rgb(245,73,45)" fg:x="138621" fg:w="34"/><text x="86.9781%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.02%)</title><rect x="86.7281%" y="629" width="0.0213%" height="15" fill="rgb(237,203,48)" fg:x="138621" fg:w="34"/><text x="86.9781%" y="639.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (34 samples, 0.02%)</title><rect x="86.7281%" y="613" width="0.0213%" height="15" fill="rgb(211,197,16)" fg:x="138621" fg:w="34"/><text x="86.9781%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (33 samples, 0.02%)</title><rect x="86.7287%" y="597" width="0.0206%" height="15" fill="rgb(243,99,51)" fg:x="138622" fg:w="33"/><text x="86.9787%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (33 samples, 0.02%)</title><rect x="86.7287%" y="581" width="0.0206%" height="15" fill="rgb(215,123,29)" fg:x="138622" fg:w="33"/><text x="86.9787%" y="591.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (33 samples, 0.02%)</title><rect x="86.7287%" y="565" width="0.0206%" height="15" fill="rgb(239,186,37)" fg:x="138622" fg:w="33"/><text x="86.9787%" y="575.50"></text></g><g><title>std::thread::park (20 samples, 0.01%)</title><rect x="86.7369%" y="549" width="0.0125%" height="15" fill="rgb(252,136,39)" fg:x="138635" fg:w="20"/><text x="86.9869%" y="559.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (20 samples, 0.01%)</title><rect x="86.7369%" y="533" width="0.0125%" height="15" fill="rgb(223,213,32)" fg:x="138635" fg:w="20"/><text x="86.9869%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (19 samples, 0.01%)</title><rect x="86.7375%" y="517" width="0.0119%" height="15" fill="rgb(233,115,5)" fg:x="138636" fg:w="19"/><text x="86.9875%" y="527.50"></text></g><g><title>syscall (19 samples, 0.01%)</title><rect x="86.7375%" y="501" width="0.0119%" height="15" fill="rgb(207,226,44)" fg:x="138636" fg:w="19"/><text x="86.9875%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.01%)</title><rect x="86.7375%" y="485" width="0.0119%" height="15" fill="rgb(208,126,0)" fg:x="138636" fg:w="19"/><text x="86.9875%" y="495.50"></text></g><g><title>do_syscall_64 (19 samples, 0.01%)</title><rect x="86.7375%" y="469" width="0.0119%" height="15" fill="rgb(244,66,21)" fg:x="138636" fg:w="19"/><text x="86.9875%" y="479.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (50 samples, 0.03%)</title><rect x="86.7281%" y="677" width="0.0313%" height="15" fill="rgb(222,97,12)" fg:x="138621" fg:w="50"/><text x="86.9781%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (50 samples, 0.03%)</title><rect x="86.7281%" y="661" width="0.0313%" height="15" fill="rgb(219,213,19)" fg:x="138621" fg:w="50"/><text x="86.9781%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (345 samples, 0.22%)</title><rect x="86.7594%" y="645" width="0.2158%" height="15" fill="rgb(252,169,30)" fg:x="138671" fg:w="345"/><text x="87.0094%" y="655.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (334 samples, 0.21%)</title><rect x="86.7663%" y="629" width="0.2090%" height="15" fill="rgb(206,32,51)" fg:x="138682" fg:w="334"/><text x="87.0163%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (334 samples, 0.21%)</title><rect x="86.7663%" y="613" width="0.2090%" height="15" fill="rgb(250,172,42)" fg:x="138682" fg:w="334"/><text x="87.0163%" y="623.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (16 samples, 0.01%)</title><rect x="92.2563%" y="629" width="0.0100%" height="15" fill="rgb(209,34,43)" fg:x="147457" fg:w="16"/><text x="92.5063%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (16 samples, 0.01%)</title><rect x="92.2563%" y="613" width="0.0100%" height="15" fill="rgb(223,11,35)" fg:x="147457" fg:w="16"/><text x="92.5063%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (44 samples, 0.03%)</title><rect x="92.2695%" y="629" width="0.0275%" height="15" fill="rgb(251,219,26)" fg:x="147478" fg:w="44"/><text x="92.5195%" y="639.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (1,103 samples, 0.69%)</title><rect x="92.2970%" y="629" width="0.6901%" height="15" fill="rgb(231,119,3)" fg:x="147522" fg:w="1103"/><text x="92.5470%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (1,157 samples, 0.72%)</title><rect x="93.0240%" y="549" width="0.7239%" height="15" fill="rgb(216,97,11)" fg:x="148684" fg:w="1157"/><text x="93.2740%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (772 samples, 0.48%)</title><rect x="93.2649%" y="533" width="0.4830%" height="15" fill="rgb(223,59,9)" fg:x="149069" fg:w="772"/><text x="93.5149%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,527 samples, 0.96%)</title><rect x="93.0240%" y="565" width="0.9554%" height="15" fill="rgb(233,93,31)" fg:x="148684" fg:w="1527"/><text x="93.2740%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (370 samples, 0.23%)</title><rect x="93.7479%" y="549" width="0.2315%" height="15" fill="rgb(239,81,33)" fg:x="149841" fg:w="370"/><text x="93.9979%" y="559.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::hash::Hash&gt;::hash (18 samples, 0.01%)</title><rect x="93.9794%" y="549" width="0.0113%" height="15" fill="rgb(213,120,34)" fg:x="150211" fg:w="18"/><text x="94.2294%" y="559.50"></text></g><g><title>ahash::operations::folded_multiply (746 samples, 0.47%)</title><rect x="94.0094%" y="501" width="0.4667%" height="15" fill="rgb(243,49,53)" fg:x="150259" fg:w="746"/><text x="94.2594%" y="511.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (683 samples, 0.43%)</title><rect x="94.0488%" y="485" width="0.4273%" height="15" fill="rgb(247,216,33)" fg:x="150322" fg:w="683"/><text x="94.2988%" y="495.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,323 samples, 1.45%)</title><rect x="93.0240%" y="597" width="1.4534%" height="15" fill="rgb(226,26,14)" fg:x="148684" fg:w="2323"/><text x="93.2740%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,323 samples, 1.45%)</title><rect x="93.0240%" y="581" width="1.4534%" height="15" fill="rgb(215,49,53)" fg:x="148684" fg:w="2323"/><text x="93.2740%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (796 samples, 0.50%)</title><rect x="93.9794%" y="565" width="0.4980%" height="15" fill="rgb(245,162,40)" fg:x="150211" fg:w="796"/><text x="94.2294%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (778 samples, 0.49%)</title><rect x="93.9906%" y="549" width="0.4868%" height="15" fill="rgb(229,68,17)" fg:x="150229" fg:w="778"/><text x="94.2406%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (778 samples, 0.49%)</title><rect x="93.9906%" y="533" width="0.4868%" height="15" fill="rgb(213,182,10)" fg:x="150229" fg:w="778"/><text x="94.2406%" y="543.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (778 samples, 0.49%)</title><rect x="93.9906%" y="517" width="0.4868%" height="15" fill="rgb(245,125,30)" fg:x="150229" fg:w="778"/><text x="94.2406%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,474 samples, 0.92%)</title><rect x="95.0574%" y="565" width="0.9222%" height="15" fill="rgb(232,202,2)" fg:x="151934" fg:w="1474"/><text x="95.3074%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,179 samples, 0.74%)</title><rect x="95.2419%" y="549" width="0.7376%" height="15" fill="rgb(237,140,51)" fg:x="152229" fg:w="1179"/><text x="95.4919%" y="559.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (29 samples, 0.02%)</title><rect x="95.9908%" y="565" width="0.0181%" height="15" fill="rgb(236,157,25)" fg:x="153426" fg:w="29"/><text x="96.2408%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (815 samples, 0.51%)</title><rect x="96.0090%" y="549" width="0.5099%" height="15" fill="rgb(219,209,0)" fg:x="153455" fg:w="815"/><text x="96.2590%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (815 samples, 0.51%)</title><rect x="96.0090%" y="533" width="0.5099%" height="15" fill="rgb(240,116,54)" fg:x="153455" fg:w="815"/><text x="96.2590%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (801 samples, 0.50%)</title><rect x="96.0177%" y="517" width="0.5011%" height="15" fill="rgb(216,10,36)" fg:x="153469" fg:w="801"/><text x="96.2677%" y="527.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (22 samples, 0.01%)</title><rect x="96.5189%" y="533" width="0.0138%" height="15" fill="rgb(222,72,44)" fg:x="154270" fg:w="22"/><text x="96.7689%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,327 samples, 1.46%)</title><rect x="96.0090%" y="565" width="1.4559%" height="15" fill="rgb(232,159,9)" fg:x="153455" fg:w="2327"/><text x="96.2590%" y="575.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1,512 samples, 0.95%)</title><rect x="96.5189%" y="549" width="0.9460%" height="15" fill="rgb(210,39,32)" fg:x="154270" fg:w="1512"/><text x="96.7689%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1,490 samples, 0.93%)</title><rect x="96.5327%" y="533" width="0.9322%" height="15" fill="rgb(216,194,45)" fg:x="154292" fg:w="1490"/><text x="96.7827%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,531 samples, 0.96%)</title><rect x="97.4649%" y="565" width="0.9579%" height="15" fill="rgb(218,18,35)" fg:x="155782" fg:w="1531"/><text x="97.7149%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (601 samples, 0.38%)</title><rect x="98.4234%" y="565" width="0.3760%" height="15" fill="rgb(207,83,51)" fg:x="157314" fg:w="601"/><text x="98.6734%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (430 samples, 0.27%)</title><rect x="98.7994%" y="565" width="0.2690%" height="15" fill="rgb(225,63,43)" fg:x="157915" fg:w="430"/><text x="99.0494%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (430 samples, 0.27%)</title><rect x="98.7994%" y="549" width="0.2690%" height="15" fill="rgb(207,57,36)" fg:x="157915" fg:w="430"/><text x="99.0494%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (430 samples, 0.27%)</title><rect x="98.7994%" y="533" width="0.2690%" height="15" fill="rgb(216,99,33)" fg:x="157915" fg:w="430"/><text x="99.0494%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (961 samples, 0.60%)</title><rect x="99.0684%" y="565" width="0.6012%" height="15" fill="rgb(225,42,16)" fg:x="158345" fg:w="961"/><text x="99.3184%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (961 samples, 0.60%)</title><rect x="99.0684%" y="549" width="0.6012%" height="15" fill="rgb(220,201,45)" fg:x="158345" fg:w="961"/><text x="99.3184%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (332 samples, 0.21%)</title><rect x="99.6697%" y="565" width="0.2077%" height="15" fill="rgb(225,33,4)" fg:x="159306" fg:w="332"/><text x="99.9197%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (332 samples, 0.21%)</title><rect x="99.6697%" y="549" width="0.2077%" height="15" fill="rgb(224,33,50)" fg:x="159306" fg:w="332"/><text x="99.9197%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (332 samples, 0.21%)</title><rect x="99.6697%" y="533" width="0.2077%" height="15" fill="rgb(246,198,51)" fg:x="159306" fg:w="332"/><text x="99.9197%" y="543.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10,996 samples, 6.88%)</title><rect x="92.9984%" y="613" width="6.8796%" height="15" fill="rgb(205,22,4)" fg:x="148643" fg:w="10996"/><text x="93.2484%" y="623.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,632 samples, 5.40%)</title><rect x="94.4774%" y="597" width="5.4006%" height="15" fill="rgb(206,3,8)" fg:x="151007" fg:w="8632"/><text x="94.7274%" y="607.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8,632 samples, 5.40%)</title><rect x="94.4774%" y="581" width="5.4006%" height="15" fill="rgb(251,23,15)" fg:x="151007" fg:w="8632"/><text x="94.7274%" y="591.50">hashbro..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11,028 samples, 6.90%)</title><rect x="92.9909%" y="629" width="6.8997%" height="15" fill="rgb(252,88,28)" fg:x="148631" fg:w="11028"/><text x="93.2409%" y="639.50">std::coll..</text></g><g><title>std::collections::hash::map::map_entry (20 samples, 0.01%)</title><rect x="99.8780%" y="613" width="0.0125%" height="15" fill="rgb(212,127,14)" fg:x="159639" fg:w="20"/><text x="100.1280%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (20,989 samples, 13.13%)</title><rect x="86.7594%" y="677" width="13.1317%" height="15" fill="rgb(247,145,37)" fg:x="138671" fg:w="20989"/><text x="87.0094%" y="687.50">hprof_slurp::result_..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (20,989 samples, 13.13%)</title><rect x="86.7594%" y="661" width="13.1317%" height="15" fill="rgb(209,117,53)" fg:x="138671" fg:w="20989"/><text x="87.0094%" y="671.50">&lt;core::slice::iter::..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (20,644 samples, 12.92%)</title><rect x="86.9752%" y="645" width="12.9159%" height="15" fill="rgb(212,90,42)" fg:x="139016" fg:w="20644"/><text x="87.2252%" y="655.50">hprof_slurp::result..</text></g><g><title>__clone3 (29,146 samples, 18.24%)</title><rect x="81.6610%" y="901" width="18.2352%" height="15" fill="rgb(218,164,37)" fg:x="130522" fg:w="29146"/><text x="81.9110%" y="911.50">__clone3</text></g><g><title>start_thread (29,146 samples, 18.24%)</title><rect x="81.6610%" y="885" width="18.2352%" height="15" fill="rgb(246,65,34)" fg:x="130522" fg:w="29146"/><text x="81.9110%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (29,121 samples, 18.22%)</title><rect x="81.6766%" y="869" width="18.2195%" height="15" fill="rgb(231,100,33)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="879.50">std::sys::unix::thread::Thre..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29,121 samples, 18.22%)</title><rect x="81.6766%" y="853" width="18.2195%" height="15" fill="rgb(228,126,14)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29,121 samples, 18.22%)</title><rect x="81.6766%" y="837" width="18.2195%" height="15" fill="rgb(215,173,21)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (29,121 samples, 18.22%)</title><rect x="81.6766%" y="821" width="18.2195%" height="15" fill="rgb(210,6,40)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="831.50">core::ops::function::FnOnce:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (29,121 samples, 18.22%)</title><rect x="81.6766%" y="805" width="18.2195%" height="15" fill="rgb(212,48,18)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="815.50">std::thread::Builder::spawn_..</text></g><g><title>std::panic::catch_unwind (29,121 samples, 18.22%)</title><rect x="81.6766%" y="789" width="18.2195%" height="15" fill="rgb(230,214,11)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (29,121 samples, 18.22%)</title><rect x="81.6766%" y="773" width="18.2195%" height="15" fill="rgb(254,105,39)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (29,121 samples, 18.22%)</title><rect x="81.6766%" y="757" width="18.2195%" height="15" fill="rgb(245,158,5)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29,121 samples, 18.22%)</title><rect x="81.6766%" y="741" width="18.2195%" height="15" fill="rgb(249,208,11)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="751.50">&lt;core::panic::unwind_safe::A..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (29,121 samples, 18.22%)</title><rect x="81.6766%" y="725" width="18.2195%" height="15" fill="rgb(210,39,28)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="735.50">std::thread::Builder::spawn_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29,121 samples, 18.22%)</title><rect x="81.6766%" y="709" width="18.2195%" height="15" fill="rgb(211,56,53)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="719.50">std::sys_common::backtrace::..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (29,121 samples, 18.22%)</title><rect x="81.6766%" y="693" width="18.2195%" height="15" fill="rgb(226,201,30)" fg:x="130547" fg:w="29121"/><text x="81.9266%" y="703.50">hprof_slurp::result_recorder..</text></g><g><title>hprof-recorder (30,878 samples, 19.32%)</title><rect x="80.5817%" y="917" width="19.3188%" height="15" fill="rgb(239,101,34)" fg:x="128797" fg:w="30878"/><text x="80.8317%" y="927.50">hprof-recorder</text></g><g><title>__perf_event_task_sched_in (36 samples, 0.02%)</title><rect x="99.9187%" y="261" width="0.0225%" height="15" fill="rgb(226,209,5)" fg:x="159704" fg:w="36"/><text x="100.1687%" y="271.50"></text></g><g><title>x86_pmu_enable (36 samples, 0.02%)</title><rect x="99.9187%" y="245" width="0.0225%" height="15" fill="rgb(250,105,47)" fg:x="159704" fg:w="36"/><text x="100.1687%" y="255.50"></text></g><g><title>intel_pmu_enable_all (36 samples, 0.02%)</title><rect x="99.9187%" y="229" width="0.0225%" height="15" fill="rgb(230,72,3)" fg:x="159704" fg:w="36"/><text x="100.1687%" y="239.50"></text></g><g><title>native_write_msr (36 samples, 0.02%)</title><rect x="99.9187%" y="213" width="0.0225%" height="15" fill="rgb(232,218,39)" fg:x="159704" fg:w="36"/><text x="100.1687%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (37 samples, 0.02%)</title><rect x="99.9187%" y="277" width="0.0231%" height="15" fill="rgb(248,166,6)" fg:x="159704" fg:w="37"/><text x="100.1687%" y="287.50"></text></g><g><title>__schedule (41 samples, 0.03%)</title><rect x="99.9168%" y="293" width="0.0257%" height="15" fill="rgb(247,89,20)" fg:x="159701" fg:w="41"/><text x="100.1668%" y="303.50"></text></g><g><title>__x64_sys_futex (42 samples, 0.03%)</title><rect x="99.9168%" y="373" width="0.0263%" height="15" fill="rgb(248,130,54)" fg:x="159701" fg:w="42"/><text x="100.1668%" y="383.50"></text></g><g><title>do_futex (42 samples, 0.03%)</title><rect x="99.9168%" y="357" width="0.0263%" height="15" fill="rgb(234,196,4)" fg:x="159701" fg:w="42"/><text x="100.1668%" y="367.50"></text></g><g><title>futex_wait (42 samples, 0.03%)</title><rect x="99.9168%" y="341" width="0.0263%" height="15" fill="rgb(250,143,31)" fg:x="159701" fg:w="42"/><text x="100.1668%" y="351.50"></text></g><g><title>futex_wait_queue_me (42 samples, 0.03%)</title><rect x="99.9168%" y="325" width="0.0263%" height="15" fill="rgb(211,110,34)" fg:x="159701" fg:w="42"/><text x="100.1668%" y="335.50"></text></g><g><title>schedule (42 samples, 0.03%)</title><rect x="99.9168%" y="309" width="0.0263%" height="15" fill="rgb(215,124,48)" fg:x="159701" fg:w="42"/><text x="100.1668%" y="319.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (48 samples, 0.03%)</title><rect x="99.9155%" y="453" width="0.0300%" height="15" fill="rgb(216,46,13)" fg:x="159699" fg:w="48"/><text x="100.1655%" y="463.50"></text></g><g><title>std::sys::unix::futex::futex_wait (48 samples, 0.03%)</title><rect x="99.9155%" y="437" width="0.0300%" height="15" fill="rgb(205,184,25)" fg:x="159699" fg:w="48"/><text x="100.1655%" y="447.50"></text></g><g><title>syscall (47 samples, 0.03%)</title><rect x="99.9162%" y="421" width="0.0294%" height="15" fill="rgb(228,1,10)" fg:x="159700" fg:w="47"/><text x="100.1662%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (47 samples, 0.03%)</title><rect x="99.9162%" y="405" width="0.0294%" height="15" fill="rgb(213,116,27)" fg:x="159700" fg:w="47"/><text x="100.1662%" y="415.50"></text></g><g><title>do_syscall_64 (47 samples, 0.03%)</title><rect x="99.9162%" y="389" width="0.0294%" height="15" fill="rgb(241,95,50)" fg:x="159700" fg:w="47"/><text x="100.1662%" y="399.50"></text></g><g><title>crossbeam_channel::context::Context::with (54 samples, 0.03%)</title><rect x="99.9124%" y="565" width="0.0338%" height="15" fill="rgb(238,48,32)" fg:x="159694" fg:w="54"/><text x="100.1624%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.03%)</title><rect x="99.9124%" y="549" width="0.0338%" height="15" fill="rgb(235,113,49)" fg:x="159694" fg:w="54"/><text x="100.1624%" y="559.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (54 samples, 0.03%)</title><rect x="99.9124%" y="533" width="0.0338%" height="15" fill="rgb(205,127,43)" fg:x="159694" fg:w="54"/><text x="100.1624%" y="543.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (53 samples, 0.03%)</title><rect x="99.9130%" y="517" width="0.0332%" height="15" fill="rgb(250,162,2)" fg:x="159695" fg:w="53"/><text x="100.1630%" y="527.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (53 samples, 0.03%)</title><rect x="99.9130%" y="501" width="0.0332%" height="15" fill="rgb(220,13,41)" fg:x="159695" fg:w="53"/><text x="100.1630%" y="511.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (53 samples, 0.03%)</title><rect x="99.9130%" y="485" width="0.0332%" height="15" fill="rgb(249,221,25)" fg:x="159695" fg:w="53"/><text x="100.1630%" y="495.50"></text></g><g><title>std::thread::park (50 samples, 0.03%)</title><rect x="99.9149%" y="469" width="0.0313%" height="15" fill="rgb(215,208,19)" fg:x="159698" fg:w="50"/><text x="100.1649%" y="479.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (62 samples, 0.04%)</title><rect x="99.9124%" y="597" width="0.0388%" height="15" fill="rgb(236,175,2)" fg:x="159694" fg:w="62"/><text x="100.1624%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (62 samples, 0.04%)</title><rect x="99.9124%" y="581" width="0.0388%" height="15" fill="rgb(241,52,2)" fg:x="159694" fg:w="62"/><text x="100.1624%" y="591.50"></text></g><g><title>indicatif::draw_target::Drawable::draw (16 samples, 0.01%)</title><rect x="99.9531%" y="533" width="0.0100%" height="15" fill="rgb(248,140,14)" fg:x="159759" fg:w="16"/><text x="100.2031%" y="543.50"></text></g><g><title>indicatif::draw_target::DrawState::draw_to_term (16 samples, 0.01%)</title><rect x="99.9531%" y="517" width="0.0100%" height="15" fill="rgb(253,22,42)" fg:x="159759" fg:w="16"/><text x="100.2031%" y="527.50"></text></g><g><title>&lt;console::utils::StyledObject&lt;D&gt; as core::fmt::Display&gt;::fmt (17 samples, 0.01%)</title><rect x="99.9693%" y="485" width="0.0106%" height="15" fill="rgb(234,61,47)" fg:x="159785" fg:w="17"/><text x="100.2193%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (24 samples, 0.02%)</title><rect x="99.9687%" y="517" width="0.0150%" height="15" fill="rgb(208,226,15)" fg:x="159784" fg:w="24"/><text x="100.2187%" y="527.50"></text></g><g><title>core::fmt::write (24 samples, 0.02%)</title><rect x="99.9687%" y="501" width="0.0150%" height="15" fill="rgb(217,221,4)" fg:x="159784" fg:w="24"/><text x="100.2187%" y="511.50"></text></g><g><title>indicatif::state::BarState::tick (51 samples, 0.03%)</title><rect x="99.9531%" y="581" width="0.0319%" height="15" fill="rgb(212,174,34)" fg:x="159759" fg:w="51"/><text x="100.2031%" y="591.50"></text></g><g><title>indicatif::state::BarState::update_estimate_and_draw (51 samples, 0.03%)</title><rect x="99.9531%" y="565" width="0.0319%" height="15" fill="rgb(253,83,4)" fg:x="159759" fg:w="51"/><text x="100.2031%" y="575.50"></text></g><g><title>indicatif::state::BarState::draw (51 samples, 0.03%)</title><rect x="99.9531%" y="549" width="0.0319%" height="15" fill="rgb(250,195,49)" fg:x="159759" fg:w="51"/><text x="100.2031%" y="559.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (28 samples, 0.02%)</title><rect x="99.9675%" y="533" width="0.0175%" height="15" fill="rgb(241,192,25)" fg:x="159782" fg:w="28"/><text x="100.2175%" y="543.50"></text></g><g><title>_start (118 samples, 0.07%)</title><rect x="99.9124%" y="901" width="0.0738%" height="15" fill="rgb(208,124,10)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="911.50"></text></g><g><title>__libc_start_main_impl (118 samples, 0.07%)</title><rect x="99.9124%" y="885" width="0.0738%" height="15" fill="rgb(222,33,0)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="895.50"></text></g><g><title>__libc_start_call_main (118 samples, 0.07%)</title><rect x="99.9124%" y="869" width="0.0738%" height="15" fill="rgb(234,209,28)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="879.50"></text></g><g><title>main (118 samples, 0.07%)</title><rect x="99.9124%" y="853" width="0.0738%" height="15" fill="rgb(224,11,23)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (118 samples, 0.07%)</title><rect x="99.9124%" y="837" width="0.0738%" height="15" fill="rgb(232,99,1)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="847.50"></text></g><g><title>std::panic::catch_unwind (118 samples, 0.07%)</title><rect x="99.9124%" y="821" width="0.0738%" height="15" fill="rgb(237,95,45)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="831.50"></text></g><g><title>std::panicking::try (118 samples, 0.07%)</title><rect x="99.9124%" y="805" width="0.0738%" height="15" fill="rgb(208,109,11)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="815.50"></text></g><g><title>std::panicking::try::do_call (118 samples, 0.07%)</title><rect x="99.9124%" y="789" width="0.0738%" height="15" fill="rgb(216,190,48)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (118 samples, 0.07%)</title><rect x="99.9124%" y="773" width="0.0738%" height="15" fill="rgb(251,171,36)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="783.50"></text></g><g><title>std::panic::catch_unwind (118 samples, 0.07%)</title><rect x="99.9124%" y="757" width="0.0738%" height="15" fill="rgb(230,62,22)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="767.50"></text></g><g><title>std::panicking::try (118 samples, 0.07%)</title><rect x="99.9124%" y="741" width="0.0738%" height="15" fill="rgb(225,114,35)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="751.50"></text></g><g><title>std::panicking::try::do_call (118 samples, 0.07%)</title><rect x="99.9124%" y="725" width="0.0738%" height="15" fill="rgb(215,118,42)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (118 samples, 0.07%)</title><rect x="99.9124%" y="709" width="0.0738%" height="15" fill="rgb(243,119,21)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (118 samples, 0.07%)</title><rect x="99.9124%" y="693" width="0.0738%" height="15" fill="rgb(252,177,53)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (118 samples, 0.07%)</title><rect x="99.9124%" y="677" width="0.0738%" height="15" fill="rgb(237,209,29)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (118 samples, 0.07%)</title><rect x="99.9124%" y="661" width="0.0738%" height="15" fill="rgb(212,65,23)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="671.50"></text></g><g><title>hprof_slurp::main (118 samples, 0.07%)</title><rect x="99.9124%" y="645" width="0.0738%" height="15" fill="rgb(230,222,46)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="655.50"></text></g><g><title>hprof_slurp::main_result (118 samples, 0.07%)</title><rect x="99.9124%" y="629" width="0.0738%" height="15" fill="rgb(215,135,32)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="639.50"></text></g><g><title>hprof_slurp::slurp::slurp_file (118 samples, 0.07%)</title><rect x="99.9124%" y="613" width="0.0738%" height="15" fill="rgb(246,101,22)" fg:x="159694" fg:w="118"/><text x="100.1624%" y="623.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (56 samples, 0.04%)</title><rect x="99.9512%" y="597" width="0.0350%" height="15" fill="rgb(206,107,13)" fg:x="159756" fg:w="56"/><text x="100.2012%" y="607.50"></text></g><g><title>hprof-slurp (154 samples, 0.10%)</title><rect x="99.9005%" y="917" width="0.0963%" height="15" fill="rgb(250,100,44)" fg:x="159675" fg:w="154"/><text x="100.1505%" y="927.50"></text></g><g><title>all (159,834 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(231,147,38)" fg:x="0" fg:w="159834"/><text x="0.2500%" y="943.50"></text></g></svg></svg>